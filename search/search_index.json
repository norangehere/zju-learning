{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to Range's Notebook","text":"<p>Hello \u6b22\u8fce\u6765\u6211\u7684 notebook \u770b\u634f\uff0c\u76ee\u524d\u8fd8\u5f88\u7b80\u964b\uff0c\u671f\u5f85\u6162\u6162\u5b8c\u5584</p>"},{"location":"#something","title":"Something","text":"<p> My GitHub</p> <p> My Gmail and My ZJU Email</p>"},{"location":"ADS/","title":"Advanced Data Structure and Algorithm Analysis","text":"<p>Abstract</p> <ul> <li>2024spring</li> <li>Teacher: \u6768\u6d0b</li> <li>\u4ee5\u4e0b\u4e24\u4e2a\u94fe\u63a5\u4e3a\u590d\u4e60\u65f6\u53c2\u8003PPT\u548cwyy\u7684\u8bb2\u4e49\u6574\u7406\u7684\uff0c\u4e0a\u8bfe\u624b\u5199\u7b14\u8bb0\u89c1\u4e0b\u65b9(\u8fd8\u6ca1\u653e)</li> </ul>"},{"location":"ADS/collection/","title":"\u9519\u9898","text":""},{"location":"ADS/collection/#1-avl-splay-amortized-analysis","title":"1 AVL, Splay, Amortized Analysis","text":"<ul> <li>push\uff0ccost\u4e3a1</li> <li>pop\uff0c\u82e5B\u4e0d\u4e3a\u7a7a\uff0ccost\u4e3a1\uff0c\u82e5B\u4e3a\u7a7a\uff0c\u5219cost\u4e3a\\(2|S_A|+1\\)\uff0c\u56e0\u4e3a\u9700\u8981\u628aA\u4e2d\u6240\u6709\u90fd\u4eceA\u4e2dpop\u51fa\u6765\uff0cpush\u8fdbB\uff0c\u56e0\u6b64\u9009D\uff0c\u8fd9\u6837\u5bf9\u6bcf\u4e00\u4e2apop\u64cd\u4f5c\uff0c\\(c_i+\\phi_{i+1}-\\phi_i\\)\u90fd\u4e00\u6837</li> </ul> <p>\u6ce8\u610f\u770b\u9009\u9879\uff0c\u6709\u7ec6\u5fae\u533a\u522b</p>"},{"location":"ADS/collection/#2-red-black-tree-b-tree","title":"2 Red-Black Tree, B+ Tree","text":"<p>\u5b9a\u4e49\u4e2d\\(n_0=1\\)\uff0c\u56e0\u6b64empty\u5e94\u5bf9\u5e94\u9ad8\u5ea6-1\uff0c\u5728\u6b64\u57fa\u7840\u624d\u53ef\u4ee5\u8fd0\u7528\u516c\u5f0f</p> <p>Fib: \\(F_0=0,F_1=1,F_2=1,F_3=2\\)</p>"},{"location":"ADS/collection/#3","title":"3 \u5012\u6392\u7d22\u5f15","text":""},{"location":"ADS/collection/#4-leftist-heap-skew-heap","title":"4 Leftist Heap, Skew Heap","text":"<p>\u9009D\uff0c\u770b\u52a0\u7c97\u90e8\u5206</p> <p>A worst-case\u662f\\(O(N)\\)</p>"},{"location":"ADS/collection/#5-binomial-queue","title":"5 Binomial Queue","text":""},{"location":"ADS/collection/#6-backtracking","title":"6 Backtracking","text":"<p>Answer</p> <p>\u8003\u8651\u5728\u5f53\u524d\u60c5\u51b5\u4e0b\uff0c\u4e24\u65b9\u80fd\u8d62\u8fde\u7ebf\u6709\u51e0\u79cd</p> <p></p> <p>\u8fd9\u91cc\u753b\u51fa\u6765\u7684\u662f\u6700\u7ec8\u60c5\u51b5\u4e0b\uff0c\u82e5\u8d62\u5bf9\u5e94\u8d62\u7684\u65b9\u5f0f\uff0c\u56e0\u6b643-3=0</p>"},{"location":"ADS/collection/#7","title":"7 \u5206\u6cbb","text":""},{"location":"ADS/collection/#8-dynamic-programming","title":"8 Dynamic Programming","text":""},{"location":"ADS/collection/#10-p-np","title":"10 P &amp; NP","text":""},{"location":"ADS/collection/#12-local-search","title":"12 Local Search","text":"<p>Greedy\u662f\u4e0d\u65ad\u524d\u8fdb\uff0c\u6700\u540e\u8fbe\u5230\u89e3\u3002\u800clocal search\u662f\u4e0d\u65ad\u4fee\u6539\u503c\uff0c\u9009\u62e9\u4e00\u4e2a\u6700\u4f73\u7684\u89e3\u3002\u6c42\u51fa\u7684\u6bcf\u4e00\u4e2a\u89e3\u90fd\u662f\u6700\u7ec8\u7684\u89e3\u3002</p> <p>\u540e\u9762\u6446\u4e86qwq</p>"},{"location":"ADS/review/","title":"ADS Brief Review","text":""},{"location":"ADS/review/#1-avl-tree-splay-tree","title":"1 AVL Tree, Splay Tree","text":"<ol> <li>AVL \u63d2\u5165\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f\\(O(\\log n)\\)</li> <li>\\(n_h=F_{n+2}-1\\)</li> <li>Splay: \u628a\u6240\u6709\u7ed3\u70b9\u7684\u540e\u4ee3\u53d6\u5bf9\u6570\u7136\u540e\u6c42\u548c\u7684\u65b9\u5f0f\u5b9a\u4e49\u52bf\u51fd\u6570 \\(\\sum\\limits_{i\\in T}\\log S(i)\\)</li> </ol> <ul> <li>\u5219\u5747\u644a\u4ee3\u4ef7\\(\\sum\\hat{c_i}\\leq1+3(R_2(x)-R_1(x))\\)</li> </ul> <ol> <li>Splay \u641c\u7d22\u63d2\u5165\u5220\u9664\u90fd\u662f\\(O(\\log n)\\)</li> </ol>"},{"location":"ADS/review/#2-red-black-tree-and-b-tree","title":"2 Red-Black Tree and B+ Tree","text":""},{"location":"ADS/review/#red-black","title":"Red-Black","text":"<ol> <li>n \u4e2a\u5185\u90e8\u7ed3\u70b9\u7684\u7ea2\u9ed1\u6811\u9ad8\u5ea6\u81f3\u591a\\(2\\log(n+1)\\)</li> <li>\u4ee5 X \u4e3a\u5b50\u8282\u70b9\u7684\u5b50\u6811\u81f3\u5c11\u6709\\(2^{bh(x)}-1\\)\u4e2a\u5185\u90e8\u7ed3\u70b9</li> <li>\u63d2\u5165\uff1a\\(O(\\log n)\\),\u5176\u4e2d\u81f3\u591a\u65cb\u8f6c 2 \u6b21\uff0c\u67d3\u8272 \\(O(\\log n)\\)</li> <li>\u5220\u9664\u4e5f\u662f\\(O(\\log n)\\),\u5176\u4e2d\u81f3\u591a\u65cb\u8f6c 3 \u6b21\uff0c\u67d3\u8272 \\(O(\\log n)\\)</li> </ol>"},{"location":"ADS/review/#b","title":"B+","text":"<ol> <li>\u641c\u7d22\\(O(\\log n)\\),\u63d2\u5165\u5220\u9664\\(O(\\frac{M}{\\log M}\\log N)\\)</li> </ol>"},{"location":"ADS/review/#3-inverted-file-index","title":"3 Inverted File Index","text":"<ol> <li>data retrieval: response time, index space</li> <li>information retrieval: relevant</li> </ol>"},{"location":"ADS/review/#4-leftist-heap-and-skew-heap","title":"4 Leftist Heap and Skew Heap","text":""},{"location":"ADS/review/#leftist-heap","title":"Leftist Heap","text":"<ol> <li>\\(Npl(null)=-1\\)</li> <li>merge \u65f6\u95f4\u590d\u6742\u5ea6\\(O(\\log n)\\)</li> </ol> <ul> <li>\\(O(\\log N_1+\\log N_2)=O(\\log N_1N_2)=O(\\log \\sqrt{N_1N_2})=O(\\log(N_1+N_2))\\)</li> </ul>"},{"location":"ADS/review/#skew-heap","title":"Skew Heap","text":"<ol> <li>base case: \u5904\u7406 H \u4e0e null \u8fde\u63a5\u7684\u60c5\u51b5\u65f6,\u5de6\u5f0f\u5806\u76f4\u63a5\u8fd4\u56de H \u5373\u53ef\uff0c\u4f46\u659c\u5806\u5fc5\u987b\u770b H \u7684\u53f3\u8def\u5f84\uff0c\u6211\u4eec\u8981\u6c42 H \u53f3\u8def\u5f84\u4e0a\u9664\u4e86\u6700\u5927\u7ed3\u70b9\u4e4b\u5916\u90fd\u5fc5\u987b\u4ea4\u6362\u5176\u5de6\u53f3\u5b69\u5b50\u3002</li> <li>heavy: \u5982\u679c P \u7684\u53f3\u5b50\u6811\u7ed3\u70b9\u4e2a\u6570\u81f3\u5c11\u662f P \u7684\u6240\u6709\u540e\u4ee3\u7684\u4e00\u534a\uff08\u540e\u4ee3\u5305\u62ec P \u81ea\u8eab\uff09</li> <li>\\(\\hat{c_i}\\leq2(l_1+l_2)\\) merge \u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\\(O(\\log n)\\)</li> </ol>"},{"location":"ADS/review/#5-binomial-queue","title":"5 Binomial Queue","text":"<ol> <li>\\(B_k\\)\u5728\u6df1\u5ea6 d \u5904\u8282\u70b9\u6570\u4e3a\\(C_k^d\\)</li> <li>FirstChild, NextSibling \u540c\u4e00\u5c42\u9ad8\u5ea6\u7531\u5de6\u5f80\u53f3\u9012\u51cf\uff0c\u4f7f\u5f97 merge \u8fdb\u6765\u7684\u6811\u53ef\u4ee5\u76f4\u63a5\u653e\u5728\u6700\u5de6\u4fa7</li> <li>\\(!!T\\)\u8868\u793a\u5c06\u975e\u96f6\u7684\u53d8\u6210 1</li> </ol> <pre><code>struct BinNode\n{\n    ElementType     Element;\n    Position        LeftChild;\n    Position        NextSibling;\n} ;\nstruct Collection\n{\n    int         CurrentSize;  /* total number of nodes */\n    BinTree TheTrees[ MaxTrees ];\n} ;\n</code></pre> <ol> <li>\u644a\u8fd8\uff1a</li> </ol> <ul> <li>\u63d2\u5165\u65f6\u4e00\u6b21 cost \u4e3a c \u7684\u64cd\u4f5c\u9020\u6210\u68ee\u6797\u591a\u4e86 2-c \u68f5\u6811\uff0c\u56e0\u4e3a 1 \u6b21\u64cd\u4f5c\u628a\\(B_0\\)\u6dfb\u52a0\u5230\u5f53\u524d\u68ee\u6797\uff0c\u591a\u4e00\u68f5\uff1b\u5176\u4f59 c-1 \u6b21\u64cd\u4f5c\u90fd\u5728 merge\uff0c\u6bcf\u6b21\u51cf\u5c11\u4e00\u68f5\u6811</li> <li>\u52bf\u51fd\u6570\uff1a\\(\\phi_i\\)\u4e3a\u7b2c i \u6b21\u64cd\u4f5c\u540e\u6811\u68f5\u6570</li> </ul> <ol> <li>\u6590\u6ce2\u90a3\u5951\u5806\u52bf\u51fd\u6570:\\(t(H)+2m(H)\\)</li> <li>conclusion:</li> </ol>"},{"location":"ADS/review/#6-backtracking","title":"6 Backtracking","text":"<ol> <li>Turnpike Reconstruction Problem:\u4f7f\u7528 AVL \u6811\uff0c\u4e00\u6b21\u64cd\u4f5c\\(O(n\\log n)\\)</li> </ol>"},{"location":"ADS/review/#7-divide-and-conquer","title":"7 Divide and Conquer","text":"<ol> <li>\\(T(n)=2T(\\lfloor\\sqrt(n)\\rfloor)+\\log n\\),\u4ee4\\(m=\\log n\\)</li> <li>\\(T(n)=T(\\lfloor n/2\\rfloor)+T(\\lceil n/2\\rceil)+1\\),\u731c\u6d4b\\(T(n)=O(n)\\)\uff0c\u8bbe\\(T(n)\\leq cn\\)\u4f46\u5f52\u7eb3\u5931\u8d25\uff0c\u4f46\u8bbe\\(T(n)\\leq cn-d\\)\u5f52\u7eb3\u6210\u7acb\uff0c\u6709\u65f6\u5019\u51cf\u53bb\u4e00\u4e2a\u9879\u4f1a\u6709\u7528</li> </ol> <ol> <li>\u5206\u6cbb\u6cd5\u5904\u7406\u9006\u5e8f\u5bf9\u8ba1\u6570\u65f6\uff0c\u7c7b\u4f3c\u9006\u5e8f\u5bf9\u5206\u6210\u4e09\u7c7b\uff0c\u5168\u5728\u5de6\u534a\u8fb9\uff0c\u5168\u5728\u53f3\u534a\u8fb9\uff0c\u8de8\u8d8a\u4e2d\u70b9\u3002\u4f46\u8de8\u8d8a\u4e2d\u70b9\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4f3c\u4e4e\u6700\u591a\u6709\\(n^2/4\\)\u4e2a\uff0c\u8fd9\u6837\u5206\u6cbb\u5c31\u5931\u53bb\u4e86\u65f6\u95f4\u4f18\u52bf\u3002\u56e0\u6b64\u6211\u4eec\u57fa\u4e8e\u5f52\u5e76\u6392\u5e8f\uff0c\u6bcf\u6b21\u8ba1\u7b97\u9006\u5e8f\u540e\u4e5f\u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a\u8fd9\u5e76\u4e0d\u4f1a\u5f71\u54cd\u8de8\u8d8a\u4e2d\u70b9\u7684\u9006\u5e8f\u5bf9\u3002\u4e4b\u540e\u5728\u5408\u5e76\u8fc7\u7a0b\u6211\u4eec\u5f88\u5bb9\u6613\u57fa\u4e8e RANK \u5c31\u53ef\u4ee5\u6c42\u51fa\u9006\u5e8f\u5bf9\u6570\u76ee</li> <li>\u6574\u6570\u4e58\u6cd5\u6539\u8fdb\uff0c\\(ab=10^n a_1b_1+10^{n/2}(a_1b_2+a_2b_1)+a_2b_2\\),\u540c\u65f6\u6ce8\u610f\u5230\\(a_1b_2+a_2b_1=(a_1+a_2)(b_1+b_2)-a_1b_1-a_2b_2\\)\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\\((a_1+a_2)(b_1+b_2),a_1b_1,a_2b_2\\)\u8fd9\u4e09\u4e2a\uff0c\u56e0\u6b64\u9012\u63a8\u5f0f\u4e3a\\(T(n)=3T(n/2)+O(n)\\)\uff0c\u590d\u6742\u5ea6\u53d8\u6210\u4e86\\(O(n^{\\log_23})\\)</li> <li>\u77e9\u9635\u4e58\u6cd5\uff0c\u4f7f\u7528\u5206\u5757\u77e9\u9635</li> </ol> <p>\u4f46\u6b64\u65f6\u9700\u8981\u8ba1\u7b97\u516b\u4e2a n/2 \u89c4\u6a21\u7684\u77e9\u9635\uff0c\u590d\u6742\u5ea6\u4ecd\u7136\u662f\\(O(n^3)\\)\uff0c\u4f46 Strassen \u7ed9\u51fa\u4e86\u4e00\u4e2a\u5929\u624d\u7684\u6784\u9020</p> <p>\u56e0\u6b64\\(T(n)=7T(n/2)+O(n^2)\\),\u590d\u6742\u5ea6\u4e3a\\(O(n^{\\log_27})\\)</p>"},{"location":"ADS/review/#8-dynamic-programming","title":"8 Dynamic Programming","text":"<ol> <li>All-Pairs Shortest Path: \\(D^k[i][j]=\\min\\{length\\ of\\ path\\ i\\rightarrow\\{l\\leq k\\}\\rightarrow j\\}\\)    - \u8868\u793a\u7528\u524d k \u4e2a\u8282\u70b9\u4ece i \u8d70\u5230 j</li> </ol>"},{"location":"ADS/review/#9-greedy-algorithms","title":"9 Greedy Algorithms","text":"<ol> <li>\u8c03\u5ea6\u95ee\u9898\uff1a\u8ba1\u7b97\u4efb\u52a1 i \u7684\\(w_i/l_i\\)\uff0c\u4ece\u5927\u5230\u5c0f\u964d\u5e8f\u8c03\u5ea6\u4efb\u52a1</li> <li>\u53d8\u4f53\uff1a\u6700\u5c0f\u5316\u6700\u5927\u5ef6\u65f6\uff0c\u76f4\u63a5\u6309 ddl \u4ece\u5c0f\u5230\u5927\u6392\u5e8f</li> <li>Huffman \u6bcf\u6b21\u8d2a\u5fc3\u53d6\u4e24\u4e2a\u9891\u7387\u6700\u4f4e\u7684\u7b26\u5408\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u8bc1\u660e\u4f7f\u7528\u53cd\u8bc1\uff0c\u82e5 k-1 \u89c4\u6a21\u7684\\(T'\\)\u662f\u6700\u4f18\u89e3\uff0c\u90a3\u52a0\u4e0a(x,y)\u540e k \u89c4\u6a21\u7684\\(T\\)\u4e5f\u662f\u6700\u4f18\u89e3\uff0c\u5426\u5219\u5b58\u5728\\(T^*\\)\uff0c\u4f46\u6b64\u65f6\\(T^*\\)\u5220\u53bb(x,y)\u4f1a\u6bd4\\(T'\\)cost \u66f4\u5c0f\uff0c\u77db\u76fe\uff0c\u56e0\u6b64\u6700\u4f18\u3002</li> </ol>"},{"location":"ADS/review/#10-np-completeness","title":"10 NP-Completeness","text":"<ol> <li> <p>\u56fe\u7075\u673a\u7684\u6784\u578b\\(c=t_mt_{m-1}\u2026t_2t_1\\underline{q_i}s_1s_2\u2026s_k\\),\\(s_i\\)\u548c\\(t_i\\)\u5206\u522b\u662f\u4e00\u76f4\u5230\u6700\u53f3\u4fa7\u548c\u6700\u5de6\u4fa7\u7684\u975e\u7a7a\u683c\u5b50\u4e0a\u7684\u5185\u5bb9\uff0c\u5f53\u7136\uff0c\u5982\u679c\u6ca1\u6709\u5219\u53ef\u4ee5\u5199\u4e2a \u25a1\uff0c\u56fe\u7075\u8ba1\u7b97\u5c31\u6307\u56fe\u7075\u673a\u7684\u4e00\u5217\u6784\u578b\\(c_0,c_1,\\cdots,c_n\\)</p> </li> <li> <p>\u4e00\u4e9b\u6982\u5ff5</p> </li> </ol> <ul> <li>P \u7c7b\u95ee\u9898\uff1a\u786e\u5b9a\u6027\u56fe\u7075\u673a\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u89e3</li> <li>NP \u7c7b\u95ee\u9898\uff1a\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u89e3</li> <li>\u663e\u7136\\(P\\subset NP\\)</li> </ul> <ol> <li>\u8865\u7c7b\uff1a\\(co-C\\)\u4e3a\\(C\\)\u7684\u8865\u7c7b\uff0c\\(co-C=\\{L|\\overline{L}\\in C\\}\\)</li> </ol> <ul> <li>P=co-P \u76f4\u63a5\u628a\u95ee\u9898\u7684\u662f\u53d8\u6210\u5426\u5373\u53ef\uff0c\u5bf9\u4e8e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u800c\u8a00\u662f\u8fd9\u6837\u7684</li> <li>\u82e5 P=NP\uff0c\u5219 NP=co-NP</li> </ul> <ol> <li> <p>Karp \u5f52\u7ea6\uff1a\\(x\\in A\\Leftrightarrow f(x)\\in B\\)\uff0c\u8bb0\u4f5c\\(A\\leq_pB\\)\uff0c\u5219 B \u6bd4 A \u96be</p> </li> <li> <p>\u82e5\u590d\u6742\u7c7b C \u4e2d\u4efb\u610f\u95ee\u9898\u90fd\u80fd\u591a\u9879\u5f0f\u89c4\u7ea6\u5230 P\uff0c\u5219\u79f0 P \u662f C-hard \u7684\uff0c\u82e5\u540c\u65f6 P \u4e5f\u5728 C \u4e2d\uff0c\u5219 P \u662f C-complete \u7684</p> </li> <li> <p>\u8bc1\u660e P=NP\uff0c\u5373\u9996\u5148\u627e\u5230\u4e00\u4e2a NP-complete \u7684\u95ee\u9898\uff0c\u518d\u8bc1\u660e\u8fd9\u4e2a\u95ee\u9898\u662f P \u7684</p> </li> <li> <p>SAT \u95ee\u9898\u662f NP-complete \u7684\uff0c\\(SAT\\leq_p3-SAT\\),3-SAT \u4e5f\u662f NP-complete \u7684</p> </li> <li> <p>\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u65c5\u884c\u5546\u95ee\u9898(TSP)\uff0cclique problem\uff0cVertex cover problem \u662f NP-complete \u7684</p> </li> </ol> <p>\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u7269\u54c1\uff0c\u5224\u65ad\u662f\u5426\u53ef\u7531\u4e24\u4e2a\u7bb1\u5b50\u88c5\u4e0b\u662f NP-complete \u7684</p> <p>dominating set \u662f NP-complete \u7684</p> <p>\u6700\u5927\u5272\uff0chalting \u662f NP-hard \u7684</p> <ul> <li>\\(clique\\leq_pvertex\\ cover\\)</li> <li>Clique problem: Given an undirected graph G = (V, E) and an integer K, does G contain a complete subgraph (clique) of (at least) K vertices?</li> <li>Vertex Cover: \u5b58\u5728\u9876\u70b9\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u6bcf\u4e00\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u9876\u70b9\u5728\u5176\u4e2d</li> <li>dominating set:\u7ed9\u5b9a\u4e00\u4e2a\u56fe G=(V,E)\u548c\u4e00\u4e2a\u6574\u6570 k\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5927\u5c0f\u4e3a k \u7684\u96c6\u5408\\(S\\subset V\\)\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u8981\u4e48\u5728 S \u4e2d\uff0c\u8981\u4e48\u4e0e S \u4e2d\u7684\u67d0\u4e2a\u70b9\u76f8\u90bb\u3002</li> </ul>"},{"location":"ADS/review/#11-approximation","title":"11 Approximation","text":"<ol> <li> <p>\u6700\u5c0f\u5de5\u65f6\u8c03\u5ea6\u95ee\u9898\uff0cm \u53f0\u673a\u5668\uff0c\u4e0d\u6392\u5e8f\u57fa\u7840\u4e0a\u8fd1\u4f3c\u6bd4\u4e3a\\(2-\\dfrac{1}{m}\\)\uff0c\u5148\u6392\u5e8f\u540e\u8c03\u7528\u7b97\u6cd5\u5219\u6709\\(\\dfrac{4}{3}-\\dfrac{1}{3m}\\)</p> </li> <li> <p>\u88c5\u7bb1</p> </li> </ol> <ul> <li> <p>Next Fit(NF):\u8fd1\u4f3c\u6bd4 2</p> </li> <li> <p>Any Fit(AF):</p> <ul> <li>First Fit(FF): \u9009\u62e9\u6700\u65e9\u6253\u5f00\u7684\u7bb1\u5b50\u4f18\u5148\u586b\u5165</li> <li>Best Fit(BF): \u9009\u62e9\u6700\u6ee1\u7684</li> <li>Worse Fit(WF): \u9009\u62e9\u6700\u7a7a\u7684</li> </ul> </li> <li>\u4ee5\u4e0a\u90fd\u662f\u5728\u7ebf\u7684\uff0c\u5728\u7ebf\u7b97\u6cd5\u7684\u6700\u7406\u60f3\u8fd1\u4f3c\u6bd4\u662f\\(\\dfrac{5}{3}\\)</li> <li>Almost Any Fit(AAF): \u90a3\u4e48\u9664\u975e\u5f53\u524d\u7269\u54c1\u65e0\u6cd5\u88c5\u8fdb\u524d k-1 \u4e2a\u7bb1\u5b50\u91cc\uff0c\u5426\u5219\u5b83\u4e0d\u4f1a\u88c5\u8fdb\u7b2c k \u4e2a\u7bb1\u5b50\u91cc<ul> <li>FF \u548c BF \u90fd\u662f</li> <li>\u4e3a\u4e86\u4f7f WF \u662f\uff0c\u6211\u4eec\u5bf9\u5b83\u8fdb\u884c\u5982\u4e0b\u4fee\u6b63\uff0c\u4fee\u6b63\u540e\u7684\u4e3a AWF(Almost Worst Fit) \u5c06\u5f53\u524d\u7269\u54c1\u653e\u5165\u80fd\u88c5\u4e0b\u5b83\u7684\u5269\u4f59\u7a7a\u95f4\u7b2c\u4e8c\u5927\u7684\u7bb1\u5b50\u4e2d\uff1b\u82e5\u8fd9\u6837\u7684\u7bb1\u5b50\u4e0d\u5b58\u5728\uff0c\u4fbf\u5c06\u5176\u653e\u5165\u80fd\u88c5\u5b83\u7684\u5269\u4f59\u7a7a\u95f4\u6700\u5927\u7684\u7bb1\u5b50\u4e2d\uff0c\u5b83\u5c5e\u4e8e AAF</li> <li>AAF \u7684\u8fd1\u4f3c\u6bd4\u90fd\u662f 1.7</li> </ul> </li> <li>\u79bb\u7ebf\u7b97\u6cd5\uff1a\u5141\u8bb8\u5148\u6392\u5e8f\u540e\u518d\u8c03\u7528\u5bf9\u5e94\u7b97\u6cd5<ul> <li>First Fit Decreasing(FFD)</li> <li>\u7edd\u5bf9\u8fd1\u4f3c\u6bd4\\(FFD(I)\\leq\\dfrac{3}{2}OPT(I)\\)</li> <li>\u6e10\u8fd1\u8fd1\u4f3c\u6bd4\\(FFD(I)\\leq\\dfrac{11}{9}OPT(I)+\\dfrac{6}{9}\\)</li> </ul> </li> </ul> <ol> <li>k-\u4e2d\u5fc3\u95ee\u9898\uff1a\u8981\u6c42\u9009\u62e9 k \u4e2a\u4e2d\u5fc3\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u5230\u6700\u8fd1\u7684\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6700\u5927\u503c r(C)\u6700\u5c0f\u5316</li> </ol> <ul> <li>\u5728\u7ed9\u5b9a\u6700\u4f18\u89e3\u662f\u60c5\u51b5\u4e0b\u6709 2-\u8fd1\u4f3c\u7b97\u6cd5<ul> <li>solution 1:\u6bcf\u6b21\u968f\u673a\u4ece\u5269\u4f59\u4e2d\u53d6\u4e00\u4e2a\uff0c\u5e76\u5220\u53bb\u6240\u6709\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e 2r \u7684\uff0cr \u4e3a\u6700\u4f18\u89e3</li> <li>solution 2:\u6bcf\u6b21\u53d6\u79bb\u5f53\u524d center \u96c6\u5408\u6700\u8fdc\u7684\u70b9 smarter</li> </ul> </li> <li>\u9664\u975e P=NP\uff0c\u5426\u5219 K-center \u95ee\u9898\u4e0d\u5b58\u5728 \u03c1-\u8fd1\u4f3c\u7b97\u6cd5(\u03c1&lt;2)</li> </ul> <ol> <li>The Knapsack Problem \u2014 0-1 version \u8fd1\u4f3c\u6bd4\u4e3a 2</li> <li>vertex cover \u7684\u8d2a\u5fc3\u7b97\u6cd5\uff1a\u4efb\u610f\u4e00\u6761\u8fb9(u,v)\uff0c\u7136\u540e\u5c06 u \u548c v \u540c\u65f6\u52a0\u5165\u5230 C \u4e2d\uff0c\u7136\u540e\u628a u \u548c v \u6240\u5728\u7684\u6240\u6709\u8fb9\u5168\u90e8\u79fb\u9664\uff0c\u662f 2-\u8fd1\u4f3c\u7b97\u6cd5</li> </ol>"},{"location":"ADS/review/#12-local-search","title":"12 Local Search","text":"<ol> <li>Hopfield \u795e\u7ecf\u7f51\u7edc</li> </ol> <ul> <li>\\(w_es_us_v&lt;0\\)\u7684\u8fb9\u4e3a\u597d\u7684\uff0c\u5426\u5219\u4e3a\u574f\u7684</li> <li>\\(\\sum\\limits_{v:e=(u,v)\\in E}w_es_us_v\\leq0\\)\u4e3a\u6ee1\u610f\u7684\u9876\u70b9\uff0c\u5426\u5219\u4e0d\u6ee1\u610f</li> <li>state_flipping \u6bcf\u6b21\u7ffb\u8f6c\u4e00\u4e2a\u4e0d\u6ee1\u610f\u7684\u70b9\uff0c\u597d\u8fb9\u6743\u91cd\u548c\u90fd\u4e0a\u5347\uff0c\u4f46\u8fd9\u6709\u4e0a\u9650\uff0c\u56e0\u6b64\u5fc5\u7136\u505c\u6b62</li> <li>\u6700\u591a\u7ecf\u5386\\(\\sum\\limits_{e\\in E}|w_e|\\)\u6b21\u7ffb\u8f6c\u540e\u505c\u6b62\uff0c\u4f46\u8003\u8651\u5230\u6bcf\u6761\u8fb9\u957f\u5ea6\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6307\u6570\u7ea7\u522b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5f53\u8fb9\u6743\u6bd4\u8f83\u5927\u65f6</li> </ul> <ol> <li>\u6700\u5927\u5272\uff1aHopfield \u4e2d\u8fb9\u6743\u90fd\u662f\u6b63\u7684\u7279\u6b8a\u60c5\u51b5</li> </ol> <ul> <li>\u5c40\u90e8\u641c\u7d22\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u8d85\u8fc7\u6700\u4f18\u89e3\u4e00\u534a\u7684\u5c40\u90e8\u6700\u4f18\u89e3</li> <li>\u5b58\u5728\u4e00\u4e2a 1.1382-\u8fd1\u4f3c\u7b97\u6cd5</li> <li>\u9664\u975e P=NP\uff0c\u5426\u5219\u6ca1\u6709 1.0625(\\(\\dfrac{17}{16}\\))-\u8fd1\u4f3c\u7b97\u6cd5</li> <li>Big Improvement Flip<ul> <li>\u8fd1\u4f3c\u6bd4\u4e3a\\(2+\\epsilon\\)\uff0c\u4f1a\u5f97\u5230\\((2+\\epsilon)w(A,B)\\geq w(A^*,B^*)\\)\u7684\u89e3</li> <li>\u9009\u53d6\u589e\u957f\u8d85\u8fc7\\(\\dfrac{2\\epsilon}{|V|}w(A,B)\\)\u7684 flip</li> <li>\u6700\u7ec8\u4f1a\u5728\\(O(\\dfrac{n}{\\epsilon}\\log W)\\)flip \u540e\u505c\u4e0b</li> </ul> </li> </ul>"},{"location":"ADS/review/#13-randomized-algorithms","title":"13 Randomized Algorithms","text":"<p>\u7565</p>"},{"location":"ADS/review/#14-parallel-algorithms","title":"14 Parallel Algorithms","text":"<ol> <li> <p>EREW, CREW, CRCW</p> </li> <li> <p>Merge, \\(p=\\dfrac{n}{\\log n }\\)</p> </li> </ol> <ul> <li>\u6bcf\u9694\\(\\log n\\)\u53d6\u4e00\u4e2a\u8ba1\u7b97 rank\uff0c\u8fd9\u4e00\u6b65\\(T=O(\\log n),W=O(p\\log n)=O(n)\\)</li> <li>\u6839\u636e\u8fd9\u4e9b\u53d6\u51fa\u6765\u7684\u5212\u5206\u51fa 2p \u4e2a\u5b50\u95ee\u9898\uff0c\u89c4\u6a21\u4e3a\\(O(n/p)\\),\u603b\u65f6\u95f4\u590d\u6742\u5ea6\\(O(\\log n),\\)\u603b\u5de5\u4f5c\u91cf\\(2p\\cdot O(\\dfrac{n}{p})=O(n)\\)</li> <li>\u56e0\u6b64\u603b\\(T=O(\\log n),W=O(n)\\)</li> </ul> <ol> <li>Maximum</li> </ol> <ul> <li>Compare all the pairs \\(T=O(1),W=O(n^2)\\)</li> </ul> <pre><code>for Pi , 1 \u2264 i \u2264 n  pardo\n    B(i) := 0\nfor i and j, 1 \u2264 i, j \u2264 n  pardo\n    if ( (A(i) &lt; A(j)) || ((A(i) = A(j)) &amp;&amp; (i &lt; j)) )\n            B(i) = 1\n    else B(j) = 1\nfor Pi , 1 \u2264 i \u2264 n  pardo\n    if B(i) == 0\n       A(i) is a maximum in A\n</code></pre> <ul> <li>workload \u8fc7\u5927\uff0c\u56e0\u6b64\u9996\u5148\u8003\u8651 partition</li> </ul> <ul> <li> <p>\u4f46\u6709\u4ee5\u4e0b Random Sampling\uff0c\u53ef\u4ee5\u4f7f\u5f97\\(T=O(1),W=O(n)\\)</p> <ul> <li>\u53d6\\(n^{7/8}\\)\u4e2a\u51fa\u6765</li> </ul> <p></p> <ul> <li>\u4f46\u8fd9\u6837\u6700\u5927\u503c\u6709\u53ef\u80fd\u4e0d\u5728\u5176\u4e2d\uff0c\u4e8e\u662f\u7ee7\u7eed\u518d\u53d6\\(n^{7/8}\\)\u4e2a\u4f5c\u4e3a\u6570\u7ec4 B\uff0c\u4e0b\u9762\u6b65\u9aa4\u4e2d\u82e5\u627e\u5230\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u968f\u673a\u4e22\u56de B \u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u6b64\u662f\u6709\u53ef\u80fd\u628a\u6700\u5927\u503c\u8986\u76d6\u6389\u7684\u3002\u4f46\u7efc\u5408\u6765\u770b\u5728\u4e0a\u8ff0\u65f6\u95f4\u5185\u4e0d\u80fd\u5f97\u5230\u6700\u5927\u503c\u7684\u6982\u7387\u4e3a\\(O(\\dfrac{1}{n^c})\\),\u6ce8\u610f c \u662f\u6b63\u5e38\u6570</li> </ul> <p></p> </li> </ul>"},{"location":"ADS/review/#15-external-sorting","title":"15 External Sorting","text":"<ol> <li> <p>\u628a\u6bcf\u7ec4\u6392\u597d\u5e8f\u7684\u8bb0\u5f55\u53eb\u505a\u4e00\u4e2a\u987a\u4e32(run)</p> </li> <li> <p>\u4e00\u4e2a pass \u8868\u793a\u4e00\u8f6e\u4ece\u8f93\u5165\u78c1\u76d8\u5230\u8f93\u5165\u78c1\u76d8\u7684\u5de5\u4f5c\uff0c\u5373\u6240\u6709\u5143\u7d20\u90fd\u88ab\u79fb\u52a8\uff08\uff1f</p> </li> <li>k \u8def\u5408\u5e76\u9700\u8981\\(1+\\lceil\\log_k\\dfrac{N}{M}\\rceil\\)\u6b21\u7684 pass\uff0c\u8fd9\u4e2a 1 \u662f\u6700\u521d\u4ece disk \u8bfb\u8fdb\u6765\u7684</li> <li>\u591a\u76f8(Polyphase)\u5408\u5e76:k \u8def\u5408\u5e76\u53ea\u9700\u8981 k+1 \u7684 tape\uff0c\u6309 k \u9636\u6590\u6ce2\u90a3\u5951\u6570\u5217 \\(F^{(k)}(n)=F^{(k)}(n-1)+\\cdots+F^{(k)}(n-k)\\)\u5206\u914d</li> </ol>"},{"location":"CG/","title":"Computer Graphics","text":"<p>Abstract</p> <ul> <li>2024fall</li> <li>Teacher: \u5434\u9e3f\u667a</li> <li>\u5206\u6570\u6784\u6210\uff1a<ul> <li>20% random quiz (\u4e09\u6b21)</li> <li>10% \u8bfe\u5802\u4e92\u52a8</li> <li>40% course project</li> <li>30% assignments</li> </ul> </li> </ul>"},{"location":"CG/cg1/","title":"What is Computer Graphics?","text":"<ol> <li> <p>Pixel Representation</p> </li> <li> <p>Recommended </p> </li> <li> <p>Three Fundamental Tasks</p> <ul> <li>Modeling the world</li> <li>Animation(simulating)<ul> <li>Simulating the behaviors of objects in the world</li> </ul> </li> <li>Rendering(displaying)</li> </ul> </li> <li> <p>Digital Representations of the World</p> <ul> <li>Digital Images \u66f4\u5bb9\u6613\u66f4\u771f\u5b9e</li> <li>3D Geometric Objects(Graphics) \u66f4\u5168\u9762\uff0c\u6e32\u67d3\u590d\u6742</li> <li>Symbolic Descriptions</li> </ul> </li> <li> <p>Geometric Representation</p> <ul> <li>\u8868\u793a\u4e09\u7ef4\u70b9: x,y,z</li> <li>\u4e09\u7ef4\u7ebf\u6bb5: \u4e24\u4e2a\u4e09\u7ef4\u70b9</li> <li>\u4e09\u7ef4\u957f\u65b9\u4f53: many ways</li> </ul> </li> <li> <p>Three important and complex attributes</p> <ul> <li>shape</li> <li>appearance</li> <li>dynamic behaviors</li> </ul> </li> </ol>"},{"location":"CG/cg10/","title":"Surfaces and Beyond","text":""},{"location":"CG/cg10/#surface-modeling","title":"Surface Modeling","text":"<ol> <li> <p>Parametric Surface: Bezier Surface    $$    S(u,v)=\\sum_{i=0}^{n}\\sum_{j=0}^{m}P_{ij}B_{i,n}(u)B_{j,m}(v) ,    $$</p> <ul> <li>\\(B_{i,n}(u),B_{j,m}(v)\\)\u5206\u522b\u662fn\u7ef4\u548cm\u7ef4\u7684Bernsterin basis</li> <li>\\((n+1)\\times(m+1)P_{i,j}\\) constructs the control mesh</li> <li>\\(S(u,v)=\\sum_{i=0}^n[\\sum_{j=0}^mP_{ij}B_{j,m}(v)]B_{i,n}(u)=\\sum_{i=0}^nQ_i(v)B_{i,n}(u) ,\\)</li> </ul> </li> <li> <p>Normal on a Bezier Surface    $$    \\frac{\\partial}{\\partial u}S(u,v)=\\frac{\\partial}{\\partial u}\\sum_{i=0}^{n}\\sum_{j=0}^{m}P_{ij}B_{i,n}(u)B_{j,m}(v)=n\\sum_{i=0}^{n-1}\\sum_{j=0}^{m}(P_{i+1,j}-P_{ij})B_{i,n-1}(u)B_{j,m}(v) \\newline    \\frac{\\partial}{\\partial v}S(u,v)=\\frac{\\partial}{\\partial v}\\sum_{i=0}^{n}\\sum_{j=0}^{m}P_{ij}B_{i,n}(u)B_{j,n}(v)=m\\sum_{i=0}^{n}\\sum_{j=0}^{m-1}(P_{i,j+1}-P_{ij})B_{i,n}(u)B_{j,m-1}(v)    $$</p> </li> </ol> <ul> <li>Normal \\(N(u,v)\\)      $$      N(u,v)=\\frac{\\partial S(u,v)}{\\partial u}\\times\\frac{\\partial S(u,v)}{\\partial v}      $$</li> </ul> <ol> <li> <p>B-spline Surface    $$    S(u,v)=\\sum_{i=0}^{n}\\sum_{j=0}^{m}N_{i,p}(u)N_{j,q}(v)P_{i,j}    $$</p> </li> <li> <p>NURBS Surface    $$    S(u,v)=\\frac{\\sum_{i=0}^{n}\\sum_{j=0}^{m}N_{i,p}(u)N_{j,q}(v)\\omega_{i,j}P_{i,j}}{\\sum_{i=0}^{n}\\sum_{j=0}^{m}N_{i,p}(u)N_{j,q}(v)\\omega_{i,j}}    $$</p> </li> </ol>"},{"location":"CG/cg10/#polygonal-meshes","title":"Polygonal Meshes","text":"<ol> <li>Representations: Vertex Information + Topoplogical Information(Connectivity)</li> </ol> <ul> <li> <p>Vertex-Vertex Meshes</p> <p></p> </li> <li> <p>Face-Vertex Meshes</p> <ul> <li>vertex normal: \u53d6\u6240\u6709\u4e0e\u8fd9\u4e2a\u9876\u70b9\u76f8\u8fde\u63a5\u7684face\u7684face normal\u7684\u5e73\u5747</li> </ul> <p></p> </li> </ul> <ol> <li> <p>Wavefront .obj file</p> </li> <li> <p>constructive solid geometry</p> </li> </ol>"},{"location":"CG/cg10/#l-system","title":"L-system","text":"<ul> <li> <p>cfg, the final string represents to a sahpe</p> </li> <li> <p>how to derive an L-system for a given target shape</p> </li> </ul>"},{"location":"CG/cg10/#shape-grammar","title":"Shape Grammar","text":""},{"location":"CG/cg10/#subdivision-curvessurfaces","title":"Subdivision Curves/Surfaces","text":"<ul> <li>Algorithms</li> <li>Starting from a set of vertices</li> <li>Generate new vertices according to certain rules to replace old ones<ul> <li>Geometric rule</li> </ul> </li> <li>Connect new vertices according to certain rules<ul> <li>Topological rule</li> </ul> </li> <li> <p>Repeat a few times or until convergence</p> </li> <li> <p>Advantages</p> </li> <li>topologically complex shape</li> <li>easy to implement</li> <li>easy to edit by manipulating the control mesh</li> </ul>"},{"location":"CG/cg10/#sweeping","title":"Sweeping","text":""},{"location":"CG/cg10/#summary","title":"Summary","text":"<ul> <li>Surface Modeling  </li> <li>Parametric Surfaces </li> <li> <p>Polygonal Meshes    </p> </li> <li> <p>Advanced Geometric Modeling   </p> </li> <li>Constructive Solid Geometry <ul> <li>Grammar-Based </li> <li>L-system    </li> <li>Shape Grammar   </li> <li>Subdivision   </li> <li>Sweeping</li> </ul> </li> </ul>"},{"location":"CG/cg11/","title":"Digital Material Appearence","text":""},{"location":"CG/cg11/#introduction","title":"Introduction","text":"<ul> <li>Light / material interactions     </li> <li>Absorption  </li> <li>Reflection: Color, Glossiness   </li> <li>Transmission    </li> <li>Transparency    </li> </ul> <ul> <li>\u548clocation, view, lighting\u6709\u5173</li> </ul>"},{"location":"CG/cg11/#reflection-models","title":"Reflection Models","text":"<p>\u4ecb\u8d28\u5bc6\u5ea6\u7684\u53d8\u5316</p> <ul> <li>BRDF(Bidirectional Reflectance Distribution Function) \\(f(i,o)\\)\uff0c\u4e00\u4e2a\u56db\u7ef4\u51fd\u6570 </li> <li>\u6211\u4eec\u77e5\u9053\u6240\u6709\u7ecf\u8fc7\u540c\u4e00\u70b9\u7684\u6a21\u957f\u4e3a1\u7684\u5411\u91cf\u7684\u96c6\u5408\u662f\u4e00\u4e2a\u4e09\u7ef4\u7403\uff0c\u5728\u7403\u4e0a\u8868\u793a\u4e00\u4e2a\u70b9\u6211\u4eec\u53ea\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u56e0\u6b64\u5165\u5c04\u548c\u51fa\u5c04\u5404\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u5171\u56db\u7ef4</li> <li>Fixing i, a 2D function of outgoing directions    </li> <li>describes how incident light is reflected along different directions</li> </ul>"},{"location":"CG/cg11/#specular-reflection","title":"Specular Reflection","text":"<ol> <li> <p>Perfect Mirror Reflection.</p> <ul> <li> <p>p: point of interest</p> </li> <li> <p>n: normal</p> </li> <li> <p>i: lighting vector, couting-intuitive dir \u65b9\u5411\u548c\u5b9e\u9645\u5165\u5c04\u65b9\u5411\u76f8\u53cd</p> </li> <li> <p>o: view vector</p> </li> <li> <p>i,o,n are unit vectors</p> <p></p> </li> <li> <p>\u8ba1\u7b97\u53cd\u5c04\u65b9\u5411r</p> <ul> <li> <p>\\(\u2013 r = -(i - &lt;i,n&gt;n) + &lt;i,n&gt;n = 2&lt;i,n&gt;n - i\\)</p> </li> <li> <p>test if \\(&lt;o,r&gt;=1\\)</p> </li> <li> <p>\u5229\u7528half vector \\(h=\\dfrac{i+o}{\\|i+o\\|}\\) \u5224\u65adh\u548cn\u662f\u5426\u91cd\u5408\u5373\u53ef</p> </li> </ul> <p></p> </li> </ul> </li> <li> <p>Fresnel Reflectance Term: Reflection depends on incident angle</p> <ul> <li> <p>\u7edd\u7f18\u4f53</p> <p></p> </li> <li> <p>\u5bfc\u4f53</p> <p></p> </li> <li> <p>\u516c\u5f0f\u5982\u4e0b\uff0c\u4f46\u663e\u7136\u8fc7\u4e8e\u590d\u6742\u4e86     $$     R_{s}=\\left|\\frac{n_{1}cos\\theta_{i}-n_{2}cos\\theta_{i}}{n_{1}cos\\theta_{i}+n_{2}cos\\theta_{i}}\\right|^{2}=\\left|\\frac{n_{1}cos\\theta_{i}-n_{2}\\sqrt{1-\\left(\\frac{n_{1}}{n_{2}}sin\\theta_{i}\\right)^{2}}}{n_{1}cos\\theta_{i}+n_{2}\\sqrt{1-\\left(\\frac{n_{1}}{n_{2}}sin\\theta_{i}\\right)^{2}}}\\right|^{2}     $$</p> \\[ R_{p}=\\left|\\frac{n_{1}cos\\theta_{i}-n_{2}cos\\theta_{i}}{n_{1}cos\\theta_{i}+n_{2}cos\\theta_{i}}\\right|^{2}=\\left|\\frac{n_{1}\\sqrt{1-\\left(\\frac{n_{1}}{n_{2}}sin\\theta_{i}\\right)^{2}-n_{2}cos\\theta_{i}}}{n_{1}\\sqrt{1-\\left(\\frac{n_{1}}{n_{2}}sin\\theta_{i}\\right)^{2}+n_{2}cos\\theta_{i}}}\\right|^{2} \\] </li> </ul> </li> <li> <p>\u91c7\u7528Schilick\u2019s Approximation,\u5176\u4e2d\\(\\theta\\)\u662fi\u548cn\u7684\u5939\u89d2</p> </li> </ol> \\[ \\begin{aligned} &amp;R(\\theta)=R_0+\\bigl(1-R_0\\bigr)(1-cos\\theta)^5 \\\\ &amp;R_0=\\left(\\frac{n_1-n_2}{n_1+n_2}\\right)^2 \\end{aligned} \\] <ol> <li> <p>Microfacet-Based Models: Many real-world materials actually consist of or can be modeled as microfacets</p> <ul> <li>Microfacets = Tiny, planar and mirror-like surface patches</li> <li>Key: the distribution of microfacets\u2019 normals \u4e0d\u540c\u7684\u6cd5\u5411\u91cf\u4f1a\u5f71\u54cd\u53cd\u5c04\u7684\u7ed3\u679c</li> </ul> <p>$$   f(i,o)=\\frac{F(i,h)G(i,o,h)D(h)}{4(n,i)(n,o)}   $$</p> <p>F:\u53cd\u5c04\u7387 D:\u5fae\u9762\u6cd5\u5411\u91cf\u7684\u5206\u5e03</p> <p>D(h) describes the percentage of microfacets whose n = h (i.e. the normal distribution of microfacets)</p> <ul> <li>Microfacets that could potentially reflect under the current i &amp; o \u5fc5\u8981\u6761\u4ef6\u800c\u975e\u5145\u5206</li> </ul> <p>G\u8868\u793aShadowing &amp; Masking \u5149\u6253\u4e0d\u5230\u6216\u8005\u53cd\u5c04\u5149\u88ab\u7269\u4f53\u906e\u6321</p> <ul> <li>Microfacets in shadows do not reflect</li> <li>Microfacets occluded cannot be seen</li> </ul> <p></p> <p>Different microfacet BRDFs mainly differ with the choice of D</p> </li> <li> <p>An Example: Cook-Torrance Model\u3002D\u4e3aBeckman distribution\u3002m\u63a7\u5236highlight\u7684\u5f62\u72b6    $$    D=\\frac{e^{\\frac{-(an^2(a)}{m^2}}}{\\pi m^2cos^4(\\alpha)}, \\alpha=\\arccos(\\mathrm{n}\\bullet h)\\G=\\min(1,\\frac{2(h\\bullet n)(o\\bullet n)}{o\\bullet h},\\frac{2(h\\bullet n)(i\\bullet n)}{o\\bullet h})    $$</p> </li> <li> <p>\u4ee5\u4e0a\u6211\u4eec\u90fd\u662fisotropic\u7684\uff0c\u5373\u5404\u5411\u540c\u6027\u7684\uff0c\u6240\u4ee5\u9ad8\u5149\u4f1a\u662f\u5706\u5f62\u7684\u3002\u5982\u679c\u9700\u8981\u6761\u5f62\u7684\uff0c\u8fd9\u65f6\u5019\u5c31\u8981anisotropic(\u5404\u5411\u5f02\u6027) BRDF</p> </li> </ol> <ol> <li> <p>Diffuse Reflection </p> <ul> <li> <p>Lambertian model    </p> </li> <li> <p>Light is equally reflected along all outgoing directions    </p> </li> <li> <p>Can be considered as highly spread-out random microfacets   </p> </li> <li> <p>f(i,o) = constant</p> <p></p> </li> </ul> </li> <li> <p>Putting Things Altogether</p> <ul> <li> <p>The reflected light of a unit amount of directional incident light can computed as     $$     f(i,o)(i,n)=\\left\\frac{\\rho_d}\\pi+\\rho_s\\bullet f_{spec}(i,o)\\right     $$</p> </li> <li> <p>\\(\\rho_d,\\rho_s\\) are diffuse/specular coefficients \u4e09\u4e2a\u5206\u91cf\uff0cRGB\uff0c\u5404\u7b97\u4e00\u904d</p> <ul> <li>\u975e\u5bfc\u4f53\\(\\rho_s\\)\u4e00\u822c\u662f\u767d\u8272\uff0c\u5bfc\u4f53\u7684\u4e00\u822c\u662f\u5176\u672c\u8eab\u989c\u8272</li> </ul> </li> <li> <p>Could be extended to represent reflectance at different wavelengths</p> </li> </ul> </li> <li> <p>\u9ad8\u8d28\u91cf\u7684\u6570\u636e\uff1a[Matusik et al. 2004] \u6bcf\u4e00\u4e2aBRDF\u5927\u6982\u90fd\u8981\u536064MB\uff0c\u9ad8\u8d28\u91cf\u7684</p> </li> </ol> <ol> <li>useful tool<ul> <li>Disney\u2019s BRDF Explorer</li> </ul> </li> </ol>"},{"location":"CG/cg11/#reflectance-capture","title":"Reflectance Capture","text":"<p>\u91c7\u96c6BRDF</p> <ol> <li> <p>motivation: Accurate modeling of real-world materials</p> </li> <li> <p>direct sampling: General Idea    </p> <ul> <li>For each o, For each i, Measure f(i,o)  </li> <li>The most general approach / highest quality </li> <li>Extremely time consuming: Curse of dimensionality</li> </ul> </li> <li> <p>Illumination Multiplexing</p> <ul> <li>Light Stage <ul> <li>Use hundreds of light sources simultaneously  </li> <li>Only one or a couple of cameras   </li> <li>Project certain patterns and recover the reflectance with a lookup table  </li> <li>Far more efficient    </li> </ul> </li> <li>\u5728\u7535\u5f71\u884c\u4e1a\u5e7f\u6cdb\u5e94\u7528</li> </ul> <p></p> </li> </ol>"},{"location":"CG/cg12/","title":"Textures","text":""},{"location":"CG/cg12/#texture-mapping","title":"Texture Mapping","text":"<ul> <li> <p>apply a spatial variation to the surface of an object</p> </li> <li> <p>Every 3D surface point also has a place where it goes in the 2D image and in the 2D texture</p> </li> <li>every triangle copies a piece of texture image back to the surface</li> <li>\u7eb9\u7406\u590d\u7528\uff1a\u5bf9\u91cd\u590d\u573a\u666f\u5f88\u597d\u7528</li> </ul>"},{"location":"CG/cg12/#texture-coordinate-generation","title":"Texture Coordinate Generation","text":"<ol> <li> <p>\u53c2\u6570\u5316\u66f2\u9762\uff1a\u5c06\u53c2\u6570\u9762\u5750\u6807\u76f4\u63a5\u4f5c\u4e3a\u7eb9\u7406\u5750\u6807</p> </li> <li> <p>planar projection</p> </li> <li> <p>spherical projection</p> </li> <li> <p>complex surfaces: project parts to parametric surfaces</p> </li> </ol> <ol> <li> <p>logic: cut -&gt; flatten -&gt; pack</p> <ul> <li>\u600e\u4e48\u5207\uff0c\u600e\u4e48\u644a\u5e73\uff1a\u4fdd\u8ddd\u3001\u4fdd\u89d2</li> </ul> </li> </ol>"},{"location":"CG/cg12/#texture-mapping-is-sampling","title":"Texture Mapping is Sampling","text":"<p>\u4e8b\u5b9e\u4e0a\u662f\u4e00\u4e2a\u91cd\u91c7\u6837</p> <ul> <li>for each rasterized screen sample (x,y):</li> </ul> <p>\u200b (u,v)= evaluate texcoord value at (x,y);</p> <p>\u200b float3 texcolor =texture.sample(u,v);   \u200b set sample's color to texcolor;</p> <ul> <li>Mathematically, to draw a texture sample at \\((u,v)\\):</li> <li>Start with discrete, sampled 2D function \\(f(x,y)\\). This function is only non-zero at sampled locations</li> <li>Reconstruct a continuous 2D function, \\(f_{cont}(x,y)=f(x,y)*k(x,y)\\) by convolution with a reconstruction     filter \\(k(x,y)\\)</li> <li>Draw the desired sample at \\((u,v)\\) from the continuous 2Dsignal by function evaluation: \\(f_{cont}(u,v)\\)</li> <li>\u5c4f\u5e55\u91c7\u6837\u7387vs\u7eb9\u7406\u91c7\u6837\u7387</li> <li>At optimal viewing size:</li> <li>1:1 mapping between pixel sampling rate and texel sampling rate</li> <li>Dependent on texture resolution! e.g.512x512</li> <li>When larger(magnification), Multiple pixel samples per texel samples, upsampling</li> <li> <p>When smaller(minification), One pixel sample per multiple texel samples, downsampling</p> </li> <li> <p>screen pixel footprint in texture \u5373\u5c4f\u5e55\u7a7a\u95f4\u91cc\u4e00\u4e2apixel\u5bf9\u5e94\u7eb9\u7406\u7a7a\u95f4\u7684\u5927\u5c0f</p> </li> <li> <p>\u96c5\u514b\u6bd4\u77e9\u9635</p> <p></p> </li> </ul>"},{"location":"CG/cg12/#texture-filtering","title":"Texture Filtering","text":"<ul> <li> <p>\u91c7\u6837\u7387\u4e0d\u5339\u914d\u53ef\u80fd\u5bfc\u81f4\u952f\u9f7f\u3001\u95ea\u70c1\u7b49\u95ee\u9898</p> </li> <li> <p>idea: \u4f4e\u901a\u6ee4\u6ce2</p> </li> <li> <p>\u653e\u5927: essentially image interpolation \u5982\u53cc\u7ebf\u6027\u63d2\u503c</p> </li> </ul> <ul> <li> <p>\u7f29\u5c0f\uff1a\u66f4\u590d\u6742\u7684\u60c5\u51b5</p> </li> <li> <p>\u6311\u6218</p> <ul> <li>\u5f88\u591a\u7684texel\u5bf9\u5e94\u4e00\u4e2apixel footprint</li> <li>pixel footprint\u7684\u5f62\u72b6\u53ef\u80fd\u5f88\u590d\u6742</li> </ul> </li> <li> <p>idea</p> <ul> <li>low-pass filter and \u964d\u91c7\u6837</li> <li>\u4f7f\u7528\u5339\u914d\u5c4f\u5e55\u91c7\u6837\u7387\u7684\u5206\u8fa8\u7387</li> </ul> </li> <li> <p>mipmap: \u50a8\u5b58\u4e0d\u540c\u8ddd\u79bb\u5bf9\u5e94\u7684\u4e0d\u540c\u7684\u91c7\u6837\u7387</p> <p></p> </li> <li> <p>determine mip level D: estimate texture footprint using texture coordinates of neighboring screen samples</p> <p></p> </li> <li> <p>\u8ba9\u56fe\u50cf\u66f4\u52a0\u8fde\u7eed\uff1a\u6bd4\u5982\u4e00\u4e2a\u70b9\u4f4d\u4e8elevel D\u548cD+1\u4e4b\u95f4\uff0c\u8fd9\u65f6\u5019\u5148\u5f97\u5230D\u548cD+1\u65f6\u7684\u7ed3\u679c\uff0c\u518d\u5c06\u8fd9\u4e24\u4e2a\u7ed3\u679c\u8fdb\u884c\u63d2\u503c\uff0c\u5373\u4e09\u7ebf\u6027\u63d2\u503c trilinear filtering</p> </li> <li> <p>miplap\u7684\u5c40\u9650\u6027\uff1aoverblur </p> <p></p> </li> <li> <p>Elliptical weighted average filtering \u5404\u5411\u5f02\u6027\u7684filter</p> </li> </ul>"},{"location":"CG/cg12/#advanced-texturing","title":"Advanced Texturing","text":"<ol> <li>Environment Map \u628a\u73af\u5883\u5149\u6620\u5c04\u5230\u955c\u9762\u53cd\u5c04\u7269\u4f53\u4e0a a function from sphere to colors</li> </ol> <p>Cube Map: \u628a\u4e00\u4e2a\u7403\u5206\u6210\u516d\u4e2a\u6b63\u65b9\u5f62\u6620\u5c04\u5230\u7acb\u65b9\u4f53\u4e0a</p> <ol> <li> <p>Displacement Mapping</p> </li> <li> <p>Bump Mapping</p> </li> <li> <p>3D Procedural Texture</p> </li> <li> <p>Precomputed Shading \u9884\u8ba1\u7b97\u4e00\u4e2a\u53ef\u80fd\u7684\u9634\u5f71\u56fe\uff0c\u4e0d\u8003\u8651\u5149\u7167\u65b9\u5411\u7b49\u4fe1\u606f</p> </li> <li> <p>Bidirectional Texture Function</p> <ul> <li>Lighting- and view-dependent textures(6D)</li> <li>represent appearance of various materials</li> </ul> </li> </ol>"},{"location":"CG/cg13/","title":"Rendering","text":""},{"location":"CG/cg13/#monte-carlo-integration","title":"Monte Carlo Integration","text":"<p>Rendering = Infinite-dimensional Integrals</p> <ul> <li> <p>5D Integral: Real Camera Pixel Exposure</p> </li> <li> <p>estimate the volume of a d-dimensional sphere</p> </li> </ul> <p>\u5bf9\u9ad8\u7ef4\u5ea6\u60c5\u51b5\u6548\u7387\u4f1a\u4e0d\u65ad\u4e0b\u964d\u52300</p> <ul> <li> <p>Quadrature-based Integration Error   $$   Error \\sim \\frac{1}{n}=\\frac{1}{N^{1/d}}   $$</p> </li> <li> <p>Random Sampling Error \u968f\u673a\u91c7\u6837\u8bef\u5dee\u4e0e\u7ef4\u5ea6\u65e0\u5173   $$   Error=Variance^{\u00bd}\\sim\\frac{1}{\\sqrt{N}}   $$</p> </li> <li> <p>\u76f4\u81f3\u73b0\u5728\u4e3a\u6b62\uff0c\u8499\u7279\u5361\u6d1b\u91c7\u6837\u4ecd\u7136\u662f\u5904\u7406\u9ad8\u7ef4\u5bfc\u6570\u7684\u552f\u4e00\u529e\u6cd5</p> </li> </ul> <ol> <li> <p>Overview</p> <ul> <li>Idea: estimate integral based on random sampling of a function</li> <li>Strength<ul> <li>General and relatively simple</li> <li>Requires only function evaluation at any point</li> <li>Works for very general functions, including discontinuities</li> <li>Efficient for high-dimensional integrals</li> </ul> </li> <li>Weakness<ul> <li>noisy: \u53ea\u662f\u5e73\u5747\u610f\u4e49\u4e0a\u6b63\u786e</li> <li>\u6536\u655b\u901f\u5ea6\u53ef\u80fd\u5f88\u6162\uff0c\u9700\u8981\u5927\u91cf\u91c7\u6837</li> </ul> </li> </ul> </li> <li> <p>Monte Carlo estimator</p> <ul> <li>Define integral \\(\\int_a^bf(x)dx\\)</li> <li>Random variable \\(X_i\\sim p(x)\\)</li> <li>estimator: \\(F_N=\\dfrac{1}{N}\\sum_{i=1}^N\\dfrac{f(X_i)}{p(X_i)}\\)</li> </ul> </li> <li> <p>basic Monte Carlo estimator</p> <ul> <li>\\(X_i\\sim p(x)=\\dfrac{1}{b-a}\\)</li> <li>so \\(F_N=\\dfrac{1}{N}\\sum_{i=1}^Nf(X_i)\\)</li> </ul> </li> <li> <p>\u8499\u7279\u5361\u6d1b\u662funbiased\u7684</p> </li> </ol> <ol> <li> <p>Direct Lighting Estimate</p> <ul> <li> <p>idea: sample directions over hemisphere uniformly in solid angle</p> <p></p> </li> </ul> </li> <li> <p>Importance Sampling \u66f4\u52a0\u9ad8\u6548</p> <ul> <li>\\(p(x)\\)\u66f4\u52a0\u63a5\u8fd1\\(f(x)\\)\u7684\u5206\u5e03\uff0c\u51fd\u6570\u503c\u8d8a\u5927\u91c7\u6837\u6982\u7387\u8d8a\u9ad8</li> </ul> </li> <li> <p>\u5982\u679c\\(p(x)\\)\u7cbe\u786e\u77e5\u9053\\(f(x)\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u6837\u672c\u70b9\u5c31\u591f\u4e86</p> </li> </ol>"},{"location":"CG/cg13/#global-illumination","title":"Global Illumination","text":"<ol> <li> <p>deal with infinite dimension: probabilistic termination</p> <ul> <li>can design this to be unbiased - this is called Russian Roulette</li> </ul> </li> <li> <p>reweight</p> </li> </ol> \\[ \\left.\\left.\\left.\\mathrm{Let~}X_{\\mathrm{rr}}=\\left\\{\\begin{array}{l}\\frac{X}{p_{\\mathrm{rr}}},\\text{ with probability }p_{\\mathrm{rr}}\\\\0,\\mathrm{~otherwise}\\end{array}\\right.\\right.\\right.\\right. \\] <p>unbiased</p> \\[ E[X_{\\mathrm{rr}}]=p_{\\mathrm{rr}}E\\left[\\frac{X}{p_{\\mathrm{rr}}}\\right]+\\left(1-p_{\\mathrm{rr}}\\right)E[0]=E[X] \\] <p>\u4f46\u662f\u4f1a\u6269\u5927variance</p>"},{"location":"CG/cg2/","title":"2D Graphics","text":""},{"location":"CG/cg2/#rasterization","title":"Rasterization","text":"<ol> <li> <p>Convert 2D primitives (lines, polygons,filled/patterned regions, etc.) into a raster image</p> <ul> <li>For output on a monitor/printer</li> <li>Rasterization or Scan Conversion</li> </ul> </li> </ol> <ul> <li>\u6db2\u6676\uff1a\u4eae\u5ea6\u901a\u8fc7\u504f\u632f\u7247\u63a7\u5236\uff0c\u56e0\u6b64\u663e\u793a\u9ed1\u8272\u65f6\u4f1a\u51fa\u73b0\u6f0f\u5149\u95ee\u9898</li> </ul> <ol> <li>Raster Graphics Packages</li> </ol> <ul> <li>The efficiency is critical to the performance of a display system</li> <li>The raster graphics package is typically a collection of efficient algorithms for scan converting (rasterizing) primitives</li> <li>High performance graphics workstations have most of these algorithms implemented in hardware<ul> <li>Modern PCs (video cards)</li> </ul> </li> </ul>"},{"location":"CG/cg2/#line-segment","title":"Line Segment","text":"<ol> <li>Coordinate System</li> </ol> <ol> <li>The line is a powerful element used since the days of Euclid to model the edges in the world</li> <li> <p>Given a line segment defined by its endpoints, determine the pixels and color which best model the line segment.</p> </li> <li> <p>Requirements</p> <ul> <li>the selected pixels should lie as close to the ideal line as possible</li> <li>the sequence of pixels should be as straight as possible</li> <li>all lines should appear to be of constant brightness independent of their length and orientation</li> <li>should start and end accurately</li> <li>should be drawn as rapidly as possible</li> <li>should be possible to draw lines with different width and line styles</li> </ul> </li> <li> <p>Equation of a line</p> <ul> <li>\\(y=mx+c\\)</li> <li>\u5bf9\u4e8e\u7ebf\u6bb5\u7aef\u70b9 \\(P(x_1,y_1),P(x_2,y_2)\\)</li> <li>\u53ef\u4ee5\u8ba1\u7b97\u659c\u7387\uff0cx\u6bcf\u589e\u5927\u5355\u4f4d\u957f\u5ea6\uff0cy\u589e\u5927m</li> </ul> </li> <li> <p>Digital Differential Analyzer(DDA)</p> <ul> <li>\u53ea\u8003\u8651first octant</li> </ul> <p></p> <ul> <li>use differential equation</li> <li>increment x by 1</li> <li>\\(x_i=x_{i,prev}+1,y_i=y_{i,prev}+m\\)</li> <li>\\([x_i,round(y_i)]\\)</li> </ul> </li> <li> <p>DDA is an incremental algorithm, uses floating point operations, which are very cleverly avoided in an algorithm.</p> </li> <li> <p>Bresenham's Line Drawing</p> <ul> <li>\u5c0f\u4e8e45\u00b0\u65f6\uff0cy\u53ea\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u4e0d\u53d8\u6216\u52a01</li> </ul> <p></p> </li> </ol>"},{"location":"CG/cg2/#circles","title":"Circles","text":"<ol> <li> <p>scan converting a circle</p> </li> <li> <p>Bresenham's Algorithm</p> </li> </ol> <ul> <li>\u52a0\u901f\u7684\u95ee\u9898\uff1asin\u548ccos\u7684\u8bef\u5dee\u4f1a\u4e0d\u65ad\u7d2f\u79ef</li> </ul>"},{"location":"CG/cg2/#polygon-filling","title":"Polygon Filling","text":"<ol> <li>representation:</li> </ol> <ol> <li> <p>filling: vertex representation -&gt; lattice representation</p> <ul> <li>fill a polygonal region -&gt; test every pixel in the raster to see if it lies inside the polygon</li> </ul> </li> <li> <p>even-odd test: \u5f15\u4e00\u6761\u5c04\u7ebf\u4e0e\u56fe\u5f62\u4ea4\u70b9\u5947\u6570\u4e2a\u5219\u56fe\u5f62\u5185\uff0c\u5076\u6570\u4e2a\u5219\u56fe\u5f62\u5916</p> </li> </ol> <ol> <li>winding number: \u6309\u987a\u5e8f\u904d\u5386\u6240\u6709\u9876\u70b9\u548c\u6b64\u70b9\u8fde\u7ebf\u5bf9\u5e94\u5411\u91cf\uff0c\u6839\u636e\u65cb\u8f6c\u8fc7\u7684\u89d2\u5ea6\u5224\u65ad\u662f\u5426\u5728\u56fe\u5f62\u5185\u3002\u6216\u4ece\u4e00\u70b9\u505a\u5c04\u7ebf\uff0c\u5728\u6b64\u4e4b\u524d\u9996\u5148\u5236\u5b9a\u4e00\u4e2a\u591a\u8fb9\u5f62\u73af\u7ed5\u65b9\u5411\uff0c\u7531\u4e0a\u5f80\u4e0b\u4e3a\u8d1f\uff0c\u7531\u4e0b\u5f80\u4e0a\u4e3a\u6b63\uff0c\u5224\u65ad\u6b64\u5c04\u7ebf\u548c\u8fb9\u4ea4\u70b9\u7684\u65b9\u5411\uff0c\u4e3a0\u5219\u5728\u591a\u8fb9\u5f62\u5916\uff0c\u5426\u5219\u591a\u8fb9\u5f62\u5185</li> </ol> <ol> <li> <p>Scan-line Method</p> <ul> <li>Use intersections between region boundaries and scan lines to identify pixels that are inside the area</li> <li>Exploit the coherence<ul> <li>Spatial coherence: Except at the boundary edges, adjacent pixels are likely to have the same characteristics</li> <li>Scan line coherence: Pixels in the adjacent scan lines are likely to have the same characteristics</li> </ul> </li> <li>From top to bottom, from left to right<ul> <li>the intersections are paired and in-between pixels are set to the specified intensity</li> </ul> </li> <li>Algorithm<ul> <li>Find the intersections of the scan line with all the edges in the polygon</li> <li>Sort the intersections by increasing X-coordinates</li> <li>Fill the pixels between pair of intersections</li> </ul> </li> </ul> <p></p> <ul> <li>Efficiency in Scan-line Method<ul> <li>Intersections could be found using edge coherence</li> <li>the X-intersection value \\(x_{i+1}\\) of the lower scan line can be computed from the X-intersection value \\(x_i\\) of the preceding scanline as \\(x_{i+1}=x_i+1/m\\)</li> <li>List of active edges could be maintained to increase efficiency</li> <li>Efficiency could be further improved if polygons are convex, much better if they are only triangles</li> </ul> </li> <li>Special cases</li> </ul> <p></p> <ul> <li>Advantages:<ul> <li>efficient</li> <li>each pixel is visited only once</li> <li>shading algorithms could be easily integrated to obtain shaded region</li> </ul> </li> </ul> </li> <li> <p>Seed Fill Algorithm</p> </li> </ol>"},{"location":"CG/cg2/#clipping","title":"Clipping","text":"<ol> <li> <p>Clipping: removal of content that is not going to be displayed</p> <ul> <li>\u5c4f\u5e55\u5916\uff0ccamera\u540e\uff0ctoo close or too far</li> <li>usually done before scan converting to make more efficient</li> </ul> </li> </ol>"},{"location":"CG/cg3/","title":"Introduction to OpenGL","text":"<p>Three stages</p> <ul> <li>Define Objects in World Space</li> <li>Set Modeling and Viewing Transformations</li> <li>Render the Scene</li> </ul>"},{"location":"CG/cg3/#how-opengl-works","title":"How OpenGL Works","text":"<ul> <li> <p>OpenGL is a state machine</p> </li> <li> <p>Give orders to set the current state of any one of its internal variables, or to query its current status</p> </li> <li>The current state won't change until you explicitly specify a new value</li> <li>Each of the system's state variables has a default value</li> </ul> <ol> <li> <p>OpenGL Primitives</p> <ul> <li>GL_POINTS</li> <li>GL_LINES</li> <li>GL_LINE_STRIP</li> <li> <p>GL_LINE_LOOP</p> </li> <li> <p>GL_TRIANGLES</p> </li> <li>GL_QUADS</li> <li>GL_POLYGON</li> <li>GL_TRIANGLE_STRIP</li> <li>GL_TRIANGLE_FAN</li> <li>GL_QUAD_STRIP</li> </ul> </li> </ol> <p>Sample</p> <p> </p> <ol> <li> <p>Command Syntax</p> <ul> <li>All command names begin with <code>gl</code></li> <li>Constant names are in all uppercase</li> <li>Data types begin with GL<ul> <li><code>GLfloat onevertex[3]</code></li> </ul> </li> <li>Most commands end in two characters that determine the data type of expected arguments<ul> <li><code>glVertex3f</code></li> </ul> </li> </ul> </li> <li> <p><code>glVertex</code></p> <ul> <li><code>glVertex2f( x, y );</code></li> <li><code>glVertex3f( x, y, z );</code></li> <li><code>glVertex4f( x, y, z, w );</code></li> <li><code>glVertex3fv( a ); // with a[0], a[1], a[2]</code></li> </ul> </li> <li> <p>building objects from vertices: Specify a primitive mode, and enclose a set of vertices in a glBegin / glEnd block</p> </li> <li> <p>colors</p> <ul> <li>defined as RGB components from 0.0 to 1.0</li> <li>for background<ul> <li><code>glClearColor(0.0,0.0,0.0) //black</code></li> <li><code>glClear(GL_COLOR_BUFFER_BIT)</code></li> </ul> </li> <li>for objects<ul> <li><code>glColor3f(1.0,1.0,1.0)</code></li> </ul> </li> </ul> </li> </ol> <ol> <li> <p>Polygon Display Modes</p> <ul> <li><code>glPolygonMode( GLenum face, GLenum mode );</code><ul> <li>Faces: GL_FRONT / GL_BACK / GL_FRONT_AND_BACK`</li> <li>Modes: GL_FILL / GL_LINE / GL_POINT</li> <li>By default, both the front and back face are drawn filled</li> </ul> </li> <li><code>glFrontFace( GLenum mode );</code>\u5b9a\u4e49\u591a\u8fb9\u5f62\u7684\u524d\u9762\u65b9\u5411<ul> <li>GL_CCW (default) / GL_CW \u9ed8\u8ba4\u9006\u65f6\u9488</li> </ul> </li> <li><code>glCullFace( Glenum mode );</code>\u6307\u5b9a\u8981\u5254\u9664\uff08\u4e0d\u6e32\u67d3\uff09\u7684\u591a\u8fb9\u5f62\u9762<ul> <li>GL_FRONT / GL_BACK</li> </ul> </li> <li>You must enable and disable culling with <code>glEnable( GL_CULL_FACE )</code> or <code>glDisable( GL_CULL_FACE );</code> \u542f\u7528\u6216\u7981\u7528\u5254\u9664</li> </ul> </li> <li> <p>Drawing Other Objects</p> <ul> <li>cylinders, cones and more complex surfaces called NURBS</li> <li>spheres and cubes</li> </ul> </li> <li> <p>Structure of GLUT-based Programs</p> <ul> <li>rely on user-defined callback functions</li> </ul> </li> </ol> <ol> <li>Double buffer/Tripple buffer: \u9690\u85cf\u7ed8\u56fe\u7684\u8fc7\u7a0b\uff0cback buffer\u753b\u597d\u540e\u4e0efront buffer\u4ea4\u6362\uff0c\u76f4\u63a5\u8ba9\u7528\u6237\u770b\u5230\u753b\u597d\u7684</li> <li> <p>More GLUT</p> <pre><code>- Additional GLUT fucntions\n  - `glutPositionwindow(int x,int y)`\n  - `glutReshapewindow(int w,int h)`\n- Additional callback functions\n</code></pre> </li> <li> <p>Reshape Callback/Mouse Callback/Keyboard Callback/Idle Callback/Menu Callback</p> </li> </ol>"},{"location":"CG/cg4/","title":"Basic Math","text":""},{"location":"CG/cg4/#vector","title":"Vector","text":"<ul> <li>multiplication, normalization</li> <li>addition(for any dimension)</li> <li> <p>dot product: directional projection of \\(a\\) onto \\(b\\) (\\(b\\) being a unit vector)</p> </li> <li> <p>orthonormal vectors: perpendicular and unit length</p> </li> <li> <p>\u5085\u91cc\u53f6\u53d8\u6362\u4e2d\u7684\u57fa\u51fd\u6570\u4e5f\u662f\u6b63\u4ea4\u57fa</p> </li> <li> <p>cross product</p> </li> </ul>"},{"location":"CG/cg4/#line-equation","title":"Line Equation","text":"<ul> <li> <p>\\((p-p_0)n=0\\)</p> </li> <li> <p>\\(Ax+By+C=0\\)</p> </li> </ul>"},{"location":"CG/cg5/","title":"Geometric Transformations","text":""},{"location":"CG/cg5/#transformation","title":"Transformation","text":"<p>As all objects are eventually represented using points, it is sufficient to know how to transform points.</p> <ol> <li> <p>Translation: a rigid body transformation, translation or shift vector \\((T_x,T_y,T_z)\\)</p> </li> <li> <p>Scaling: Scale factor \\((S_x,S_y,S_z),x\\rightarrow x*S_x\\)</p> <ul> <li>\u7f29\u653e\u662f\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\u7684\u7f29\u653e\uff0c\u7f29\u653e\u524d\u540e\u7269\u4f53\u4e2d\u5fc3\u4f1a\u53d8\u5316\uff0c\u9664\u975e\u7269\u4f53\u4e2d\u5fc3\u5728\u539f\u70b9\u3002\u662f\u5bf9\u6574\u4e2a\u7a7a\u95f4\u7684\u7f29\u653e</li> <li>\u4e0d\u6539\u53d8\u4e2d\u5fc3\u7684\u7f29\u653e\uff1a\u5c06\u4e2d\u5fc3\u5148\u79fb\u52a8\u5230\u539f\u70b9\u518d\u7f29\u653e\u518d\u5e73\u79fb\u56de\u53bb</li> </ul> </li> <li> <p>Rotation: also a rigid body transformation</p> </li> </ol> <ul> <li>rotate around \\((x_r,y_r)\\):\u5148\u5e73\u79fb\u5c06\u53c2\u8003\u70b9\u79fb\u52a8\u5230\u539f\u70b9\uff0c\u518d\u65cb\u8f6c\uff0c\u518d\u5e73\u79fb\u56de\u53bb</li> </ul> <ol> <li> <p>Shearing: produce shape distortions</p> <ul> <li>shearing in x-direction: \\(x\\rightarrow x+ay,y\\rightarrow y,z\\rightarrow z\\)</li> </ul> </li> <li> <p>General Linear Transformation: \u7528\u77e9\u9635\u7edf\u4e00\u8868\u793a\u4e0a\u8ff0\u53d8\u6362</p> <ul> <li>homogeneous coordinates: \\((x,y,z,w)\\) represents \\((x/w,y/w,z/w)\\) in Cartesian coordinates</li> </ul> </li> </ol> <ol> <li> <p>Matrix Notations and Representations</p> <ul> <li>column vector \\(P_h\\) represents point \\(P(x,y,z)\\)</li> <li>a transformation is represented by a \\(4\\times 4\\) matrix \\(M\\)</li> <li>\u53ef\u4ee5\u7528\u4e00\u4e2a\u77e9\u9635\u6765\u8868\u793a\u8981\u5b8c\u6210\u7684\u53d8\u6362\uff08\u56e0\u4e3a\u6bcf\u6b21\u53d8\u6362\u77e9\u9635\u76f8\u4e58\u4e5f\u662f\u76f8\u540c\u89c4\u6a21\u7684\uff09</li> </ul> </li> </ol> <ul> <li>\u6ce8\u610f\u4ee5y\u4e3a\u8f6c\u8f74\u65f6\u7684\u7b26\u53f7</li> </ul> <ol> <li>Rotation about an arbitrary axis</li> </ol> <ol> <li>Quaternion:\u56db\u5143\u6570</li> </ol>"},{"location":"CG/cg5/#transformations-in-opengl","title":"Transformations in OpenGL","text":"<ol> <li> <p>The transformation matrices appear in reverse order to that in which the transformations are applied. In OpenGL, the transformation specified most recently is the one applied first.</p> </li> <li> <p>Matrix Stacks</p> <ul> <li><code>glPushMatrix(void);</code></li> <li><code>glPopMatrix(void);</code></li> </ul> </li> </ol>"},{"location":"CG/cg5/#non-linear-tranformation","title":"Non-linear tranformation","text":"<ul> <li>No Distortion</li> <li>Barrel Distortion</li> <li>Pincushion Distortion</li> </ul>"},{"location":"CG/cg6/","title":"Viewing in 2D &amp; 3D","text":""},{"location":"CG/cg6/#2d-viewing","title":"2D Viewing","text":"<ol> <li>world is infinite but screen is finite.</li> <li>\u901a\u8fc7appropriate transformation\u53ef\u4ee5\u5f97\u5230\u901a\u8fc7screen\u770b\u5230\u7684window</li> </ol>"},{"location":"CG/cg6/#window","title":"Window","text":"<ol> <li>rectangular region, specified by a center <code>(xCenter, yCenter)</code> and size <code>windowSize</code></li> <li>Screen referred to as Viewport is a discrete matrix of pixels specified by size <code>screenSize (in pixels)</code></li> <li> <p>Mapping the 2D world seen in the window onto the viewport is 2D viewing transformation, also called window-to-viewport transformation.</p> <ul> <li>\u6ce8\u610f\u5bf9image\uff0cx\u8f74\u6b63\u5411\u671d\u53f3\uff0cy\u8f74\u6b63\u5411\u671d\u4e0b\uff0c\u800c2D world\u4e2dy\u8f74\u6b63\u5411\u671d\u4e0a\uff0c\u56e0\u6b64\u5728\u7f29\u653e\u65f6\u8981\u52a0\u4e00\u4e2a\u8d1f\u53f7</li> </ul> </li> </ol> <ol> <li>Aspect Ratio: \u4fdd\u9ad8/\u4fdd\u5bbd</li> </ol> <ol> <li> <p>OpenGL Commands</p> <ol> <li> <p><code>gluOrtho2D( left, right, bottom, top )</code>: Creates a matrix for projecting 2D coordinates onto the screen</p> </li> <li> <p><code>glViewport(x, y, width, height)</code>: Define a rectangle of pixels onto which the final image is mapped.</p> <pre><code>   - `(x, y)` specifies the lower-left corner of the viewport.\n\n   - `(width, height)` specifies the size of the viewport rectangle.\n</code></pre> </li> </ol> </li> <li> <p>Modeling v.s. Viewing</p> <ul> <li>Modeling\u53d8\u6362\u6539\u53d8\u4e86world\u4e2d\u653e\u7f6e\u7684\u7269\u4f53\uff0c\u4f1a\u6539\u53d8\u573a\u666f</li> <li>Viewing\u53d8\u6362\u4ec5\u4ec5\u79fb\u52a8\u4e86\u76f8\u673a\uff0c\u4e0d\u6539\u53d8\u573a\u666f</li> </ul> </li> </ol>"},{"location":"CG/cg6/#3d-viewing","title":"3D Viewing","text":"<p>To display a 3D world onto a 2D screen    </p> <ul> <li> <p>Specification becomes complicated because there are many parameters to control</p> </li> <li> <p>Additional task of reducing dimensions from 3D to 2D (projection)</p> </li> <li> <p>3D viewing is analogous(\u7c7b\u4f3c) to taking a picture with a camera</p> </li> </ul> <ol> <li>PRP: Projection Reference Point = Eye Position</li> </ol> <ol> <li> <p>Persepective Projection: Foreshortening depends on distance from viewer \u4e0d\u80fd\u7528\u6765\u6d4b\u91cf   </p> </li> <li> <p>Engineering Viewing, Parallel Projection: DOP, Direction of Projection = Eye position at infinity</p> </li> </ol> <ol> <li> <p>Oblique Projection(\u659c\u5e73\u884c)</p> <ul> <li>Projectors make an arbitrary angle with the projection plane    </li> <li>Angles in planes parallel to the projection plane are preserved</li> </ul> </li> </ol> <ol> <li>View Specification</li> </ol> <ul> <li>\u901a\u8fc7\u4e00\u4e2a\u7edd\u5bf9\u7684upVector\u8fdb\u884c\u6b63\u4ea4\u5316\u5f97\u5230\u4e00\u4e2a\u548cviewDirection\u5782\u76f4\u7684\u5411\u91cf</li> </ul> <ol> <li>world-to-view transformation or view orientation matrix: \u5c06\u4e16\u754c\u5750\u6807\u7cfb\u53d8\u6362\u5230\u76f8\u673a\u5750\u6807\u7cfb</li> </ol> <ol> <li>Perspective Projection<ul> <li>prp: projection reference point or cop: center of projection</li> </ul> </li> </ol> <ol> <li>View Window</li> </ol> <ol> <li>Perspective Viewing</li> </ol> <ol> <li>Parallel Viewing</li> </ol> <ol> <li> <p>View Volume: \u5728\u6b64\u4ee5\u5916\u7684\u5185\u5bb9\u770b\u4e0d\u5230\uff0c\u4e0d\u7528\u8003\u8651</p> <ul> <li>Perspective projection</li> </ul> <p></p> <ul> <li>Parallel projection</li> </ul> <p></p> </li> </ol>"},{"location":"CG/cg6/#complete-view-specification","title":"Complete View Specification","text":"<ol> <li> <p>Specification in world coordinates   </p> <ul> <li>position of viewing (vrp), direction of viewing(-n),</li> <li>up direction for viewing (upVector) </li> </ul> </li> <li> <p>Specification in view coordinates    </p> <ul> <li>view window : center (cx, cy), width and height,    </li> <li>prp : distance from the view plane,</li> <li>front clipping plane : distance from view plane</li> <li>back clipping plane : distance from view plane</li> </ul> </li> </ol>"},{"location":"CG/cg7/","title":"Hidden Surface Removal &amp; Antialiasing","text":""},{"location":"CG/cg7/#hidden-surface-removal","title":"Hidden Surface Removal","text":""},{"location":"CG/cg7/#related-opengl-functions","title":"Related OpenGL Functions","text":"<ol> <li><code>glEnable/ glDisable(GL_CULL_FACE);</code></li> <li><code>glCullFace(mode);</code></li> <li><code>glutInitDisplayMode(...| GLUT_DEPTH);</code></li> <li><code>glEnable(GL_DEPTH_TEST);</code></li> </ol>"},{"location":"CG/cg7/#visible-surface-determination","title":"Visible Surface Determination","text":"<ol> <li> <p>Goal</p> <ul> <li>Given: a set of 3D objects and view specification</li> <li>Determine: those parts of the objects that are visible when viewed along the direction of projection</li> </ul> </li> <li> <p>Approaches: object space algorithm and image space algorithm</p> </li> <li> <p>Object Precision Algorithm</p> </li> </ol> <pre><code>for (each object in the world) {\n    determine the parts of the object whose view is unobstructed by other parts or any other object;\n    draw those parts;\n}\n</code></pre> <ol> <li>Image Precision Algorithm</li> </ol> <ol> <li> <p>Back-face Culling: elimination of back-faces</p> <ul> <li>\u5728\u5c01\u95ed\u591a\u8fb9\u5f62\u8868\u9762 like surface of a polyhedral volume or a solid polyhedron \u5f88\u663e\u7136\u5730\u6211\u4eec\u770b\u4e0d\u5230\u80cc\u9762\u7684\u90e8\u5206</li> <li>back face: part of the object surface facing away from the eye</li> <li> <p>Algorithm</p> <ul> <li>\u627e\u5230eye-vector/normal\u548c\u9762\u4e4b\u95f4\u7684\u89d2\u5ea6</li> <li>\u5982\u679c\u8fd9\u4e2a\u89d2\u5ea6\u57280\u00b0~90\u00b0\uff0c\u5219\u4e3a\u80cc\u9762\uff0c\u5254\u9664</li> </ul> <p></p> </li> <li> <p>\u5904\u7406\u4e0d\u4e86\u7684\u60c5\u51b5\uff1a</p> </li> </ul> <p></p> </li> <li> <p>Painter's Algorithm: draw back to front</p> <ul> <li>Failure case: \u6392\u4e0d\u51fa\u5e8f</li> </ul> <p></p> <ul> <li> <p>Warnock's Area Subdivision</p> <ul> <li>Start with whole image</li> <li>If one of the easy cases is satisfied, draw what's in front</li> <li>front polygon covers the whole window or</li> <li>there is at most one polygon in the window.</li> <li>Otherwise, subdivide region into 4 windows and repeat </li> <li>If region is single pixel, choose surface with smallest depth</li> <li>Advantages:</li> <li>No over-rendering \u4e0d\u4f1a\u91cd\u590d\u7ed8\u5236</li> <li>Anti-aliases well. Go deeper to get sub-pixel information</li> <li>Disadvantages: \u4e0d\u540c\u60c5\u51b5\u8fd0\u884c\u6548\u7387\u5dee\u8ddd\u5927</li> <li>Tests are quite complex and slow </li> <li>Not amenable for hardware implementation \u4e0d\u9002\u5408\u505a\u786c\u4ef6\u5b9e\u73b0</li> </ul> <p></p> </li> </ul> </li> <li> <p>Z-buffer Algorithm</p> <ul> <li>\u9664\u4e86\u4e00\u4e2aframe buffer\u5b58color\u503c\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a\u4e00\u6837size\u7684z-buffer\u5b58\u50a8depth(z) value</li> </ul> <p></p> <ul> <li>Code</li> </ul> <pre><code>for ( j=0; j&lt;SCREEN HEIGHT; j++ )\nfor ( i=0; i&lt;SCREEN WIDTH; i++ )\n{\n    WriteToFrameBuffer(i, j, BackgroundColor);\n    WriteToZBuffer(i, j, MAX);\n}\nfor ( each polygon )\nfor ( each pixel in polygon's projection )\n{\n    z = polygon's z value at (i, j) ;\n    if( z&lt; ReadFromZBuffer(i, j) ) {\n        WriteToFrameBuffer(i, j, polygon's color at (i, j));\n        WriteToZBuffer(i, j, z);\n    }\n}\n</code></pre> <ul> <li>Related OpenGL Functions</li> </ul> <p></p> </li> <li> <p>BSP Tree: \u5bf9\u753b\u5bb6\u7b97\u6cd5\u5f88\u6709\u6548\uff0c\u5e2e\u52a9\u627e\u5230\u524d\u540e\u987a\u5e8f\u3002\u6811\u53ef\u4ee5\u9884\u5148\u8ba1\u7b97</p> <ul> <li> <p>Very efficient for a static group of 3D polygons as seen from an arbitrary viewpoint</p> </li> <li> <p>Correct order for Painter's algorithm is determined by a traversal of the binary tree of polygons</p> <p></p> </li> <li> <p>Pros</p> <ul> <li>simple, elegant scheme</li> <li>only write to framebuffer</li> </ul> </li> <li> <p>Cons</p> <ul> <li>\u9700\u8981\u8f83\u4e3a\u7e41\u7410\u7684\u9884\u5904\u7406\u8fc7\u7a0b\uff0c\u9002\u7528\u4e8e\u9759\u6001\u573a\u666f</li> <li>splitting\u4f1a\u589e\u5927\u573a\u666f\u4e2d\u591a\u8fb9\u5f62\u6570\u91cf</li> </ul> </li> </ul> </li> <li> <p>k-d Tree</p> </li> <li> <p>Ray Casting</p> </li> </ol>"},{"location":"CG/cg7/#aliasing","title":"Aliasing","text":"<ol> <li>Aliasing\u662f\u7531\u4e8edisplay\u8bbe\u5907\u7684\u79bb\u6563\u6027\uff0c\u5982\u7528\u4e00\u4e9b\u6709\u9650\u6027\u91c7\u6837\u8fde\u7eed\u4fe1\u53f7\uff0c\u5982\u679c\u91c7\u6837\u4e0d\u5145\u5206\uff0c\u4fe1\u606f\u5c31\u4f1a\u4e22\u5931</li> <li>\u5f71\u54cd\uff1ajagged edges(\u952f\u9f7f), incorrectly rendered fine details, small objects might miss(\u6709\u4e9b\u7ec6\u8282\u6ca1\u91c7\u6837\u5230)</li> </ol>"},{"location":"CG/cg7/#anti-aliasing","title":"Anti-aliasing","text":"<ol> <li>Super-sampling\uff1a\u589e\u52a0\u91c7\u6837\u7387</li> <li>\u4f4e\u901a\u6ee4\u6ce2\uff1a\u6ee4\u53bb\u9ad8\u9891\u90e8\u5206</li> <li>Area sampling: Intensity of the boundary pixels is adjusted depending on the percent of the pixel area covered by the primitive.</li> </ol>"},{"location":"CG/cg8/","title":"Color Theory &amp; Programmable Pipeline","text":""},{"location":"CG/cg8/#color-theory","title":"Color Theory","text":""},{"location":"CG/cg8/#what-is-color","title":"What is Color?","text":"<ul> <li>Color is the brain's reaction to a specific visual stimulus</li> <li>\u89c2\u5bdf\u8005\u7684\u4e3b\u89c2\u611f\u77e5 subjective sensation experienced by the observer</li> <li>\u53d6\u51b3\u4e8e\u5149\u7684\u7269\u7406\u6027\u8d28\u3001\u4e0e\u6750\u6599\u7684\u4ea4\u4e92\u3001\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf\u548c\u5927\u8111\u5bf9\u7531\u6b64\u4ea7\u751f\u7684\u73b0\u8c61\u7684\u89e3\u8bfb</li> </ul> <ol> <li> <p>Physics of Light</p> <ul> <li> <p>Wave Model or Particle Model</p> </li> <li> <p>\u901a\u5e38\u4f7f\u7528particle model\uff0c\u8ba4\u4e3a\u5149\u7531\u5149\u5b50\u6784\u6210</p> </li> </ul> </li> <li> <p>Properties of Light</p> <ul> <li> <p>\\(E=hf\\)</p> </li> <li> <p>Photon behavior is cyclic and has a repeated pattern</p> </li> <li> <p>\\(\\lambda=\\dfrac{c}{f}\\)</p> </li> <li> <p>Each photon has a wavelength associated with it and the perceived color of light depends on this wavelength</p> </li> <li> <p>\u5149\u5f3a\u53d6\u51b3\u4e8epresent\u7684photon\u6570\u91cf</p> </li> </ul> </li> <li> <p>Spectral Energy Distribution Curve</p> <ul> <li>Human eyes are sensitive to wavelengths in the range 330-770nm</li> </ul> </li> <li> <p>Perception of Color</p> <ul> <li>spectral sensitivity curves of cones: \\(r=\\int f(x)s(x)dx\\)</li> </ul> </li> </ol>"},{"location":"CG/cg8/#color-model","title":"Color Model","text":"<ol> <li>RGB</li> <li>CMYK: Cyan/Maagenta/Yellow/Black</li> <li>HSV: Hue/Saturation/Value</li> </ol>"},{"location":"CG/cg8/#programming-pipeline","title":"Programming Pipeline","text":"<ul> <li>Programmable stage: vertex, assembly, fragment </li> <li>shader</li> </ul>"},{"location":"CG/cg8/#glsl","title":"GLSL","text":"<ol> <li> <p>uniform variables: set by the program that can be changed at runtime, but are constant across each execution of the shader</p> </li> <li> <p>attribute variables: properties of a vertex, input of vertex shader</p> </li> <li>varying variables:</li> </ol>"},{"location":"CG/cg9/","title":"Curves","text":""},{"location":"CG/cg9/#implict-curves","title":"Implict Curves","text":"<ul> <li>Advantages: easy to determine if a point is on the curve</li> <li>Disadvantage: difficult to find all points on it</li> <li>Display</li> <li>Subdivision <ul> <li>\u6ce8\u610f\u4ec5\u51ed\u683c\u5b50\u56db\u4e2a\u9876\u70b9\u503c\u76f8\u540c\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u4e0d\u7ee7\u7eed\u7ec6\u5206\uff0c\u56e0\u4e3a\u53ef\u80fd\u5728\u683c\u5b50\u4e2d\u5fc3\u53d1\u751f\u7b26\u53f7\u53d8\u6362\u3002</li> </ul> </li> </ul>"},{"location":"CG/cg9/#parametric-curves","title":"Parametric Curves","text":"<ul> <li>variable is a scalar and function is a vector</li> </ul>"},{"location":"CG/cg9/#interpolation","title":"Interpolation","text":"<ol> <li>nearest neighbor interpolation \u76f4\u63a5\u548c\u6700\u8fd1\u91c7\u6837\u70b9\u503c\u76f8\u540c</li> <li> <p>linear interpolation \u7ebf\u6027\u63d2\u503c\uff0c\u503c\u8fde\u7eed\u4f46\u662f\u5bfc\u6570\u4e0d\u8fde\u7eed</p> </li> <li> <p>smooth interpolation</p> </li> <li> <p>cubic hermite interpolation</p> <ul> <li>given: \u4e24\u4e2a\u70b9\u7684\u503c\u548c\u5bfc\u6570</li> <li>\u505a\u4e00\u4e2a\u4e09\u6b21\u591a\u9879\u5f0f\u63d2\u503c \\(P(t)=at^3+bt^2+ct+d\\)</li> <li>\u76f4\u63a5\u5e26\u5165\u6c42\u89e3\u5c31\u884c</li> </ul> </li> <li> <p>Hermite Basis Functions</p> </li> </ol> \\[ P(t)=\\sum_{i=0}^3h_iHi(t) \\] <ul> <li>change basis</li> </ul> \\[ \\begin{aligned} &amp;H_{0}(t) =2t^3-3t^2+1 \\\\ &amp;H_1(t) =-2t^3+3t^2 \\\\ &amp;H_2(t) =t^3-2t^2+t \\\\ &amp;H_3(t) =t^3-t^2  \\end{aligned} \\] <ol> <li>Catmull-Rom interpolation</li> </ol>"},{"location":"CG/cg9/#bezier-curve","title":"Bezier Curve","text":"\\[ C(t)=\\sum_{i=0}^nP_iB_{i,n}(t),t\\in[0,1] \\] <ul> <li>\\(P_o\\)\u662fcontrol points \u5176\u4e2d\u66f2\u7ebf\u7a7f\u8fc7\u59cb\u672b\u63a7\u5236\u70b9</li> <li>\u7b2c\u4e00\u548c\u7b2c\u4e8c\u4e2a\u70b9\u8fde\u7ebf\u6070\u4e3a\u7b2c\u4e00\u4e2a\u70b9\u5904\u7684\u5207\u7ebf\uff0c\u540c\u7406\u5012\u6570\u7b2c\u4e8c\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u8fde\u7ebf\u6070\u4e3a\u6700\u540e\u4e00\u4e2a\u70b9\u5904\u7684\u5207\u7ebf</li> <li>\\(B_{i,n}(t)=C_n^it^i(1-t)^{n-i}\\)</li> <li>0\u52301\u975e\u8d1f</li> <li>\\(\\sum_{i=0}^nB_{i,n}(t)=1\\)</li> <li>\\(B_{i,n}(t)=B_{n-i,n}(1-t)\\)</li> <li>\\(B_{i,n}(0)=1,i=0;=0,else\\)</li> <li>\\(B_{i,n}(1)=1,i=n;=0,else\\)</li> </ul> <ul> <li>\u5bf9\u79f0\u6027</li> <li>affine invariance</li> <li>convex hull \u8d1d\u585e\u5c14\u66f2\u7ebf\u88ab\u5305\u88f9\u5728\u5176\u63a7\u5236\u70b9\u8fde\u6210\u7684\u51f8\u5305\u4e2d</li> <li> <p>variation diminishing \u4e00\u6761\u76f4\u7ebf\u7a7f\u8fc7\u51f8\u5305\uff0c\u4e0e\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u4ea4\u70b9\u6570\u4e0d\u8d85\u8fc7\u4e0e\u63a7\u5236\u591a\u8fb9\u5f62\u7684\u4ea4\u70b9\u6570</p> </li> <li> <p>rational Bezier Curve \u7528\u6237\u63a7\u5236\u6743\u91cd</p> </li> </ul> \\[ R(t)=\\frac{\\sum_{i=0}^{n}B_{i,n}(t)\\omega_{i}P_{i}}{\\sum_{i=0}^{n}B_{i,n}(t)\\omega_{i}}=\\sum_{i=0}^{n}R_{i,n}(t)P_{i} \\] <ul> <li> <p>\u7f3a\u70b9\uff1a\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab \u4e00\u4e2a\u63a7\u5236\u70b9\u4f1a\u5f71\u54cd\u6574\u4e2acurve</p> </li> <li> <p>Non-Uniform Rational B-Splines \u7528\u6237\u6307\u5b9a\u63a7\u5236\u70b9\u63a7\u5236\u8303\u56f4</p> </li> </ul>"},{"location":"CLDF/","title":"\u8ba1\u7b97\u673a\u903b\u8f91\u8bbe\u8ba1\u57fa\u7840","text":"<p>Abstract</p> <ul> <li>2023fall</li> <li>Teacher: \u8463\u4e9a\u6ce2</li> <li>\u4ec5\u4f9b\u4e2a\u4eba\u4fdd\u5b58\uff0c\u5927\u91cf\u53c2\u8003\u81ea HobbitQia\uff0c\u540c\u65f6\u90e8\u5206\u56fe\u7247\u548c\u5185\u5bb9\u4e5f\u53c2\u8003\u81ea Isshiki\u4fee\uff0c\u5f3a\u70c8\u63a8\u8350\u79fb\u6b65\u81f3\u5bf9\u5e94\u94fe\u63a5\u9605\u8bfb\uff08\u6709\u4e9b\u56fe\u7247\u5c31\u662f\u76f4\u63a5copy\u4e24\u4f4d\u524d\u8f88\u7684\u94fe\u63a5\u7684\uff09</li> </ul>"},{"location":"CLDF/CLDF1/","title":"Chapter 1 Logic and Digital System","text":""},{"location":"CLDF/CLDF1/#digital-computer-systems","title":"Digital &amp; Computer Systems","text":"<ol> <li>\u901a\u8fc7\u4e00\u7cfb\u5217\u79bb\u6563\u8f93\u5165\u548c\u79bb\u6563\u4e2d\u95f4\u4fe1\u606f\uff08\u5982\uff1a\u95e8\uff09\uff0c\u751f\u6210\u4e00\u7cfb\u5217\u79bb\u6563\u8f93\u51fa</li> </ol> <ol> <li>\u6570\u5b57\u7535\u8def\uff1a\u8f93\u51fa\u5728\u9650\u5b9a\u8303\u56f4\u5185\u53ef\u53d6\u8fde\u7eed\u503c</li> </ol>"},{"location":"CLDF/CLDF1/#types-of-digital-systems","title":"Types of Digital Systems","text":"<ol> <li> <p>No state present(\u4e0d\u5b58\u5728\u72b6\u6001): combinational logic system, output=Function(input) \u7ec4\u5408\u903b\u8f91\u7535\u8def</p> </li> <li> <p>State present: \u65f6\u5e8f\u7535\u8def</p> <ul> <li>state updated at discrete times -&gt; synchronous sequential system \u901a\u5e38\u968f\u7cfb\u7edf\u65f6\u949f</li> <li>state updated at any time -&gt; asynchronous\uff08\u5f02\u6b65\uff09 sequential systeam</li> </ul> </li> <li> <p>state = Function(state,input)</p> </li> <li> <p>output = Function(state) or Function(state,input)</p> <ul> <li> <p><code>e.g</code>\uff1adigital computer: synchronous,\u7ec4\u9891</p> </li> <li> <p><code>beyond</code>\uff1aembedded systems\uff08\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\uff1a\u8ba1\u7b97\u673a\u4f5c\u4e3a\u4e00\u79cd\u5185\u90e8\u5668\u4ef6\u5305\u542b\u5728\u5176\u4ed6\u4ea7\u54c1\u4e4b\u4e2d</p> <ul> <li>analog signal\uff0cneed A-to-D(digital) and D-to-A</li> <li>analog signal- continuous voltage- sample\uff08\u91c7\u6837\uff09- digital voltage - DAC - discrete voltage - signal conditioning - continuous voltage</li> </ul> <p></p> </li> </ul> </li> </ol>"},{"location":"CLDF/CLDF1/#information-representation","title":"Information representation","text":"<p>\u5728\u6570\u5b57\u7cfb\u7edf\u4e2d\uff0c\u503c\u79bb\u6563\u53d8\u5316</p> <ol> <li> <ul> <li>analog: continuous in value and time</li> </ul> </li> </ol> <ul> <li>digital: asynchronous \u5f02\u6b65: discrete in value,continuous in time; synchronous \u540c\u6b65: discrete in value and time</li> </ul> <ol> <li> <p>\u9ad8\u4f4e\u7535\u5e73</p> <p></p> <ul> <li>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8f93\u5165\u548c\u8f93\u51fa\u4e2d\uff0c\u9ad8\u4f4e\u7535\u4f4d\u63a5\u53d7\u8303\u56f4\u4e0d\u540c\uff0c\u53ef\u4ee5\u53d1\u73b0\u8f93\u5165\u5224\u5b9a\u8303\u56f4\u66f4\u5927\uff0c\u5373\u5bbd\u8fdb\u4e25\u51fa\uff0c\u5176\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u7535\u8def\u5728\u566a\u97f3\u5f71\u54cd\u4e0b\u6b63\u5e38\u8868\u73b0\u7684\u80fd\u529b</li> <li>\u540c\u65f6\uff0c\u56fe\u4e2d HIGH \u63a5\u53d7\u8303\u56f4\u548c LOW \u63a5\u53d7\u8303\u56f4\u4e4b\u95f4\u5b58\u5728\u4e00\u6bb5\u533a\u57df\u79f0\u4e3a\u672a\u5b9a\u4e49\u7684\uff0c\u6216\u6d6e\u52a8\u7684\uff0c\u82e5\u8f93\u51fa\u7535\u5e73\u5728\u8be5\u533a\u95f4\uff0c\u90a3\u4e48\u5176\u8ba4\u5b9a\u503c\u5c06\u662f\u968f\u673a\u7684</li> </ul> <p></p> <ul> <li>\u566a\u97f3\u5bb9\u9650\u662f\u6307\u52a0\u5230\u6b63\u5e38\u8f93\u5165\u503c\u4e0a\u3001\u4e14\u4e0d\u4f1a\u5728\u7535\u8def\u7684\u8f93\u51fa\u4ea7\u751f\u4e0d\u53ef\u9884\u6599\u53d8\u5316\u7684\u6700\u5927\u5916\u90e8\u566a\u97f3\u7535\u538b\u3002<ul> <li>\u5173\u95e8\u7535\u5e73 \\(V _{OFF}\\) \u6307\u4f7f\u8f93\u51fa\u7535\u538b\u521a\u597d\u8fbe\u5230\u8f93\u51fa\u8f6c\u6298\u81f3\u989d\u5b9a\u7535\u5e73\u503c\u65f6\u7684\u6700\u9ad8\u8f93\u5165\u4f4e\u7535\u5e73\u7535\u538b</li> <li>\u5f00\u95e8\u7535\u5e73 \\(V _{ON}\\) \u6307\u4f7f\u8f93\u51fa\u7535\u538b\u521a\u597d\u8fbe\u5230\u8f93\u51fa\u8f6c\u6298\u8dc3\u8fc1\u81f3\u53e6\u4e00\u72b6\u6001\u989d\u5b9a\u7535\u5e73\u503c\u65f6\u7684\u6700\u4f4e\u8f93\u5165\u9ad8\u7535\u5e73\u7535\u538b</li> <li>\u4f4e\u7535\u5e73\u566a\u58f0\u5bb9\u9650\uff1a\\(V _{nL}=V _{OFF} - V _{oL}\\)</li> <li>\u9ad8\u7535\u5e73\u566a\u58f0\u5bb9\u9650\uff1a\\(V _{nH}=V _{oH} - V _{ON}\\)</li> </ul> </li> </ul> </li> <li> <p>\u4e8c\u8fdb\u5236\u6297\u5e72\u6270\u80fd\u529b\u5f3a</p> </li> <li> <p>dynamic RAM: capacitor charge (\u7535\u5bb9)</p> </li> <li> <p>K(\\(2^{10}\\))-M-G-T \u6bcf\u4e2a\u76f8\u5dee \\(2^{10}\\)</p> </li> <li> <p>numeric\uff1a\u5fc5\u987b\u8868\u8fbe\u4e00\u5b9a\u8303\u56f4\u5185\u6570\u5b57\uff0c\u652f\u6301\u7b80\u5355\u4e14\u666e\u904d\u8ba1\u7b97\uff0c\u548c\u4e8c\u8fdb\u5236\u6570\u503c\u672c\u8eab\u6709\u8f83\u5927\u5173\u8054</p> <ul> <li>non-numeric binary codes: e.g.\uff1acolor\uff0c \u76f8\u5bf9\u7075\u6d3b\uff0c\u4e0d\u9700\u8981\u9002\u914d\u666e\u904d\u7684\u8fd0\u7b97\u6cd5\u5219\uff0c\u548c\u4e8c\u8fdb\u5236\u6570\u503c\u672c\u8eab\u672a\u5fc5\u6709\u5173\u7cfb </li> <li>\u7075\u6d3b\u6027\u6307\u4fdd\u8bc1\u7f16\u7801\u6620\u5c04\u5173\u7cfb\u552f\u4e00\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u79f0\u4e3a\u5408\u6cd5\u7f16\u7801</li> </ul> </li> <li> <p><code>'one hot' code \u72ec\u70ed\u7801</code> : you can represent 4 elements in radix r=2 with n=4 digits:<code>0001,0010,0100,1000</code>,each digit represents specific element\u3002 \u53ea\u6709\u4e00\u4f4d\u975e\u96f6</p> <ul> <li><code>one cold code \u72ec\u51b7\u7801</code> \u4e0e one hot \u5bf9\u5e94</li> <li>\u597d\u5904\uff1a\u51b3\u5b9a\u6216\u6539\u53d8\u72b6\u6001\u673a\u76ee\u524d\u72b6\u6001\u6210\u672c\u76f8\u5bf9\u8f83\u4f4e\uff0c\u6613\u8bbe\u8ba1\u4e0e\u68c0\u6d4b\u975e\u6cd5\u884c\u4e3a</li> <li>\u7f3a\u70b9\uff1a\u4fe1\u606f\u8868\u793a\u7387\u8f83\u4f4e\uff0c\u975e\u6cd5\u72b6\u6001\u591a\u6709\u6548\u72b6\u6001\u5c11</li> </ul> </li> <li> <p>\u4ee5\u4e0b\u4e24\u79cd\u8868\u793a 0-9 \u65f6\u5bf9\u79f0\u6570\u5b57\u4e92\u4e3a\u53cd\u7801</p> <ul> <li>Excess3 Code:\u4f59 3 \u7801\uff0c\u5373\u7f16\u7801\u4e3a\u6570\u5b57\u52a0 3\uff0c0011 \u8868\u793a 0\uff0c0100 \u8868\u793a 1 \\(\\cdots\\)<ul> <li>3 \u6765\u81ea\\(\\frac{16-10}{2}\\)\uff0c\u4e5f\u5c31\u662f 8421 \u7801\u5bb9\u91cf\u51cf\u53bb\u9700\u8981\u8868\u793a\u7684\u6570\u91cf\uff08\u5373 0-9\uff09\u518d\u9664 2\uff0c\u56e0\u6b64\u8fd9\u6837\u5341\u8fdb\u5236\u4e0b\u80fd\u8fdb\u4f4d\u4e24\u4e2a\u6570\u5728\u4f59\u4e09\u7801\u4e0b\u76f8\u52a0\u4e5f\u80fd\u8fdb\u4f4d</li> <li>\u4f46\u5b9e\u9645\u4e0a\uff0c\u7f16\u7801\u505a\u8fd0\u7b97\u591a\u6570\u60c5\u51b5\u4e0b\u6ca1\u6709\u610f\u4e49</li> </ul> </li> <li>8\uff0c4\uff0c-2\uff0c-1 Code\uff1a\u540e\u4e24\u4f4d\u5206\u522b\u4ee3\u8868-2\uff0c-1</li> </ul> </li> <li> <p>Binary Coded Decimal\uff08BCD\uff09\uff1ause 8\uff0c4\uff0c2\uff0c1 code\uff0cbut only represent 0-9</p> <ul> <li>example: 13 -&gt; 0001 | 0011</li> <li>application: good for direct interaction to people,like elevator,air conditioner</li> <li>to correct the digit,subtract 10 by adding 6 modulo 16</li> <li><code>eg</code>:13-&gt; 1101 +6 -&gt; 10011 -&gt; 0001 | 0011</li> </ul> </li> <li> <p>\u7528\u4e8c\u8fdb\u5236\u4e3a\u975e\u6570\u5b57\u5143\u7d20\u7f16\u7801\uff08\u5982\u5b57\u7b26\u4e32\uff09,\u6b64\u65f6\u53ef\u80fd\u6709\u7f16\u7801\u672a\u88ab\u7528\u5230\uff0c\u5982\u4e0b\u56fe\u7684 100</p> <p></p> </li> <li> <p>ASCII: 0 30,A 41,a 61 (in 16 \u8fdb\u5236)</p> </li> <li> <p><code>PARITY BIT Error-Detection Codes</code>(\u5947\u5076\u68c0\u9519\u7801)\uff1a\u6dfb\u52a0\u4e00\u4f4d\uff08n+1\uff09\uff1aodd/even parity\uff1a\u4f7f n+1 \u4f4d\u52a0\u8d77\u6765\u4e00\u5171\u6709\u5947/\u5076\u4e2a 1\uff0c\u52a0\u5728\u6700\u5de6\u4fa7</p> </li> <li> <p>ASCII \u7801\u7684\u4f20\u8f93\u5dee\u9519\u68c0\u6d4b\u4e0e\u6821\u6b63\uff1a\u63a5\u6536\u65b9\u6d4b\u5230\u4e00\u4e2a\u6821\u9a8c\u9519\u8bef\u5c31\u7acb\u523b\u56de\u9001 NAK\uff08\u5426\u8ba4\uff09\u63a7\u5236\u5b57\u7b26\uff1b\u82e5\u6ca1\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u5c31\u56de\u9001 ACK\uff08\u627f\u8ba4\uff09\u63a7\u5236\u5b57\u7b26\u3002\u53d1\u9001\u7aef\u6536\u5230 NAK \u5c31\u7acb\u523b\u91cd\u590d\u53d1\u9001</p> </li> <li> <p>Gray Code\uff1a\u76f8\u90bb\u72b6\u6001\u53ea\u6709\u4e00\u4f4d\u7801\u4e0d\u4e00\u6837\uff0c\u6e10\u53d8\u8fc7\u7a0b\u65f6\u4e0d\u4f1a\u51fa\u73b0\u7a81\u7136\u53d8\u5316</p> <ul> <li>Application: Optical Shaft Encoder\uff0cdark represents 0\uff0cwhite represents 1</li> <li>\u5982\u679c\u4f20\u611f\u5668\u4f4d\u7f6e\u51fa\u73b0\u504f\u79fb\uff0c\u4e0d\u5728\u540c\u4e00\u76f4\u7ebf\uff0c\u7528 Gray Code \u4e0d\u4f1a\u51fa\u73b0\u9519\u8bef</li> </ul> <p></p> </li> </ol>"},{"location":"CLDF/CLDF2/","title":"Chapter 2 Combinational Logic Circuits","text":"<ol> <li>\u4e0a\u4fa7 \u4e3a PMOS \u7ba1\uff0c\u5e38\u95ed\u5f00\u5173\uff1b\u4e0b\u4fa7\u4e3a NMOS \u7ba1\uff0c\u5e38\u5f00\u5f00\u5173</li> </ol> <p>CMOS\uff1a\u6297\u566a\u58f0\u6027\u8d28\u597d\uff0c\u4f4e\u9759\u6001\u80fd\u8017\uff0c\u4f46\u751f\u4ea7\u8fc7\u7a0b\u590d\u6742</p> <p>\u7ec4\u6210\uff1a</p> <p>\u7279\u70b9\uff1ags \u95f4\u7535\u538b\u9ad8\u4e8e\u9608\u503c\u5173\u95ed\uff0c\u4f4e\u4e8e\u65f6\u6253\u5f00</p> <ol> <li> <p>\u4e00\u79cd\u53ef\u4ee5\u72ec\u81ea\u5b9e\u73b0\u6240\u6709\u5e03\u5c14\u51fd\u6570\u7684\u95e8\u7c7b\u578b\u53eb\u505a\u901a\u7528\u95e8\uff0c\u4e0e\u975e\u95e8\u548c\u6216\u975e\u95e8\u90fd\u662f\u901a\u7528\u95e8   </p> </li> <li> <p>Gate Delay:</p> <ul> <li>When input changes,the output change doesn't occur instantaneously.</li> <li>the delay between an input changes and the resulting output change is the gate delay denoted by \\(t_G\\) </li> </ul> </li> <li>Logic Diagrams and Expressions: Truth Table,Equation(\u903b\u8f91\u51fd\u6570),Diagram,\u6ce2\u5f62\u56fe</li> <li> <p>Boolean Algebra:</p> <ul> <li>\\(X(Y+Z)=XY+XZ\\)</li> <li> <p>\\(X+YZ=(X+Y)(X+Z)\\)</p> <ul> <li>Prf:</li> </ul> \\[ A=A\\cdot A=A\\cdot (A+C)  \\\\ A+BC=A(A+B+C)+BC=(A+B)(A+C) \\] </li> <li> <p>\\(\\overline{X\u00b7Y}=\\overline{X}+\\overline{Y}\\)</p> </li> <li>Absorption Theorem: \\(A+A\u00b7B=A,A+\\overline{A}B=A+B\\)</li> <li>Consensus Law:</li> <li>\\((A+B)(\\overline{A}+C)(B+C)=(A+B)(\\overline{A}+C)\\)</li> <li>\\(AB+\\overline{A}C+BC=AB+\\overline{A}C\\)       Hint\uff1a \\(BC=BC(A+\\overline{A})\\)</li> <li>\\(\\overline{X}Z+X=(X+\\overline{X})(Z+X)=Z+X\\)   Hint: \\(X+YZ=(X+Y)(X+Z)\\)</li> </ul> </li> <li> <p>\u5bf9\u5076\uff08duality\uff09\u5f0f\uff1a\u628a\u4e00\u4e2a\u5e03\u5c14\u7b49\u5f0f\u4e2d\u7684\u6240\u6709\u4e0e\u53d8\u6216\uff0c\u6216\u53d8\u4e0e\uff1b\u82e5\u6709 0\uff0c1 \u51fa\u73b0\uff0c\u5219\u628a 1 \u53d8 0\uff0c0 \u53d8 1\uff1b\u7b49\u5f0f\u4e24\u7aef\u540c\u65f6\u8fdb\u884c\u5bf9\u5076\u64cd\u4f5c\uff0c\u7b49\u5f0f\u4ecd\u7136\u6210\u7acb\u3002</p> <ul> <li>\u5e94\u7528\uff1a\u6c42\u53cd\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u5148\u6c42\u5bf9\u5076\u5f0f\uff0c\u518d\u5c06\u6bcf\u4e00\u4e2a\u5b57\u7b26\u6c42\u53cd</li> <li>\u9664\u975e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u662f\u81ea\u5bf9\u5076\uff0c\u5426\u5219\u6c42\u5bf9\u5076\u540e\u90fd\u4f1a\u53d8\u5316</li> </ul> </li> <li> <p>Precedence:</p> <ul> <li>Parentheses</li> <li>NOT</li> <li>AND</li> <li>OR</li> </ul> </li> <li> <p>Examples:</p> </li> </ol> \\[ F=\\overline{\\overline{AC+\\overline{A}BC}+\\overline{B}C+AB\\overline{C}} \\] \\[=(AC+\\overline{A}BC)\\overline{\\overline{B}C}\\cdot \\overline{AB\\overline{C}}\\] \\[=C(A+\\overline{A}B)(B+\\overline{C})(\\overline{A}+\\overline{B}+C) \\] \\[ =C(A+\\overline{A}B) (\\overline{A}B+BC+\\overline{A}\\cdot\\overline{C}+\\overline{B}\\cdot\\overline{C}) \\] \\[ =C(A+\\overline{A}B)(\\overline{A}B+BC) \\] \\[=ABC+\\overline{A}BC=BC \\] <ol> <li></li> </ol>"},{"location":"CLDF/CLDF2/#canonical-forms","title":"Canonical Forms","text":"<ol> <li> <p>minterm &amp; maxterms: maxterm is complemented(\u53d6\u53cd) with minterm;   </p> </li> <li> <p>\\(\\overline{m}_i=M_i,\\overline{M}_i=m_i\\)</p> </li> <li>\\(F=\\sum{m_i}=\\overline{\\prod{M_i}},i=0,1,2,3,\\dots,2^n-1\\)</li> <li>usage:turn logic function into numbers by minterm</li> </ol>"},{"location":"CLDF/CLDF2/#standard-forms","title":"Standard Forms","text":"<ol> <li>SOP: an OR of AND terms,POS: an AND of OR terms</li> </ol>"},{"location":"CLDF/CLDF2/#gate-input-cost","title":"Gate Input Cost","text":"<p>\u6587\u5b57\u6210\u672c\uff1a\u7b49\u5f0f\u5b57\u7b26\u4e2a\u6570</p> <ol> <li>the number of inputs to the gates in the implementation corresponding exactly to the given equation or equations.</li> <li>G - inverters not counted</li> <li>GN - inverters counted</li> <li> <p>For SOP and POS equations, it can be found from the equation(s) by finding the sum of:</p> <ul> <li>all literal appearances\uff08Literal cost,L:\u516c\u5f0f\u4e2d\u4e00\u5171\u51fa\u73b0\u7684\u53d8\u91cf\u4e2a\u6570\uff0c\u53ef\u91cd\u590d\uff09</li> <li>the number of terms excluding single literal terms,(G) and \u9664\u5355\u4e2a\u6587\u5b57\u4e4b\u5916\u7684\u5168\u90e8\u9879\u6570</li> <li>optionally, the number of distinct complemented single literals (GN) \u8ba1\u7b97\u975e\u95e8.</li> </ul> </li> </ol>"},{"location":"CLDF/CLDF2/#karnaugh-maps","title":"Karnaugh Maps","text":"<p>\u76f8\u90bb\u7684\u53ea\u6709\u4e00\u4f4d\u4e0d\u540c\uff0cGray \u7801\u987a\u5e8f</p> <p>\u4e09\u53d8\u91cf\u56fe\u53ef\u4ee5\u7406\u89e3\u4e3a\u5708\uff0c\u5373\u6700\u5de6\u4fa7\u548c\u6700\u53f3\u4fa7\u76f8\u90bb</p> <ol> <li> <p>\u6d88\u9664\uff1aKarnaugh \u56fe\u4e2d\u6709\u4e24\u4e2a\u76f8\u90bb\u5c0f\u683c\u5b50\u5219\u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u53d8\u91cf</p> </li> <li> <p>\u56db\u53d8\u91cf\uff1a</p> </li> </ol> <ol> <li> <p>\u8574\u542b\u9879 Implicant: map \u4e2d\u7684\u6bcf\u2f00\u4e2a\u683c\u2f26, \u2f00\u5171\\(2^n\\)\u4e2a.    \u8d28\u8574\u542b\u9879 Prime Implicant: map \u4e2d\u76f8\u90bb\u7684\u8d28\u8574\u542b\u9879\u7ec4\u6210\u7684\u957f\u5bbd\u5747\u4e3a 2 \u7684\u5e42\u6b21\u7684\u6700\u2f24\u77e9\u9635(\u2f50\u5982 1\\(\\times\\)2, 2\\(\\times\\)2, 1\\(\\times\\)4).    \u8d28\u4e3b\u8574\u542b\u9879 Essential Prime Implicant: \u5305\u542b\u4ec5\u5305\u542b\u5728\u4ed6\u4e4b\u4e2d\u7684\u8574\u542b\u9879\u7684\u8d28\u8574\u542b\u9879.(\u5c31\u662f\u5c11\u4e86\u8fd9\u4e2a\u8d28\u8574\u542b\u9879, \u5176\u4ed6\u7684    \u8d28\u8574\u542b\u9879\u5168\u2f64\u4e0a\u4e5f\u5c11\u4e86\u683c\u2f26).</p> </li> <li> <p>\u65e0\u5173\u9879\\(\\times\\)\uff1a\u4ec5\u4f5c\u4e3a\u5708\u9009\u77e9\u9635\u65f6\u7684\u6865\u6881\uff0c\u4e0d\u9700\u8981\u8003\u8651\u662f\u5426\u6709\u9057\u6f0f</p> </li> </ol>"},{"location":"CLDF/CLDF2/#buffer","title":"Buffer","text":"<p>\u4ec5\u4f5c\u4e3a\u653e\u5927\u5668\uff0c\u653e\u5927\u8f93\u5165\u4fe1\u53f7\u540e\u8f93\u51fa\uff0c\u540c\u65f6\u53ef\u4ee5\u63d0\u9ad8\u7535\u8def\u8fd0\u884c\u901f\u5ea6\uff0c\u4f46\u6709 cost</p> <ol> <li>A buffer is a gate with the function F=X</li> <li>the same as a connection</li> <li>used to improve circuit voltage levels and increase the speed of circuit operation</li> <li>\u4f8b\u9898\uff1a\u4ee5\u4e0b\u54ea\u79cd\u60c5\u51b5\u9700\u8981 buffer</li> </ol> <p>ans\uff1a1 \u4e0d\u9700\u8981\uff0c\u5426\u5219 cost \u8d85\uff1b2 \u9700\u8981\uff1b3 \u4e0d\u76f8\u5173\uff0c\u4e0d\u80fd\u540c\u65f6\u6ee1\u8db3 delay \u548c cost \u7684\u7ea6\u675f</p> <ol> <li>Constraints on cost and performance have a major role in making tradeoffs</li> </ol>"},{"location":"CLDF/CLDF2/#nand-gates","title":"NAND Gates","text":"<p>\u81ea\u7136\u642d\u5efa\u901f\u5ea6\u6700\u5feb\u7684\u95e8</p> <ol> <li>This NAND symbol is called Invert-OR, since inputs are inverted and then ORed together.</li> <li>AND-Invert and Invert-OR both represent the NAND gate. Having both makes visualization of circuit function easier.</li> <li>NOR \u6ca1\u6709\u4e00\u4e2a\u5b9a\u4e49\u7684\u6570\u5b66\u7b26\u53f7\uff0c\u56e0\u4e3a NOR \u64cd\u4f5c\u662f\u975e\u5173\u8054\u7684\uff0c\u96be\u4ee5\u6570\u5b66\u63cf\u8ff0</li> </ol>"},{"location":"CLDF/CLDF2/#exclusive-or-exclusive-nor","title":"Exclusive OR/ Exclusive NOR","text":"<ol> <li>The XOR function is: \\(X\u2295Y=X\\overline{Y}+\\overline{X}Y\\)</li> <li>The eXclusive NOR (XNOR) function, otherwise \u000bknown as equivalence is: $\\overline{X\u2295Y}=XY+\\overline{XY} $</li> <li>\\(X\u2295\\overline{Y}= \\overline{X\u2295Y}\\)</li> <li>\\(X\u2295Y\u2295Z=X\u2295(Y\u2295Z)\\)</li> </ol>"},{"location":"CLDF/CLDF2/#odd-and-even-functions","title":"Odd and Even Functions","text":"<ol> <li>The 1s of an odd function correspond to minterms having an index with an odd number of 1s.</li> <li>The 1s of an even function correspond to minterms having an index with an even number of 1s.</li> <li>\u5947\u51fd\u6570\u53d6\u975e\u5373\u4e3a\u5076\u51fd\u6570</li> </ol>"},{"location":"CLDF/CLDF2/#_1","title":"\u5f02\u6216\u4e0e\u5947\u51fd\u6570","text":"<ol> <li>\u591a\u53d8\u91cf\u5f02\u6216\u79f0\u4e3a\u5947\u51fd\u6570\uff0c\u5982\\(X\u2295Y\u2295Z\\)\uff0c\u8981\u6c42\u5947\u6570\u4e2a\u53d8\u91cf\u4e3a 1 \u65f6\u8f93\u51fa\u4e3a 1</li> <li>\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5947\u5076\u53d1\u751f\u5668\u548c\u68c0\u9a8c\u5668</li> <li>\u4e09\u53d8\u91cf\u5076\u6821\u9a8c\u7801\u751f\u6210\u5668\uff08\u4e0a\uff09\u4e0e\u68c0\u9a8c\u5668\uff08\u4e0b\uff09</li> </ol> <ol> <li>\u5f02\u6216\u642d\u5efa\uff1a</li> </ol>"},{"location":"CLDF/CLDF2/#_2","title":"\u540c\u6216\u4e0e\u5076\u51fd\u6570","text":"<p>\u591a\u53d8\u91cf\u540c\u6216\u88ab\u79f0\u4e3a\u5076\u51fd\u6570</p> <p>\u89c2\u5bdf\u591a\u53d8\u91cf\u540c\u6216\u4e0e\u5f02\u6216\u7684\u5361\u8bfa\u56fe\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u4eec\u662f\u5929\u7136\u4f18\u5316\u7684\uff0c\u5373\u4e0d\u53ef\u4f18\u5316\u7684</p>"},{"location":"CLDF/CLDF2/#the-3-state-buffer","title":"The 3-State Buffer","text":"<p>EN \u4e3a 0 \u65f6\uff0c\u4e0d\u7ba1\u8f93\u5165\u4ec0\u4e48\uff0c\u8f93\u51fa\u90fd\u662f\u9ad8\u963b\u6001\uff08\u5f00\u8def\uff0c\u6ca1\u6709\u8fde\u63a5\uff09</p> <ol> <li>For the symbol and truth table, IN is the data input, and EN, the control input.    For EN = 0, regardless of the value on IN (denoted by X), the output value is Hi-Z.    For EN = 1, the output value follows the input value.</li> </ol> <ol> <li>\u4e24\u4e2a\u4e09\u6001\u95e8\u8f93\u51fa\u76f8\u8fde\u65f6\uff1a\u5f53\u4e24\u8fb9 EN \u4e0d\u540c\u65f6, \u8f93\u51fa\u4e3a EN \u4e3a 1 \u7684\u8f93\u51fa\u503c; \u5f53\u4e24\u8fb9 EN \u90fd\u662f 0 \u65f6\u8f93\u51fa\u2fbc\u963b, \u5f53\u4e24\u8fb9 EN \u90fd\u662f 1 \u65f6, \u4e0d\u88ab\u5141\u8bb8.</li> </ol> <ol> <li>\u81f3\u5c11\u6709\u4e00\u4e2a buffer \u8f93\u51fa\u4e3a\u9ad8\u963b\u6001\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4 high currents\uff0c\u7834\u574f\u7535\u8def\u3002\u56e0\u6b64\u53ea\u6709\u4ee5\u4e0b\u4e94\u79cd\u8f93\u5165\u5141\u8bb8\u3002</li> </ol> <p>\u5bf9 n \u4e2a\u4e09\u6001\u95e8\uff0c\u81f3\u5c11 n-1 \u4e2a\u8f93\u51fa\u5e94\u4e3a\u9ad8\u963b\u6001\uff0c\u6b64\u65f6\u6709\u6548\u8f93\u5165\u4e00\u5171\u6709\\(2n+1\\)\u79cd</p>"},{"location":"CLDF/CLDF2/#3-state-logic-circuit","title":"3-State Logic Circuit","text":"<ol> <li> <p>Data Selection Function: If s = 0, OL = IN0, else OL = IN1</p> </li> <li> <p>Performing data selection with 3-state buffers:</p> </li> <li> <p>Since EN0 = S and EN1 = S, one of the two buffer outputs is always Hi-Z plus the last row of the table never occurs.</p> </li> </ol>"},{"location":"CLDF/CLDF2/#transmission-gates","title":"Transmission Gates","text":"<p>\u7528\u6765\u8fde\u63a5\u548c\u65ad\u5f00\u7535\u8def\u4e2d\u4e24\u70b9\u7684\u95e8</p>"},{"location":"CLDF/CLDF2/#_3","title":"\u95e8\u4f20\u8f93\u5ef6\u8fdf","text":"<ol> <li>\\(t_{pd},t_{PHL},t_{PLH}\\)</li> <li>\u60ef\u6027\u5ef6\u8fdf\uff1a\u5f53\u8f93\u5165\u4f7f\u5f97\u8f93\u51fa\u5728\u4f4e\u4e8e\u62d2\u7edd\u65f6\u95f4\u7684\u95f4\u9694\u5185\u53d1\u751f\u4e24\u6b21\u53d8\u5316\uff0c\u90a3\u4e48\u8f93\u51fa\u5c06\u4e0d\u53d1\u751f\u53d8\u5316</li> <li>\u95e8\u6709\u6c42\u53cd\u64cd\u4f5c\u65f6\uff0cHL \u8f93\u5165\u7535\u538b\u53d8\u5316\u5bfc\u81f4\u8f93\u51fa\u4ea7\u751f LH \u53d8\u5316\uff0c\u4e0d\u6c42\u53cd\u65f6\u8f93\u51fa\u4e5f\u4e3a HL \u53d8\u5316</li> </ol>"},{"location":"CLDF/CLDF3/","title":"Chapter 3 Combinational Logic Design","text":""},{"location":"CLDF/CLDF3/#part-1-implementation-technology-and-logic-design","title":"Part 1 Implementation Technology and Logic Design","text":""},{"location":"CLDF/CLDF3/#_1","title":"\u5206\u5c42\u8bbe\u8ba1","text":"<ol> <li>\u539f\u5b50\u6a21\u5757(Primitive Block)\uff1a\u4e0e\u95e8\u3001\u6216\u975e\u3001\u975e\u95e8\u7b49\u7b49</li> <li> <p>\u5206\u5c42\u8bbe\u8ba1\uff1a\u6a21\u5757\u53ef\u91cd\u7528\u6027\u975e\u5e38\u91cd\u8981\u3002\u5148\u51b3\u6761\u4ef6\uff1a\u7535\u8def\u662f\u89c4\u6574(regularity)\u7684</p> <ol> <li>\u5206\u5c42\u8bbe\u8ba1\u5373\u5c06\u590d\u6742\u95ee\u9898\u6a21\u5757\u5316\u4e3a\u82e5\u5e72\u5c42\u6b21\uff0c\u4e4b\u540e\u9010\u4e2a\u89e3\u51b3</li> <li>\u5206\u4e3a\u81ea\u9876\u5411\u4e0b\u548c\u81ea\u5e95\u5411\u4e0a</li> <li>\u524d\u8005\u4ece\u9700\u6c42\u5f00\u59cb\uff0c\u540e\u8005\u4ece\u73b0\u6709\u6a21\u5757\u5f00\u59cb</li> </ol> </li> <li> <p>\u51fa\u73b0\u5728\u8bbe\u8ba1\u4e2d\u7684\u6a21\u5757\u88ab\u79f0\u4e3a\u8fd9\u4e2a\u6a21\u5757\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff08instance\uff09\uff0c\u5c06\u5b83\u5e94\u7528\u79f0\u4e3a\u5b9e\u4f8b\u5316\uff08instantiation\uff09</p> </li> </ol>"},{"location":"CLDF/CLDF3/#_2","title":"\u96c6\u6210\u7535\u8def","text":"<p>\u53c8\u53eb\u505a\u82af\u7247\uff0c\u5206\u4e3a\u4ee5\u4e0b\u7b49\u7ea7</p> <ul> <li>SSI (small-scale integrated) \u4e0d\u523010\u4e2agate</li> <li>MSI(medium-\\(\\cdots\\)) 10-100\u4e2agates</li> <li>LSI(large\\(\\cdots\\))\u6210\u767e\u4e0a\u5343\u4e2agates</li> <li>VLSI(very large) \u6210\u5343\u4e0a\u4ebf\u4e2agates</li> </ul>"},{"location":"CLDF/CLDF3/#_3","title":"\u6280\u672f\u53c2\u6570","text":"Name Description Fan-in \u4e00\u4e2a\u95e8\u53ef\u7528\u7684\u8f93\u5165 Fan-out \u4e00\u4e2a\u6805\u6781\u8f93\u51fa\u9a71\u52a8\u7684\u6807\u51c6\u8d1f\u8f7d\u6570\u91cf Logic Levels \u88ab\u8ba4\u4e3a\u662f\u9ad8\u4f4e\u7535\u5e73\u7684\u8f93\u5165\u8f93\u51fa\u7535\u538b\u8303\u56f4 Noise Margin \u5bf9\u5916\u754c\u566a\u58f0\u7684\u5bb9\u5fcd\u80fd\u529b(\u5177\u4f53\u6765\u8bf4\u662f\u4e0d\u4f1a\u5bfc\u81f4\u884c\u4e3a\u5f02\u53d8\u7684\u6700\u5927\u566a\u58f0\u538b\u503c) Cost for a gate \u7ee7\u627f\u7535\u8def\u7684\u95e8\u6210\u672c Propagation Delay \u4fe1\u53f7\u6539\u53d8\u540e\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u6240\u9700\u7684\u53d8\u5316\u65f6\u95f4 Power Dissipation \u7535\u6e90\u8f93\u51fa\u80fd\u8017\u548c\u95e8\u7684\u80fd\u8017 <ul> <li>\u6247\u5165\u6247\u51fa\uff1a\u6247\u5165\u63cf\u8ff0\u4e86\u4e00\u4e2a\u95e8\u80fd\u591f\u63a5\u53d7\u7684\u6700\u591a\u8f93\u5165\u91cf\uff0c\u5982\u4e00\u4e2a\u56db\u8f93\u5165\u4e0e\u975e\u95e8\u7684\u6247\u5165\u5c31\u662f 4\uff1b\u800c\u6247\u51fa\u63cf\u8ff0\u7684\u5219\u662f\u4e00\u4e2a\u95e8\u7684\u8f93\u51fa(\u6805\u6781\u8f93\u51fa)\u5728\u4e0d\u964d\u4f4e\u5de5\u4f5c\u6027\u80fd\u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u8d1f\u8f7d\u591a\u5c11\u95e8\uff0c\u4f8b\u5982\u4e00\u4e2a\u975e\u95e8\u7684\u8f93\u51fa\u80fd\u591f\u540c\u65f6\u8d1f\u8f7d 4 \u4e2a\u975e\u95e8\u5e76\u4e14\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u5219\u5176\u6247\u51fa\u4e3a 4\uff0c\u5176\u4e5f\u80fd\u901a\u8fc7\u6807\u51c6\u8d1f\u8f7d\u6765\u5b9a\u4e49\u3002</li> <li> <p>\u6240\u8c13\u7684\u6807\u51c6\u8d1f\u8f7d\uff0c\u662f\u8861\u91cf\u201c\u8d1f\u8f7d\u201d\u7684\u4e00\u4e2a\u201c\u5355\u4f4d\u781d\u7801\u201d\u3002\u5176\u5927\u5c0f\u7b49\u4e8e\u4e00\u4e2a\u975e\u95e8(\u9006\u53d8\u5668)\u8d21\u732e\u7684\u8d1f\u8f7d\u538b\u529b\u3002</p> </li> <li> <p>\u8f6c\u6362\u65f6\u95f4\uff1a\u8f6c\u6362\u65f6\u95f4\u5206\u4e3a\\(t_{LH}\\)\uff08rise time\uff09\u548c\\(t_{HL}\\)\uff08fall time\uff09\u4e24\u4e2a\u90e8\u5206</p> </li> <li>rise time \u7b49\u4e8e\u6805\u6781\u8f93\u51fa\u4ece \\(V_{CC}\\) \u7684 10% \u5347\u9ad8\u5230 90% \u6240\u9700\u8981\u7684\u65f6\u95f4\uff1b</li> <li>fall time \u7b49\u4e8e\u6805\u6781\u8f93\u51fa\u4ece \\(V_{CC}\\)\u7684 90% \u964d\u4f4e\u5230 10% \u6240\u9700\u8981\u7684\u65f6\u95f4\uff1b</li> </ul> <ul> <li>\u968f\u7740\u8d1f\u8f7d\u589e\u52a0\uff0c\u8f6c\u6362\u65f6\u95f4\u4e5f\u4f1a\u589e\u52a0\uff08\u7ed9\u7535\u5bb9\u5145\u7535\u7684\u65f6\u95f4\u589e\u52a0\uff09\uff0c\u800c\u6247\u51fa\u5b9a\u4e49\u4e2d\u63d0\u5230\u7684\u201c\u6700\u5927\u8d1f\u8f7d\u201d\uff0c\u5c31\u662f\u6307\u5b83\u7684\u8f6c\u6362\u65f6\u95f4\u4e0d\u8d85\u8fc7\u5b83\u9884\u5b9a\u7684\u6700\u5927\u8f6c\u6362\u65f6\u95f4\u3002</li> </ul> <ul> <li>\u4ece\u5de6\u5230\u53f3\u8868\u793a\u8d1f\u8f7d\u4e0d\u65ad\u589e\u52a0\u65f6\uff0crise time \u7684\u53d8\u5316\u8d8b\u52bf\u3002</li> <li>\u5b9e\u9645\u4e0a\uff0c\u7c7b\u4f3c\u7684\uff0c\u8d85\u51fa\u6247\u5165\u540e\uff0c\u95e8\u5bf9\u8f93\u5165\u7684\u53cd\u5e94\u5c31\u592a\u6162\u4e86\u3002</li> </ul>"},{"location":"CLDF/CLDF3/#_4","title":"\u5de5\u827a\u6620\u5c04","text":"<p>\u5f62\u5f0f\u4e0a\uff1a \u79ef\u4e4b\u548c\u5f62\u5f0f\u4f7f\u7528\u4e0e\u975e\u95e8\uff0c\u548c\u4e4b\u79ef\u5f62\u5f0f\u4f7f\u7528\u6216\u975e\u95e8</p>"},{"location":"CLDF/CLDF3/#nand-mapping-algorithm","title":"NAND Mapping Algorithm \u4e0e\u975e\u95e8\u6210\u672c\u66f4\u4f4e\uff0c\u5ef6\u8fdf\u66f4\u4f4e","text":"<ol> <li> <p>Replace ANDs and ORs:</p> </li> <li> <p>\u6d88\u9664\u6240\u6709\u53cd\u76f8\u5668\u5bf9</p> </li> <li> <p>Repeat the following pair of actions until there is at most one inverter between : </p> <ol> <li> <p>A circuit input or driving NAND gate output, and-</p> </li> <li> <p>The attached NAND gate inputs.</p> </li> </ol> <p> </p> </li> </ol>"},{"location":"CLDF/CLDF3/#nor-mapping-algorithm","title":"NOR Mapping Algorithm","text":"<p>\u200b   Similar to the NAND,first Replace ANDs and ORs</p>"},{"location":"CLDF/CLDF3/#en","title":"EN \u4f7f\u80fd","text":"<p>EN\u4e3a0\u8f93\u51fa\u59cb\u7ec8\u4e3a0\uff0cEN\u4e3a1\u65f6\u4e3a\u5bf9\u5e94\u8868\u8fbe\u5f0f\u503c</p>"},{"location":"CLDF/CLDF3/#part-2-combinational-logic","title":"Part 2 Combinational Logic","text":""},{"location":"CLDF/CLDF3/#decoding","title":"Decoding \u8bd1\u7801","text":"<ol> <li>Decoding - the conversion of an n-bit input code to an m-bit output code with\\(n\\leqslant m\\leqslant2^n\\) such that each valid code word produces a unique output code</li> <li>Circuits that perform decoding are called decoders</li> <li>Here, functional blocks for decoding are called n-to-m line decoders, where \\(m\\leqslant2^n\\), and    generate \\(2^n\\) (or fewer) minterms for the n input variables</li> </ol>"},{"location":"CLDF/CLDF3/#3-8","title":"3-8 \u8bd1\u7801\u5668","text":"<p>\u8bbe\u8ba1n\u8f93\u5165\u8bd1\u7801\u5668\uff0c\u4e0d\u65ad\u4e8c\u5206\uff0c\u9664\u4e0d\u5c3d\u5c31\u5269\u4e0b\u4e00\u4e2a\u5355\u72ec\u7684\uff0c\u5982\u4e0a\u56fe3\u96642\u4f591\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u75281\u4e2a4-2\u8bd1\u7801\u5668\u548c\u4e00\u4e2a1-2-Line Decoder</p> <p>\u901a\u8fc7\u8bd1\u7801\u5668\u548cOR\u53ef\u4ee5\u7ec4\u6210\u4efb\u4f55\u7ec4\u5408\u903b\u8f91\u7535\u8def</p>"},{"location":"CLDF/CLDF3/#decoder-with-enable","title":"Decoder with Enable","text":"<p>\u7531\u4e8e2-4\u8bd1\u7801\u5668\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u4e3a1\uff0c\u53ea\u6709\u8be5\u95e8\u53ef\u4ee5\u8f93\u51fa\u5185\u5bb9\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\\(A_1,A_0\\)\u7ec4\u6210\u7684\u8bd1\u7801\u5668\u5f53\u6210EN\uff0cEN\u5f53\u6210\u8f93\u5165\u4fe1\u53f7</p> <p>\u5e26\u4f7f\u80fd\u8f93\u5165\u7684\u8bd1\u7801\u5668\u53c8\u88ab\u79f0\u4e3a\u591a\u8def\u5206\u914d\u5668</p>"},{"location":"CLDF/CLDF3/#_5","title":"\u57fa\u4e8e\u8bd1\u7801\u5668\u7684\u7ec4\u5408\u7535\u8def","text":"<p>\u5f53F\u6700\u5c0f\u9879\u4e2a\u6570\u8d85\u8fc7\\(\\overline{F}\\)\u6700\u5c0f\u9879\u4e2a\u6570\uff0c\u51fd\u6570\u53d6\u53cd\u53ef\u4ee5\u7528\u66f4\u5c11\u6700\u5c0f\u9879\u8868\u793a</p>"},{"location":"CLDF/CLDF3/#bcd-to-segment-decoder","title":"BCD-to-Segment Decoder","text":"<ol> <li>\u5171\u9633\u6781\u4e0e\u5171\u9634\u6781\u63a5\u6cd5\uff1a</li> </ol>"},{"location":"CLDF/CLDF3/#encoding","title":"Encoding","text":"<ol> <li> <p>Encoding - the opposite of decoding - the conversion of an m-bit input code to a \\(n\\)-bit output code with \\(n &lt; m&lt;  2^n\\)  such that each valid code word produces a unique output code</p> </li> <li> <p>An encoder has \\(2^n\\) (or fewer) input lines and \\(n\\) output lines which generate the binary code corresponding to the input values</p> </li> <li> <p>\u4f20\u7edf\u7f16\u7801\u5668\u95ee\u9898\uff1a\u5982\u4ee5\u4e0b\u8f93\u51fa\u65b9\u7a0b\u5f0f\u5bf9\u5e94\u7f16\u7801\u5668\uff0c\u82e5\\(D_6,D_7\\)\u540c\u65f6\u4e3a1\uff0c\u4e0d\u80fd\u5224\u65ad\u662f\\(A_2\\)\u8fd8\u662f\\(A_1\\)\uff0c\u5373\u6709\u4e0d\u786e\u5b9a\u6027</p> </li> </ol> <ol> <li>\u4f18\u5148\u7f16\u7801\u5668\uff08Priority Encoder\uff09</li> </ol> <p>\u4f4d\u6570\u8d8a\u9ad8\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002\u589e\u52a0\u4e00\u4e2a\u5355\u72ec\u8f93\u51faV\u8868\u793a\u81f3\u5c11\u6709\u4e00\u4e2a\u8f93\u5165\u4e3a0\u4ee5\u4e0e\\(D_0=1\\)\u533a\u5206</p> <pre><code>  - One encoder that can accept all possible combinations of input values and produce a meaningful result is a priority encoder.\n  - Among the 1s that appear, it selects the most significant input position (or the least significant input position) containing a 1 and responds with  the corresponding binary code for that position.\n  - example:\n    - Priority encoder with 5 inputs (D4, D3, D2, D1, D0) - highest priority to most significant 1 present - Code outputs A2, A1, A0 and V where V indicates at least one 1 present.\n    - &lt;div align=\"center\"&gt;&lt;img src=\"https://pixe1ran9e.oss-cn-hangzhou.aliyuncs.com/image-20231026111647111.png\" alt=\"image-20231026111647111\" style=\"zoom:50%;\" /&gt;&lt;/div&gt;\n  - Xs in input part of table represent 0 or 1; thus table entries correspond to product terms instead of minterms. The column on the left shows that all 32 minterms are present in the product terms in the table\n  - Xs \u5728\u8f93\u51fa\u5217\u8868\u793a\u65e0\u5173\u60c5\u51b5\u4e0d\u540c\n</code></pre>"},{"location":"CLDF/CLDF3/#selecting","title":"Selecting","text":"<ol> <li>Selecting of data or information is a critical function in digital systems and computers</li> <li>Logic circuits that perform selecting are called multiplexers</li> <li>Selecting can also be done by three-state logic or transmission gates</li> </ol>"},{"location":"CLDF/CLDF3/#multiplexer-mux","title":"Multiplexer \u591a\u8def\u590d\u7528\u5668 MUX","text":"<ol> <li>A multiplexer selects information from an input line and directs the information to an output line</li> <li>typical multiplexer has n control inputs (\\(S_{n-1}, \u2026 S_0\\)) called selection inputs, \\(2^n\\) information inputs (\\(I_{2^n - 1}, \u2026 I_0\\)), and one output \\(Y\\)</li> <li>A multiplexer can be designed to have m information inputs with \\(m &lt; 2^n\\) as well as n selection inputs </li> </ol>"},{"location":"CLDF/CLDF3/#2-to-1-line-multiplexer","title":"2-to-1-Line Multiplexer","text":"<ol> <li> <p>The single selection variable S has two values:</p> <ul> <li>S = 0 selects input \\(I_0\\)</li> <li>S = 1 selects input \\(I_1\\)</li> </ul> </li> <li> <p>The equation:\\(Y =\\overline{S}I_0 + SI_1\\)</p> </li> <li> <p>The circuit:</p> </li> </ol>"},{"location":"CLDF/CLDF3/#multiplexer-width-expansion","title":"Multiplexer Width Expansion(\u9009\u62e9\u591a\u4f4d)","text":""},{"location":"CLDF/CLDF3/#example4-to-1-line-quad-multiplexer","title":"example:4-to-1-line quad multiplexer","text":""},{"location":"CLDF/CLDF3/#other-selection-implementations","title":"Other Selection Implementations","text":"<ol> <li>Three-state logic in place of AND-OR\u3002 Gate input cost = 18</li> </ol> <ol> <li>Distributing the decoding across the three-state drivers\uff08\u5206\u5c42\u9009\u62e9\uff09 Gate input cost = 14</li> </ol> <ol> <li>\u57fa\u4e8e\u4f20\u8f93\u95e8\u7684</li> </ol>"},{"location":"CLDF/CLDF3/#combinational-logic-implementation-multiplexer-approach-1","title":"Combinational Logic Implementation- Multiplexer Approach 1","text":"<p>\u67e5\u627e\u8868</p>"},{"location":"CLDF/CLDF3/#combinational-logic-implementation-multiplexer-approach-2","title":"Combinational Logic Implementation - Multiplexer Approach 2","text":""},{"location":"CLDF/CLDF3/#part-3-arithmetic-functions","title":"Part 3 Arithmetic functions","text":""},{"location":"CLDF/CLDF3/#function-block","title":"Function Block","text":""},{"location":"CLDF/CLDF3/#half-adder","title":"Half-Adder","text":"<p>\u4e24\u8f93\u5165\u4e24\u8f93\u51fa</p> <ol> <li>\\(S\\)\u4e3a\\(X\\oplus Y,\\)\\(C\\)\u4e3a\\(XY\\)</li> </ol> <ol> <li>\u5e38\u89c1\u4e24\u79cd\u7535\u8def\u5b9e\u73b0</li> </ol>"},{"location":"CLDF/CLDF3/#full-adder","title":"Full-Adder","text":"<p>\u5168\u52a0\u5668\u5373\u8003\u8651\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\uff0c\u5373\\(Z\\)or\\(C_i\\)</p> <p>S=\\(\\overline{C_i}(A\\oplus B)+C_i(\\overline{A\\oplus B})\\)</p> <p>The term \\(X\\cdot Y\\)  is carry generate,\\(X\\oplus Y\\) is carry propagate</p> <ol> <li>Ripple-Carry Binary Adder:\u9700\u8981\u5ef6\u65f6  \u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668</li> </ol> <ol> <li>Group Carry Lookahead Logic \u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668</li> </ol> <p>\u6bcf\u6b21\u4f7f\u7528\u4e0a\u4e00\u5757\u7684\u8fdb\u4f4d\u7ed3\u679c\uff0c\u6bcf\u4e00\u6b21\u8fdb\u4f4d\u7ed3\u679c\u5ef6\u8fdf\u4e3a3</p>"},{"location":"CLDF/CLDF3/#unsigned-subtraction","title":"Unsigned Subtraction","text":""},{"location":"CLDF/CLDF3/#complements","title":"Complements \u8865\u7801","text":"<ol> <li>Diminished Radix Complement of N: defined as \\((r^n-1)-N\\) ,known as \u53cd\u7801 \\(1's\\) complement</li> <li>Radix Complement: defined as \\(r^n-N\\) \\(2's\\) complement</li> <li>\u8865\u7801\uff1a\u5bf9n\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u76f8\u5f53\u4e8e\u7b2c\u4e00\u4f4d\\(a_{n-1}\\)\u4ee3\u8868\\(-2^{n-1}\\),\u540e\u7eed\u6bcf\u4f4d\u90fd\u4ee3\u8868\\(2^k\\)</li> <li></li> </ol> <p>\u5373M-N\u65f6\uff0c\u51cf\u6570N\u5148\u6c42\u8865\u7801\\(2^n-N\\)\uff0c\u7136\u540e\\(M+(2^n-N)\\),\u82e5\u4ea7\u751f\u8fdb\u4f4d1\uff0c\u8bf4\u660e\u591f\u51cf\uff0c\u5bf9\u5e94\u503c\u5373\u4e3a\u7b54\u6848\uff1b\u82e5\u8fdb\u4f4d\u4e3a0\uff0c\u8bf4\u660e\u4e0d\u591f\u51cf\uff0c\u5219\u5bf9\u7ed3\u679c\u53d6\u8865\u7801\u5e76\u52a0\u8d1f\u53f7</p>"},{"location":"CLDF/CLDF3/#_6","title":"\u6709\u7b26\u53f7\u51cf\u6cd5","text":"<ol> <li>\u8bbe\u52a0\u6cd5\u4e3a0\uff0c\u51cf\u6cd5\u4e3a1\uff0c\u6b63\u6570\u7b2c\u4e00\u4f4d0\uff0c\u8d1f\u6570\u7b2c\u4e00\u4f4d1\uff0c\u90a3\u4e48\u5bf9\u51cf\u6570\u7b2c\u4e00\u4f4d\uff0c\u7b26\u53f7\uff0c\u88ab\u51cf\u6570\u7b2c\u4e00\u4f4d\u6784\u6210\u7684\u5e8f\u5217\uff0c\u82e5\u6709\u5076\u6570\u4e2a0\uff0c\u5728\u6ca1\u6709\u6ea2\u51fa\u60c5\u51b5\u4e0b\u5219\u53ef\u4ee5\u8f6c\u5316\u4e3a\u540c\u53f7\u76f8\u52a0</li> <li>\u82e5\u88ab\u52a0\u6570\u4e0e\u88ab\u51cf\u6570\u4e3a\u8d1f\uff0c\u5219\u53d6\u5bf9\u5e94\u8865\u7801\uff08\u4e0d\u6539\u53d8\u7b26\u53f7\u4f4d\uff09\uff0c\u4e4b\u540e\u82e5\u662f\u52a0\u6cd5\u5219\u6b63\u5e38\u8fdb\u884c\uff0c\u51cf\u6cd5\u5219\u7c7b\u4f3c\u5730\u5bf9\u51cf\u6570\u53d6\u8865</li> </ol> <p>S=1\u4e3a\u51cf\u6cd5\u5668\uff0cS=0\u4e3a\u52a0\u6cd5\u5668</p>"},{"location":"CLDF/CLDF3/#_7","title":"\u6ea2\u51fa","text":"<p>\u540c\u53f7\u76f8\u52a0\u3001\u5f02\u53f7\u76f8\u51cf\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u6ea2\u51fa</p> <ol> <li>\u5224\u65ad\u6ea2\u51fa\uff1a\\(V=C_n\\oplus C_{n-1}\\),\u5373\\(C_n\\)\u4e0e\\(C_{n-1}\\)\u7b26\u53f7\u4e00\u81f4\u5219\u4e0d\u6ea2\u51fa\uff0c\u5426\u5219\u6ea2\u51fa</li> </ol> <p>\u4e24\u4e2a\u6b63\u6570\u76f8\u52a0\uff0c\\(C_n\\)\u4e00\u5b9a\u662f0\uff0c\u6ea2\u51fa\u53ea\u53ef\u80fd\u662f\\(C_{n-1}\\)\u4e3a1</p> <p>\u4e24\u4e2a\u8d1f\u6570\u76f8\u52a0\uff0c\\(C_n\\)\u4e00\u5b9a\u662f1\uff0c\u82e5\u4e0d\u6ea2\u51fa\\(C_{n-1}\\)\u9700\u8981\u4e3a1</p> <ol> <li> <p>\u65e0\u7b26\u53f7\u6570\u6ea2\u51fa\uff1a\u4e24\u4e2a\u9996\u4f4d\u90fd\u662f1</p> </li> <li> <p>\u6709\u7b26\u53f7\u6570\uff1a\u540c\u53f7\u65f6\u6709\u53ef\u80fd\u6ea2\u51fa</p> </li> </ol>"},{"location":"CLDF/CLDF3/#_8","title":"\u5e38\u6570\u9664\u6cd5\u3001\u4e58\u6cd5","text":"<p>\u5bf9\u4e8e2\u7684\u5e42\u6b21\u53ef\u4ee5\u901a\u8fc7\u79fb\u4f4d\u5f97\u5230\u7ed3\u679c\uff0c\u5bf9\u4e8e\u975e2\u5e42\u6b21\u53ef\u4ee5\u5e38\u6570\u52a0\u6cd5\u548c2\u7684\u5e42\u6b21\u4e58\u9664\u76f8\u7ed3\u5408\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u5982\\(3x=2^1x+2^0x\\),\u5373\\(x[31:0]=\\{x[30:0],1'b0\\}+x[31:0]\\).</p>"},{"location":"CLDF/CLDF3/#_9","title":"\u538b\u7f29\u3001\u9012\u589e\u3001\u9012\u51cf","text":"<ol> <li>\u538b\u7f29\uff1a\u9488\u5bf9\u7279\u5b9a\u5e94\u7528\u65f6\u7b80\u5316\u5df2\u6709\u6a21\u5757\uff0c\u5982\u9012\u589e\u9012\u51cf\u7b49</li> </ol>"},{"location":"CLDF/CLDF3/#_10","title":"\u96f6\u586b\u5145\u4e0e\u7b26\u53f7\u6269\u5c55","text":"<ol> <li>\u589e\u52a0\u8f93\u5165\u4f4d\u6570\uff1a\u5728\u9ad8\u4f4d\u6dfb\u52a0\u6216\u5728\u4f4e\u4f4d\u6dfb\u52a0\uff0c\u524d\u8005\u9002\u7528\u4e8e\u52a0\u51cf\uff0c\u540e\u8005\u9002\u7528\u4e8e\u4f4e\u7cbe\u5ea6\u4e58\u6cd5</li> </ol>"},{"location":"CLDF/CLDF4/","title":"Chapter 4 Sequential Circuits","text":""},{"location":"CLDF/CLDF4/#_1","title":"\u65f6\u5e8f\u7535\u8def\u4ecb\u7ecd","text":"<ol> <li> <p>\u7ec4\u6210\uff1a</p> <p></p> <ul> <li>\u73b0\u4ee3\u590d\u6742\u7535\u8def\u8bbe\u8ba1\u5927\u591a\u4f7f\u7528\u540c\u6b65</li> <li>Storage elements: Latches or Flip-Flops</li> <li>\u7ec4\u5408\u903b\u8f91\uff1a<ul> <li>Implements a multiple-output switching function</li> <li>Inputs are signals from the outside.</li> <li>Outputs are signals to the outside.</li> <li>Other inputs, State or Present State are signals from storage elements.</li> <li>The remaining outputs,Next State are inputs to storage elements.</li> </ul> </li> <li>Combinatorial Logic:<ul> <li>Next state function(\u6b21\u6001\u65b9\u7a0b): Next State = f(Inputs, State)</li> <li>Output function (Mealy): Outputs = g(Inputs, State)</li> <li>Output function (Moore): Outputs = h(State)</li> </ul> </li> </ul> </li> </ol>"},{"location":"CLDF/CLDF4/#_2","title":"\u65f6\u5e8f\u7535\u8def\u5206\u7c7b","text":"<ol> <li>\u540c\u6b65(Synchronous)\uff1a\u5728\u67d0\u51e0\u4e2a\u65f6\u95f4\u68c0\u6d4b\uff0c\u4ec0\u4e48\u65f6\u5019\u89c2\u6d4b\u8f93\u5165\u548c\u6539\u53d8\u72b6\u6001\u4ec5\u4e0e\u65f6\u95f4\u4fe1\u53f7\u6709\u5173\u3002\u6240\u6709\u5143\u4ef6\u5728\u65f6\u949f\u6a21\u5757\u63a7\u5236\u4e0b\u540c\u65f6\u66f4\u65b0\u3002\u540c\u6b65\u62bd\u8c61\u4f7f\u590d\u6742\u7684\u8bbe\u8ba1\u53d8\u5f97\u6613\u4e8e\u5904\u7406\uff01</li> </ol> <p>CPU\uff1a\u540c\u6b65</p> <p>\u4f7f\u7528\u65f6\u949f\u8109\u51b2\u4f5c\u4e3a\u5b58\u50a8\u5143\u4ef6\u8f93\u5165\u4fe1\u53f7\u7684\u540c\u6b65\u65f6\u5e8f\u7535\u8def\u79f0\u4e3a\u949f\u63a7\u65f6\u5e8f\u7535\u8def(clocked sequential circuit)</p> <p>\u65f6\u949f\u6a21\u5757\uff1a</p> <pre><code>always@ (posedge,clk) begin //\u53ea\u8981\u65f6\u949f\u4fe1\u53f7\u5411\u4e0a\u53d8\u52a8\uff0c\u5c31\u4f1a\u6267\u884c\u8be5\u6a21\u5757 ---&gt; \u53ea\u5728\u7279\u5b9a\u60c5\u51b5\u68c0\u6d4b \u540c\u6b65\n\nend\n</code></pre> <ol> <li>\u5f02\u6b65(Asynchronous)\uff1a\u5728\u4efb\u4f55\u65f6\u95f4\u90fd\u53ef\u4ee5\u6539\u53d8\uff0c\u89c2\u6d4b\u8f93\u5165\u4e0e\u72b6\u6001\uff0c\u5373\u65f6\u54cd\u5e94\u3002</li> </ol>"},{"location":"CLDF/CLDF4/#_3","title":"\u79bb\u6563\u4e8b\u4ef6\u4eff\u771f","text":"<ul> <li>\u95e8\u7528\u7406\u60f3\u5316\u516c\u5f0f\u5904\u7406\u8f93\u5165\uff0c\u5e76\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u5ef6\u65f6</li> <li>\u6bcf\u5f53\u6709\u8f93\u5165\u7684\u6539\u53d8\u90fd\u505a\u51fa\u5bf9\u5e94\u8f93\u51fa</li> <li>output \u7ed3\u679c\u548c input \u4e4b\u95f4\u6709\u56fa\u5b9a\u5ef6\u65f6</li> <li>output \u6539\u53d8\u7684\u4e00\u77ac\u95f4\uff0coutput \u9a71\u52a8\u7684\u6240\u6709\u8f93\u5165\u90fd\u6539\u53d8\uff0c\u5373\u5ffd\u7565\u4f20\u8f93\u65f6\u95f4</li> </ul>"},{"location":"CLDF/CLDF4/#latch","title":"Latch","text":"<ul> <li>\u9519\u8bef\u7531\u4e8e\\(S\\)\u53d8\u5316\u4f20\u5230\u53cd\u76f8\u5668\u8f93\u51fa\u6709\u5ef6\u8fdf\uff0c\u56e0\u6b64\u51fa\u73b0\\(S\\)\u7531 1 \u53d8 0 \u540e\uff0c\\(\\overline{S}\\)\u5e76\u672a\u7acb\u5373\u7531 0 \u53d8 1\uff0c\u4f7f\u5f97\u4e24\u8005\u90fd\u662f 0\uff0c\u8f93\u51fa\u4e5f\u53d8\u6210\u4e86 0</li> </ul>"},{"location":"CLDF/CLDF4/#a-y","title":"\u5c06 A \u4e0e Y \u76f8\u8fde\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u65f6\u5e8f\u7535\u8def","text":"<ul> <li>S \u4e3a 1 \u65f6\uff0c\\(Y=B\\)\uff0cS \u4e3a 0 \u65f6\uff0cB \u4e0d\u6539\u53d8 Y\uff0c\u56e0\u6b64 Y \u53ef\u4ee5\u50a8\u5b58 B \u7684\u503c</li> </ul>"},{"location":"CLDF/CLDF4/#_4","title":"\u518d\u52a0\u4e00\u4e2a\u975e\u95e8","text":"<ul> <li>\u4f18\u70b9\uff1a\u7535\u8def\u7b80\u5355</li> <li>\u7f3a\u70b9\uff1a\u9891\u7387\u4e0d\u7cbe\u786e \uff0c\u5373\u4f7f\u5982\u6b64\u4e4b\u540e\u4ecd\u7136\u4f1a\u51fa\u73b0\u4e0a\u4e0a\u4e0a\u56fe\u4e2d\u7684 glitch</li> </ul>"},{"location":"CLDF/CLDF4/#basic-nand-overlines-overliner-latch","title":"Basic (NAND) \\(\\overline{S} \u2013 \\overline{R}\\) Latch \u9501\u5b58\u5668","text":"<p>\u4f4e\u7535\u5e73\u6709\u6548</p> <ul> <li>\u8f93\u5165 00 \u662f\u7981\u6b62\u7684</li> </ul>"},{"location":"CLDF/CLDF4/#basic-nor-s-r-latch","title":"Basic (NOR) S \u2013 R Latch","text":"<p>\u9ad8\u7535\u5e73\u6709\u6548\uff0c\u56e0\u6b64\u4e24\u4e2a\u90fd\u9ad8\u65f6\u65e0\u6548\u5904\u4e8e\u672a\u5b9a\u4e49</p>"},{"location":"CLDF/CLDF4/#clocked-s-r-latch","title":"Clocked S-R Latch","text":"<ul> <li>C \u4e3a 0\uff0c\u9501\u5b58\u5668\u4e24\u4e2a\u8f93\u5165\u90fd\u4e3a 1\uff0c\u4e0d\u6539\u53d8\u503c\uff1bC \u4e3a 1\uff0c\u8f93\u5165\u76f8\u5f53\u4e8e\\(\\overline{S},\\overline{R}\\).</li> </ul>"},{"location":"CLDF/CLDF4/#d-latch","title":"\u6539\u8fdb\uff1a\u4f7f\u5f97\u6ca1\u6709\u975e\u6cd5\u60c5\u51b5\u2014\u2014D Latch","text":"<ul> <li>\u5229\u7528\u4f20\u8f93\u95e8\u7684 D \u9501\u5b58\u5668</li> </ul> <p>\u4f20\u8f93\u95e8\uff1a\u65e2\u53ef\u4ee5\u4f20\u9001\u6570\u5b57\u4fe1\u53f7\u53c8\u53ef\u4ee5\u4f20\u8f93\u6a21\u62df\u4fe1\u53f7\u7684\u53ef\u63a7\u5f00\u5173\u7535\u8def</p>"},{"location":"CLDF/CLDF4/#flip-flops","title":"Flip-Flops","text":""},{"location":"CLDF/CLDF4/#the-latch-timing-problem","title":"The Latch Timing Problem","text":"<ul> <li>\u53ea\u8981 C = 1\uff0cY \u7684\u503c\u5c31\u4f1a\u7ee7\u7eed\u53d8\u5316\uff01\u5373\u7a7a\u7ffb\u73b0\u8c61</li> </ul> <ul> <li>\u6240\u9700\u884c\u4e3a\uff1aY \u5728\u6bcf\u4e2a\u65f6\u949f\u8109\u51b2\u4e2d\u4ec5\u66f4\u6539\u4e00\u6b21</li> <li>\u89e3\u51b3\u65b9\u6848\u662f\u65ad\u5f00\u5b58\u50a8\u5143\u4ef6\u5185\u4ece Y \u5230 Y \u7684\u95ed\u5408\u8def\u5f84\uff0c\u4f7f\u7528\u89e6\u53d1\u5668\uff08flip-flop\uff09</li> <li>a master-slave flip-flop</li> <li>an edge-triggered flip-flop</li> </ul>"},{"location":"CLDF/CLDF4/#s-r-master-slave-flip-flop","title":"S-R Master-Slave Flip-Flop","text":"<ul> <li>\u5de6\u4e3b(master),\u53f3\u4ece(slave)</li> <li>C=1 \u89c2\u6d4b\u8f93\u5165\uff0cC=0 \u8f93\u51fa\u6539\u53d8</li> <li>\u5047\u8bbe S=1,R=0\uff0cC \u7531 0 \u53d8 1\uff0c\u4e3b\u9501\u5b58\u5668\u5bf9\u5e94 Q \u4e3a 1\uff1bC \u518d\u53d8 0\uff0c\u4ece\u9501\u5b58\u5668\u63a5\u6536\u5916\u90e8\u8f93\u5165\uff0c\u5373 Q \u4e0e\\(\\overline{Q}\\)\uff0c\u5bf9\u5e94\u8f93\u51fa Q \u4e3a 1</li> <li>C \u5728\u4efb\u4f55\u72b6\u6001\uff0cS,R \u8f93\u5165\u7aef\u90fd\u4e0d\u53ef\u80fd\u76f4\u63a5\u6539\u53d8\u8f93\u51fa\u72b6\u6001</li> <li>\u53ea\u6709\u5f53 clock \u5b8c\u6210\u4e00\u6b21\\(0\\rarr 1\\rarr 0\\)\u53d8\u5316\u7684\u5468\u671f\u540e\uff0c\u8f93\u51fa Q \u624d\u4f1a\u6539\u53d8</li> <li>\u95ee\u9898\uff1aclock \u4e3a 1 \u65f6\uff0c\u7531\u4e8e\u5916\u90e8\u8f93\u5165\u53d8\u5316\u5e26\u6765\u7684\u7d2f\u79ef\u6548\u5e94\uff0c\u4f7f\u5f97\u7ed3\u679c\u53ef\u80fd\u9519\u8bef\uff0c\u79f0\u4e3a1\u2018s catching \u4e00\u6b21\u6027\u91c7\u6837</li> <li>\u89e6\u53d1\u5668\u8f93\u51fa\u7684\u53d8\u5316\u4f1a\u56e0\u8109\u51b2\u5bbd\u5ea6\u800c\u5ef6\u8fdf\uff0c\u4ece\u800c\u4f7f\u7535\u8def\u53d8\u6162</li> <li>\u5f53 C = 1 \u65f6\uff0c\u5141\u8bb8 S \u548c R \u66f4\u6539\uff0c\u5047\u8bbe Q = 0\uff0cS \u53d8\u4e3a 1\uff0c\u7136\u540e\u53d8\u56de 0\uff0cR \u4fdd\u6301\u5728 0 \u3002\u4e3b\u9501\u5b58\u5668\u8bbe\u7f6e\u4e3a 1 \uff0c1 \u88ab\u8f6c\u79fb\u5230\u4ece\u9501\u5b58\u5668\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u4f20\u8f93\u7684\u662f 0</li> <li>\u5047\u8bbe Q = 0\uff0cS \u53d8\u4e3a 1 \u5e76\u8fd4\u56de 0\uff0cR \u53d8\u4e3a 1 \u5e76\u8fd4\u56de 0 \uff0c\u4e3b\u9501\u5b58\u5668\u8bbe\u7f6e\u4e3a 0\uff0c\u7136\u540e\u590d\u4f4d 0 \u88ab\u4f20\u8f93\u5230\u4ece\u9501\u5b58\u5668</li> <li>\u5373\u89e6\u53d1\u5668\u4f1a\u56e0\u4e3a\u4e00\u77ac\u95f4\u7684\u53d8\u5316\u800c\u503c\u53d1\u751f\u6539\u53d8</li> </ul>"},{"location":"CLDF/CLDF4/#edge-triggered-flip-flop","title":"Edge-Triggered Flip-Flop \u8fb9\u6cbf\u89e6\u53d1\u5668","text":"<ul> <li>\u4e3b\u9501\u5b58\u5668\u53d8\u4e3a D \u9501\u5b58\u5668</li> <li>\u53ea\u770b\u8fb9\u6cbf\u60c5\u51b5\u8f93\u5165\u51b3\u5b9a\u8f93\u51fa\uff0c\u5176\u4ed6\u65f6\u5019\u8f93\u5165\u4e0d\u5f71\u54cd</li> <li>D \u89e6\u53d1\u5668\u89e3\u51b3 SR \u89e6\u53d1\u5668\u7684\u4e00\u6b21\u6027\u91c7\u6837\u95ee\u9898\u662f\u56e0\u4e3a D \u89e6\u53d1\u5668\u6ca1\u6709\u4fdd\u6301\u529f\u80fd</li> </ul> <p>\u4e0a\u5347\u6cbf\u89e6\u53d1\u5668\uff08Positive-Triggered Flip-Flop\uff09</p>"},{"location":"CLDF/CLDF4/#standard-symbols-for-storage-elements","title":"Standard Symbols for Storage Elements","text":"<ul> <li>\u4e3b\u4ece\u89e6\u53d1\u5668\u8f93\u51fa\u4fa7\u7684\u8868\u793a\u4e0d\u5141\u8bb8\u8f93\u5165\u6539\u53d8\u3002</li> <li>\u82e5\u7535\u8def\u4e2d\u5b58\u5728\u4e0d\u540c\u8fb9\u6cbf\u89e6\u53d1\u5668\uff0c\u82e5\u60f3\u540c\u6b65\u89e6\u53d1\uff0c\u6b63\u786e\u65b9\u5f0f\u5e94\u8be5\u662f\u91c7\u7528\u4e3b\u65f6\u949f\u4ea7\u751f\u5668\uff0c\u4f7f\u5176\u4ea7\u751f\u540c\u6b65\u6b63\u5411\u548c\u8d1f\u5411\u8109\u51b2\uff0c\u5426\u5219\u4f1a\u6709\u5ef6\u8fdf</li> <li>\u901a\u8fc7\u95e8\u63a7\u65f6\u949f\u4f7f\u5f97\u65f6\u949f\u8109\u51b2\u5931\u6548\u4f1a\u5bfc\u81f4\u5ef6\u8fdf\uff0c\u8fd9\u79cd\u5ef6\u8fdf\u79f0\u4e3a\u65f6\u949f\u504f\u79fb\uff08clock skew\uff09</li> </ul>"},{"location":"CLDF/CLDF4/#actual-circuit-of-edge-triggered-d-flip-flop","title":"Actual Circuit of Edge-Triggered D Flip-Flop","text":"<p>6 \u4e2a\u4e0e\u975e\u95e8\uff0c\u6210\u672c\u8f83\u4f4e</p>"},{"location":"CLDF/CLDF4/#direct-input","title":"Direct Input","text":"<ul> <li>\u5b9e\u73b0\u89e6\u53d1\u5668\u7684\u5f02\u6b65\u7f6e\u4f4d\u7684\u8f93\u5165\u79f0\u4e3a\u76f4\u63a5\u7f6e\u4f4d(direct set)\u6216\u9884\u7f6e(preset)\uff0c\u5b9e\u73b0\u5f02\u6b65\u590d\u4f4d\u7684\u8f93\u5165\u79f0\u4e3a\u76f4\u63a5\u590d\u4f4d\u6216\u6e05\u96f6(clear)</li> <li>\u82e5\u4f7f\u7528\u540c\u6b65\u8d4b\u521d\u503c\uff1a\u8bbe\u7f6e D</li> <li>\u4f4e\u7535\u5e73\u6709\u6548</li> <li></li> </ul>"},{"location":"CLDF/CLDF4/#filp-flop-timing-parameters","title":"Filp-Flop Timing Parameters","text":"<ol> <li>\\(t_s\\)\uff1asetup time\uff0c\u5efa\u7acb\u65f6\u95f4</li> </ol> <p>\u6839\u636e\u5b9a\u4e49, \\(t_s\\)\u6307\u5728\u91c7\u6837\u524d\u89e6\u53d1\u5668\u9700\u8981\u7684\u51c6\u5907\u65f6\u95f4\u3002\u5bf9\u4e8e\u4e3b\u4ece\u89e6\u53d1\u5668\uff0c\u5728\u4fe1\u53f7\u5904\u4e8e\u4e0a\u5347\u6cbf\u7684\u65f6\u5019 S \u90e8\u5206\u7684\u8f93\u5165\u662f\u4e0d\u80fd\u6539\u53d8\u7684\uff0c\u5426\u5219\u53ef\u80fd\u6709\u4e00\u6b21\u6027\u91c7\u6837\u95ee\u9898\uff0c\u56e0\u6b64\u5728\u4fe1\u53f7\u5904\u4e8e\u4e0a\u5347\u6cbf\u90fd\u662f\u89e6\u53d1\u5668\u7684\u51c6\u5907\u65f6\u95f4\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u73b0\u5728\u6211\u4eec\u666e\u904d\u4f7f\u7528\u8fb9\u7f18\u89e6\u53d1\u5668\u7684\u539f\u56e0\u3002 \u5bf9\u4e8e D \u89e6\u53d1\u5668\u800c\u8a00\uff0c\u4e0d\u8981\u5361\u5728\u65f6\u949f\u8fb9\u6cbf\u6539\u53d8 D \u7684\u8f93\u5165\uff0c\u800c\u662f\u5728\u65f6\u949f\u6539\u53d8\u4e4b\u524d\u5c31\u8fdb\u884c\uff0c\u8fd9\u6837 D \u89e6\u53d1\u5668\u624d\u80fd\u6709\u8db3\u591f\u7684\u51c6\u5907\u65f6\u95f4\u3002</p> <ol> <li>\\(t_h\\)\uff1ahold time\uff0c\u89e6\u53d1\u8fb9\u6cbf\u540e\u8fc7\u4e00\u6bb5\u65f6\u95f4\u8f93\u5165\u624d\u80fd\u6539\u53d8\u3002\u73b0\u5728\u591a\u6570\u89e6\u53d1\u5668\\(t_h\\)\u53ef\u4ee5\u662f 0</li> <li> <p>\\(t_w\\)\uff1aclock pulse width</p> </li> <li> <p>\\(t_{px}\\)\uff1apropagation delay. Measured from clock edge that triggers the output change to the output change.</p> </li> </ol> <ul> <li>\\(t_{PHL}\\) :High-to-Low   \\(t_{PLH}\\) :Low-to-High   \\(t_{pd}\\):max (\\(t_{PHL}\\),$ t_{PLH}$)</li> </ul> <ol> <li>\u5bf9\u8fb9\u6cbf\u89e6\u53d1\u5668\uff0c\\(t_s\\leq t_w\\) \u5bf9\u4e3b\u4ece\u89e6\u53d1\u5668\uff0c\\(t_s=t_w\\)</li> </ol>"},{"location":"CLDF/CLDF4/#other-filp-flop","title":"Other Filp-Flop","text":""},{"location":"CLDF/CLDF4/#j-k-filp-flop","title":"J-K Filp-Flop","text":"<ol> <li> <p>\u4e0e SR \u7c7b\u4f3c\uff0c\u4f46\u8f93\u5165 11 \u65f6\u89e6\u53d1\u5668\u4e3a\u6c42\u53cd(opposite state)\uff0c\u5373\u6ca1\u6709\u975e\u6cd5\u72b6\u6001</p> </li> <li> <p>Implementation by D Flip-Flop\uff08\u4ee5\u6b63\u8fb9\u6cbf\u89e6\u53d1\u5668\u4e3a\u6838\u5fc3\u907f\u514d\u4e00\u6b21\u6027\u91c7\u6837\uff09\uff1a</p> </li> </ol> <ul> <li>J=0\uff0cK=0\uff0cQ \u8f93\u51fa\u9001\u7ed9 D\uff0c\u4fdd\u6301</li> <li>J=0\uff0cK=1\uff0c\u4e0a\u4e0b\u5168 disable\uff0cD \u7f6e 0\uff0creset</li> <li>J=1\uff0cK=0\uff0cD \u8f93\u5165\u4e3a\\(\\overline{Q}+Q\\)\uff0c\u4e3a 1</li> <li>J=1\uff0cK=1\uff0c\\(\\overline{Q}\\)\u9001\u7ed9 D\uff0c\u6c42\u53cd</li> </ul>"},{"location":"CLDF/CLDF4/#t-flip-flop","title":"T Flip-Flop","text":"<p>\u5355\u8f93\u5165 T\uff0cT=0 \u4fdd\u6301\uff0cT=1 \u6c42\u53cd</p> <p>Reset (asynchronous or synchronous) essential \u9700\u8981\u5f02\u6b65\u63a7\u5236\u8d4b\u521d\u503c</p>"},{"location":"CLDF/CLDF4/#analysis","title":"Analysis","text":"<ol> <li>\u8f93\u5165:\\(x(t)\\),\u8f93\u51fa:\\(y(t)\\),\u72b6\u6001:\\(A(t),B(t)\\)</li> <li></li> </ol> <p>a important equation:\\(Q=D\\)</p>"},{"location":"CLDF/CLDF4/#stable-table","title":"Stable Table","text":"<p>\u6709\u9650\u72b6\u6001\u673a</p> <ol> <li>Alternate State Table \u4e8c\u7ef4\u8868\uff1a</li> </ol>"},{"location":"CLDF/CLDF4/#state-diagrams","title":"State Diagrams","text":"<p>The sequential circuit function can be represented in graphical form as a state diagram with the following components\uff1a</p> <ul> <li>A circle with the state name in it for each state</li> <li>A directed arc from the Present State to the Next State for each state transition</li> <li>A label on each directed arc with the Input values which causes the state transition, and</li> <li>A label:</li> <li>On each circle with the output value produced, or</li> <li>On each directed arc with the output value produced.</li> </ul> <ol> <li>Moore type output depends only on state(\u8f93\u51fa\u753b\u5728\u5708\u91cc\u9762) \u8f93\u51fa\u4e0e\u8f93\u5165\u65e0\u5173    Mealy type output depends on state and input(\u8f93\u51fa\u753b\u5728\u6709\u5411\u5f27\u4e0a) \u8f93\u51fa\u4e0e\u8f93\u5165\u6709\u5173</li> <li>Example\uff1a/\u5de6\u4fa7\u8f93\u5165\uff0c\u53f3\u4fa7\u8f93\u51fa\uff0c\u7531\u73b0\u6001\u6307\u5411\u6b21\u6001\uff0c\u4e0b\u4f8b\u4e3a Mealy \u578b</li> </ol>"},{"location":"CLDF/CLDF4/#equivalent-state-definitions","title":"Equivalent State Definitions","text":"<p>\u4e24\u4e2a\u72b6\u6001\u7b49\u6548\uff0c\u5373\u5bf9\u4efb\u610f\u4e00\u79cd\u8f93\u5165\u90fd\u4ea7\u751f\u76f8\u540c\u7684\u8f93\u51fa\u4e0e\u6b21\u6001</p> <ol> <li>\u4f8b\uff1a\u4e0b\u56fe\u4e2d S2 \u4e0e S3</li> </ol> <p>\u56e0\u6b64\u53ef\u4ee5\u6539\u5199</p> <p>\u7136\u540e\u53d1\u73b0 S1 \u4e0e S2 \u7b49\u6548</p> <p>\u6b64\u65f6\u4e0d\u518d\u6709\u53ef\u4ee5\u5408\u5e76\u7684</p>"},{"location":"CLDF/CLDF4/#moore-and-mealy-models","title":"Moore and Mealy Models","text":"<p>Sequential Circuits or Sequential Machines are also called Finite State Machines (FSMs). Two formal models exist:</p>"},{"location":"CLDF/CLDF4/#moore-model","title":"Moore Model","text":"<ol> <li>Outputs are a function ONLY of states.Usually specified on the states.</li> </ol> <ol> <li>State Table</li> </ol>"},{"location":"CLDF/CLDF4/#mealy-model","title":"Mealy Model","text":"<ol> <li>Outputs are a function of inputs AND states.Usually specified on the state transition arcs.</li> </ol> <ol> <li>State Table</li> </ol>"},{"location":"CLDF/CLDF4/#_5","title":"\u6df7\u5408\u578b\u5199\u6cd5","text":"<p>\u6307\u5411\u540c\u4e00\u4e2a\u6b21\u6001\u7684\u8f93\u51fa\u76f8\u540c\u65f6\u628a\u8f93\u51fa\u653e\u8fdb\u5708</p>"},{"location":"CLDF/CLDF4/#one-more-example","title":"One more example","text":"<p>\u6a21 5 \u8ba1\u6570\u5668\uff0c\u82e5\u4ece 0 \u5f00\u59cb\uff0c\u5219\u4f1a 0~4 \u5faa\u73af\u53d8\u5316\uff0c\u4f46\u82e5\u5916\u90e8\u5e72\u6270\u4ea7\u751f 5-7\uff0c\u4e0b\u6b21\u4ecd\u4f1a\u5207\u6362\u56de 0-4\uff0c\u4ece\u800c\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u9501\u4e0e\u9519\u8bef\u3002</p> <p>Only states reachable from the reset state 000 are used: 000, 001, 010, 011, and 100. The circuit produces a 1 on Z after four clock periods and every five clock periods thereafter: 000 -&gt; 001 -&gt; 010 -&gt; 011 -&gt; 100 -&gt; 000 -&gt; 001 -&gt; 010 -&gt; 011 -&gt; 100 \u2026</p>"},{"location":"CLDF/CLDF4/#circuit-and-system-level-timing","title":"Circuit and System Level Timing","text":"<ol> <li> <p>New Timing Components</p> <ul> <li> <p>\\(t_p\\) clock period - The interval between occurrences of a specific clock edge in a periodic clock</p> </li> <li> <p>\\(t_{pd,COMB}\\) :total delay of combinational logic along the path from flip-flop output to flip-flop input</p> <p>\u7ec4\u5408\u903b\u8f91\u5728\u89e6\u53d1\u5668\u8f93\u51fa\u5230\u89e6\u53d1\u5668\u8f93\u5165\u8def\u5f84\u4e0a\u7684\u603b\u5ef6\u8fdf</p> </li> <li> <p>\\(t_{pd,FF}\\)\uff1a\u89e6\u53d1\u5668\u603b\u5ef6\u8fdf</p> </li> <li> <p>\\(t_{slack}\\) \uff1a extra time in the clock period in addition to the sum of the delays and setup time on a path     \u53ef\u4ee5\u662f\u6b63\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u6570 \u6240\u6709\u8def\u5f84\u4e0a\u7684\u5fc5\u987b\u5927\u4e8e\u6216\u7b49\u4e8e\u96f6\u624d\u80fd\u6b63\u786e\u64cd\u4f5c     Must be greater than or equal to zero on all paths for correct operation</p> </li> </ul> </li> </ol> <ol> <li>Timing Equations\uff1a</li> </ol> <p>$$    t_p=t_{slack}+(t_{pd,FF}+t_{pd,COMB}+t_s)    $$</p> <p>For \\(t_{slack}\\) greater than or equal to zero, \u65f6\u949f\u8109\u51b2\u5468\u671f\u5fc5\u987b\u4e0d\u8d85\u8fc7\u4e0b\u5f0f</p> <p>$$    t_p\\geqslant \\max(t_{pd,FF}+t_{pd,COMB}+t_s)    $$</p> <p>for all paths from flip-flop output to flip-flop input</p> <ol> <li>Calculation of Allowable \\(t_{pd,COMB}\\)</li> </ol>   \u56e0\u6b64\u66f4\u591a\u4f7f\u7528\u8fb9\u6cbf\u89e6\u53d1\u5668  ## Formulation: Finding a State Diagram  A state is an abstraction of the history of the past applied inputs to the circuit (including power-up reset or system reset).  \u5c06\u6587\u672c\u5316\u7684\u9700\u6c42\u53d8\u4e3a\u7528\u72b6\u6001\u673a\u63cf\u8ff0\uff08\u6574\u4e2a\u7535\u8def\u7ecf\u8fc7\u54ea\u4e9b\u72b6\u6001\uff1f\u6bcf\u4e2a\u72b6\u6001\u4e4b\u95f4\u7531\u54ea\u4e2a\u8f93\u5165\u8fdb\u884c\u9a71\u52a8\uff1f\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f\uff09  ### A Example: Sequence Recognizers \u5e8f\u5217\u8bc6\u522b  1. A sequence recognizer is a sequential circuit that produces a distinct output value whenever a prescribed pattern of input symbols occur in sequence, i.e, recognizes an input sequence occurrence.     \u9700\u8981\u627e\u5230\u6307\u5b9a\u5e8f\u5217\u7684\u5934\u5c3e     To develop a sequence recognizer state diagram:        - Begin in an initial state in which NONE of the initial portion of the sequence has occurred (typically \u201creset\u201d state).       - Add a state that recognizes that the first symbol has occurred.       - Add states that recognize each successive symbol occurring.       - The final state represents the input sequence (possibly less the final input value) occurrence.       - Add state transition arcs which specify what happens when a symbol not in the proper sequence has occurred.       - Add other arcs on non-sequence inputs which transition to states that represent the input subsequence that has occurred.    ### \u72b6\u6001\u7b49\u6548  1. \u5b8c\u5168\u786e\u5b9a\u72b6\u6001\u8868\uff1a \u72b6\u6001\u8868\u4e2d\u7684\u6b21\u6001\u548c\u8f93\u51fa\u90fd\u6709\u786e\u5b9a\u7684\u72b6\u6001\u548c\u786e\u5b9a\u7684\u8f93\u51fa\u503c\u3002 2. \u7b49\u6548\u72b6\u6001\uff1a\u8bbe\u72b6\u6001 S1 \u548c S2 \u662f\u5b8c\u5168\u786e\u5b9a\u72b6\u6001\u8868\u4e2d\u7684\u4e24\u4e2a\u72b6\u6001,\u5982\u679c\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5e8f\u5217\uff0c\u5206\u522b\u4ece\u72b6\u6001 S1 \u548c\u72b6\u6001 S2 \u51fa\u53d1\uff0c\u6240\u5f97\u5230\u7684\u8f93\u51fa\u54cd\u5e94\u5e8f\u5217\u5b8c\u5168\u76f8\u540c\uff0c\u5219\u72b6\u6001 S1 \u548c S2 \u662f\u7b49\u6548\u7684\uff0c\u8bb0\u4f5c(S1, S2), \u6216\u8005\u8bf4\uff0c\u72b6\u6001 S1 \u548c S2 \u662f\u7b49\u6548\u5bf9\u3002\u7b49\u6548\u72b6\u6001\u53ef\u4ee5\u5408\u5e76\u3002\u8fd9\u91cc\u201c\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u5e8f\u5217\u201d\u662f\u6307\u957f\u5ea6\u548c\u7ed3\u6784\u662f\u4efb\u610f\u7684\uff0c\u5b83\u5305\u542b\u65e0\u7a77\u591a\u4f4d\uff0c\u4e14\u6709\u65e0\u7a77\u591a\u79cd\u7ec4\u5408\u3002  3. \u72b6\u6001\u7b49\u6548\u7684\u4e09\u79cd\u60c5\u51b5\uff1a\u9996\u5148\u8f93\u51fa\u76f8\u540c\uff0c\u5176\u6b21\u6216\u6b21\u6001\u76f8\u540c\uff0c\u6216\u6b21\u6001\u4ea4\u9519\uff0c\u6216\u6b21\u6001\u5faa\u73af    $S_i$\u4e0e$S_j$\u7b49\u6548\uff0c$S_k$\u4e0e$S_l$\u7b49\u6548  4. \u9690\u542b\u8868\u5316\u7b80        - \u4f5c\u9690\u542b\u8868       - \u987a\u5e8f\u6bd4\u8f83\uff0c\u5bfb\u627e\u7b49\u6548\u72b6\u6001\u5bf9         - \u72b6\u6001\u5bf9\u7b49\u6548\uff0c\u6253\u201c\u221a\u201d\uff1b         - \u72b6\u6001\u5bf9\u4e0d\u7b49\u6548\uff0c\u6253\u201c\u00d7\u201d\uff1b         - \u72b6\u6001\u5bf9\u662f\u5426\u7b49\u6548\u9700\u8fdb\u4e00\u6b65\u68c0\u67e5\uff0c\u5219\u6807\u8bb0\u6b21\u6001\u5bf9\u3002 \u8fdb\u4e00\u6b65\u68c0\u67e5\u6307\u8f93\u51fa\u76f8\u540c\u4f46\u4e0d\u80fd\u5224\u65ad\u6b21\u6001\u662f\u5426\u76f8\u540c                - \u8fdb\u884c\u5173\u8054\u6bd4\u8f83\uff0c\u786e\u5b9a\u7b49\u6548\u72b6\u6001\u5bf9         - \u7531\u4e8e CD\u3001DE \u4e0d\u7b49\u6548\uff0c\u6240\u4ee5 DG \u4e0d\u7b49\u6548\uff0c\u753b\u659c\u7ebf\u6807\u5fd7         - \u5904\u4e8e\u5faa\u73af\u94fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u662f\u7b49\u6548\u72b6\u6001\u5bf9  ### \u72b6\u6001\u5206\u914d  1. \u57fa\u672c\u539f\u5219\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u6761\u539f\u5219\u8f83\u4e3a\u91cd\u8981\uff0c\u9700\u4f18\u5148\u8003\u8651\uff0c\u5176\u6b21\u8981\u8003\u8651\u7531\u524d\u4e09\u6761\u539f\u5219\u5f97\u5230\u7684\u5e94\u5206\u914d\u76f8\u90bb\u4ee3\u7801\u7684\u72b6\u6001\u5bf9\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6b21\u6570\u591a\u7684\u72b6\u6001\u5bf9\u5e94\u4f18\u5148\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002        - \u5728\u76f8\u540c\u8f93\u5165\u6761\u4ef6\u4e0b\u5177\u6709\u76f8\u540c\u6b21\u6001\u7684\u73b0\u6001\uff0c\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801 \uff08**\u8f83\u4e3a\u91cd\u8981**\uff09       - \u5728\u76f8\u90bb\u8f93\u5165\u6761\u4ef6\uff0c\u540c\u4e00\u73b0\u6001\u7684\u6b21\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801       - \u8f93\u51fa\u5b8c\u5168\u76f8\u540c\u7684\u73b0\u6001\u5e94\u5c3d\u53ef\u80fd\u5206\u914d\u76f8\u90bb\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801       - \u6700\u5c0f\u5316\u72b6\u6001\u8868\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u72b6\u6001\u6216\u521d\u59cb\u72b6\u6001\u5e94\u5206\u914d\u903b\u8f91 0    \u6ce8\uff1a\uff084\uff09\u4e2d 4 \u4e2a\u72b6\u6001\u51fa\u73b0\u6b21\u6570\u90fd\u4e00\u6837\u591a\uff0c\u968f\u610f\u9009\u62e9\u4e00\u4e2a\u5206\u914d\u4e3a\u903b\u8f91 0 \u5373\u53ef  ## \u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1  1. \u660e\u786e\u9700\u6c42 2. \u72b6\u6001\u56fe  3. \u72b6\u6001\u8868 4. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b 5. \u5de5\u827a\u6620\u5c04 6. \u7535\u8def\u9a8c\u8bc1"},{"location":"CLDF/CLDF5/","title":"Chapter 5 Digital Hardware Implementation","text":""},{"location":"CLDF/CLDF5/#cmos","title":"CMOS","text":"<p>CMOS\u57fa\u7840\u662fMOS\uff08\u91d1\u5c5e\u6c27\u5316\u7269\u534a\u5bfc\u4f53\uff09\u6676\u4f53\u7ba1</p> <p>\u6f0f\u6781\u7535\u538b\u6bd4\u6e90\u6781\u7535\u538b\u8db3\u591f\u5927\uff0c\u5904\u4e8e\u5bfc\u901a\u72b6\u6001\uff08ON\uff09\uff1b\u5c0f\u4e8e\u9608\u503c\uff0c\u6c9f\u9053\u6d88\u5931\uff0c\u5904\u4e8e\u622a\u6b62\u72b6\u6001\uff08OFF\uff09</p>"},{"location":"CLDF/CLDF5/#why-programmable-logic","title":"Why Programmable Logic?","text":"<ol> <li> <p>Facts:</p> <ul> <li>It is most economical to produce an IC in large volumes</li> <li>Many designs required only small volumes of ICs</li> </ul> </li> <li> <p>Need an IC that can be:</p> <ul> <li>Produced in large volumes</li> <li>Handle many designs required in small volumes</li> </ul> </li> <li>A programmable logic part can be:<ul> <li>made in large volumes</li> <li>programmed to implement large numbers of different low-volume designs</li> </ul> </li> <li>Many programmable logic devices are field-programmable, i. e., can be programmed outside of the manufacturing environment</li> <li> <p>Most programmable logic devices are erasable and reprogrammable.</p> <ul> <li>Allows \u201cupdating\u201d a device or correction of errors</li> <li>Allows reuse the device for a different design - the ultimate in re-usability!     Ideal for course laboratories</li> </ul> </li> <li> <p>Programmable logic devices can be used to prototype design that will be implemented for sale in regular ICs.</p> <ul> <li>Complete Intel Pentium designs were actually prototyped with specialized systems based on large numbers of VLSI programmable devices!</li> </ul> </li> </ol>"},{"location":"CLDF/CLDF5/#programming-technologies","title":"Programming Technologies","text":""},{"location":"CLDF/CLDF5/#classification","title":"Classification","text":""},{"location":"CLDF/CLDF5/#control-connection","title":"Control connection","text":"<ol> <li>Mask programming\uff1a\u5de5\u5382\u751f\u4ea7\u65f6\u5b8c\u6210\uff0c\u4e0d\u53ef\u518d\u7f16\u7a0b\uff0c\u597d\u5904\u662f\u6210\u672c\u4f4e\uff0cone time programming</li> <li>Fuse(\u7194\u4e1d)\uff1a\u5728\u82af\u7247\u8bbe\u8ba1\u65f6\uff0c\u5728\u5f88\u591a\u82af\u7247\u5f15\u811a\u8fde\u63a5\u4e4b\u95f4\u6709 fuse, \u8bbe\u8ba1\u7535\u8def\u65f6\u4e0d\u9700\u8981\u4fdd\u7559\u8fde\u63a5\u7684\u7528\u9ad8\u7535\u538b\u4ea7\u751f\u9ad8\u7535\u6d41\uff0c\u7194\u65ad fuse.</li> <li>Antifuse \u53cd\u7194\u4e1d\uff1a\u6700\u5f00\u59cb\u65ad\u5f00\uff0c\u51fb\u7a7f\u540e\u7535\u8def\u8fde\u63a5\u597d</li> <li> <p>Single-bit storage element\uff1a\u5b58\u50a8\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u8fd9\u4e2a\u4f4d\u7684\u8f93\u51fa\u63a7\u5236\u4e00\u4e2a\u6676\u4f53\u7ba1\uff0c\u8fdb\u800c\u63a7\u5236\u4e24\u4e2a\u5f15\u811a\u8fde\u63a5/\u65ad\u5f00</p> <ol> <li>\u7528\u4e00\u4f4d\u5b58\u50a8\u5355\u5143\u9a71\u52a8\u4e00\u4e2an\u6c9f\u9053MOS\u6676\u4f53\u7ba1<ul> <li>\u5b58\u50a81\u6676\u4f53\u7ba1\u5bfc\u901a\uff0c0\u5219\u622a\u6b62</li> </ul> </li> <li>\u4f9b\u7535\u65f6\u624d\u80fd\u5b58\u50a8\u503c\uff0c\u56e0\u6b64\u662f\u6613\u5931\u7684</li> </ol> </li> <li> <p>\u6676\u4f53\u7ba1\u5f00\u5173\u63a7\u5236\uff1a\u57fa\u4e8e\u6d6e\u52a8\u6805\u6781\u5b58\u50a8\u7535\u8377\uff0c\u6d6e\u52a8\u6805\u6781\u5b58\u50a8\u7684\u8d1f\u7535\u8377\u4f7f\u6676\u4f53\u7ba1\u622a\u6b62\u3002\u82e5\u6b63\u5e38\u6805\u6781\u52a0\u8f7d\u9ad8\u7535\u5e73\uff0c\u5b58\u50a8\u8d1f\u7535\u8377\u6d88\u5931\u4f7f\u6676\u4f53\u7ba1\u5bfc\u901a</p> </li> </ol>"},{"location":"CLDF/CLDF5/#build-lookup-tablelut","title":"Build Lookup Table(LUT)","text":"<p>\u5982 16 \u4f4d\u5bc4\u5b58\u5668\uff08\u5b58\u771f\u503c\u8868\u7684\u503c\uff09 +16-1 Mux \u53ef\u6784\u6210\u56db\u8f93\u5165\u4e4b\u5185\u7684\u903b\u8f91\u6a21\u5757\uff0c\u53ea\u9700\u8981\u5c06 16\u4f4d\u5bc4\u5b58\u5668\u586b\u4e0a\u4e0d\u540c\u7684\u503c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u903b\u8f91\u51fd\u6570</p>"},{"location":"CLDF/CLDF5/#transistor-switching-control","title":"Transistor Switching Control","text":"<ol> <li> <p>\u7528\u6676\u4f53\u7ba1\u63a7\u5236\u5f00\u5173\uff0c\u7c7b\u4f3c\u8fde\u63a5\u63a7\u5236    \u6d6e\u52a8\u6805\u6781\uff1a</p> </li> <li> <p>Stored charge on a floating transistor gate</p> <ul> <li>Erasable \u64e6\u9664\uff1a\u7528\u5f3a\u7d2b\u5916\u7ebf\u7167\u5c04\u8db3\u591f\u957f\u65f6\u95f4</li> <li>Electrically erasable \u7535\u64e6\u9664\uff1a\u7528\u9ad8\u4e8e\u6b63\u5e38\u503c\u7535\u538b\u64e6\u9664</li> <li>Flash (as in Flash Memory) \u53ef\u4ee5\u64e6\u9664\u6307\u5b9a\u82e5\u5e72\u4e2a\u6d6e\u52a8\u6805\u6781\u5b58\u50a8\u7684\u7535\u8377</li> </ul> <p>Storage elements(as in a memory)</p> </li> </ol>"},{"location":"CLDF/CLDF5/#characteristic","title":"Characteristic","text":""},{"location":"CLDF/CLDF5/#configuration","title":"Configuration","text":"<ol> <li> <p>ROM(Read Only Memory)\uff1aa fixed array of AND gates and a programmable array of OR gates \u56fa\u5b9a\u4e0e\u9635\u5217\uff0c\u53ef\u7f16\u7a0b\u6216\u9635\u5217</p> <ul> <li>\u975e\u6613\u5931\u6027</li> </ul> <p></p> <ul> <li> <p>ROM size=address width \u00d7 word width = \\(2^2 \u00d74\\)= 16 bit</p> <p></p> </li> </ul> </li> <li> <p>Programmable Array Logic (PAL) - a programmable array of AND gates feeding a fixed array of OR gates.</p> <p></p> <p>\u8f93\u51fa\u4fa7\u6216\u95e8\u9635\u5217\u56fa\u5b9a\uff0c\u8f93\u5165\u4fa7\u4e0e\u95e8\u9635\u5217\u53ef\u7f16\u7a0b</p> <p>\u7f3a\u70b9\uff1a\u8f93\u5165\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u4e00\u5b9a\u80fd\u591f\u5b8c\u5907\u8868\u8fbe\u51fd\u6570</p> <p>\u6539\u8fdb\uff1a\u901a\u8fc7\u5c06\u4e00\u4e2a\u65e2\u6709\u7684 PAL \u8f93\u51fa\u5f53\u4f5c\u8f93\u5165\uff0c\u8f93\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u6765\u5f25\u8865\u9879\u4e0d\u8db3\u7684\u95ee\u9898\u3002</p> </li> <li> <p>Programmable Logic Array (PLA) - a programmable array of AND gates feeding a programmable array of OR gates.</p> </li> </ol> <ol> <li> <p>\u53ef\u7f16\u7a0b\u4e0e\u9635\u5217\u8f93\u5165\uff0c\u53ef\u7f16\u7a0b\u6216\u9635\u5217\u8f93\u51fa</p> <ul> <li>\u4e0e PAL \u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u4e5f\u80fd\u5bf9\u8f93\u51fa\u7ec4\u5408\u8fdb\u884c\u91cd\u7f16\u7a0b\u3002</li> <li>\u5176\u540c PAL \u4e00\u6837\u5177\u6709\u4e00\u4e2a\u7f3a\u9677\u662f\uff0c\u56e0\u4e3a\u8868\u8fbe\u51fd\u6570\u7684\u65b9\u6cd5\u4e0d\u662f\u901a\u8fc7 SOM \u6216\u8005 POM \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u4e0d\u4e00\u5b9a\u80fd\u591f\u5b8c\u5907\u8868\u8fbe\u51fd\u6570\u3002\u8f93\u5165</li> <li>\u5728\u57fa\u7840\u4e0a\u4e00\u4e2a\u6539\u8fdb\u662f\u5728\u8f93\u51fa\u7684\u65f6\u5019\u518d\u505a\u4e00\u6b21\u5f02\u6216\uff08\u4e0d\u7528\u975e\u95e8\u4f53\u73b0\u4e86\u53ef\u91cd\u7f16\u7a0b\u7684\u601d\u60f3\uff09\uff0c\u4ee5\u4ea7\u751f\u65b0\u7684\u9879\uff0c\u6765\u5f25\u8865\u9879\u4e0d\u8db3\u7684\u95ee\u9898\u3002\u5f02\u6216\u95e8\u4f53\u73b0\u4e86\u53ef\u63a7\u6c42\u53cd\u3002</li> <li>\u4e0e\u9879\u8d44\u6e90\u6709\u9650\uff0c\u9700\u8981\u627e\u5230\u53ef\u91cd\u7528\u7684\u4e0e\u9879\u3002</li> </ul> </li> <li> <p>\u5bf9\u4e00\u4e2an\u8f93\u5165\uff0ck\u4e58\u79ef\u9879\uff0cm\u8f93\u51faPLA</p> <ul> <li>\u5728\u8f93\u5165\u548c\u4e0e\u95e8\u9635\u5217\u4e4b\u95f4\u6709\\(2n\\times k\\)\u4e2a\u53ef\u7f16\u7a0b\u8fde\u63a5\u70b9\uff0c\u4e0e\u95e8\u4e0e\u6216\u95e8\u4e4b\u95f4\u6709\\(k\\times m\\)\u4e2a\uff0c\u6216\u95e8\u4e0e\u5f02\u6216\u95e8\u4e4b\u95f4\u6709m\u4e2a</li> </ul> </li> </ol>"},{"location":"CLDF/CLDF5/#fpga","title":"FPGA","text":"<ol> <li>\u5305\u62ec\u53ef\u7f16\u7a0b\u903b\u8f91\u5757\u3001\u53ef\u7f16\u7a0b\u4e92\u8054\u548c\u53ef\u7f16\u7a0b\u8f93\u5165/\u8f93\u51fa\u5f15\u811a\u3002</li> <li>FPGA\u53ef\u4ee5\u914d\u7f6e\u7ec4\u5408\u903b\u8f91\u548c\u89e6\u53d1\u5668\uff0c\u5927\u591a\u4f7f\u7528SRAM\u8fdb\u884c\u914d\u7f6e</li> <li>\u53ef\u7f16\u7a0b\u903b\u8f91\u5757\u5305\u62ec\u7ec4\u5408\u548c\u65f6\u5e8f\u903b\u8f91\uff0c\u57fa\u4e8e\u67e5\u627e\u8868\uff08Look-Up List\uff09\uff0c\u4e00\u4e2a\u67e5\u627e\u8868\u662f\u4e00\u4e2a\\(2^k\\times1\\)\u5b58\u50a8\u5668</li> </ol>"},{"location":"CLDF/CLDF6/","title":"Chapter 6","text":""},{"location":"CLDF/CLDF6/#registers-register-transfers","title":"Registers &amp; Register Transfers","text":""},{"location":"CLDF/CLDF6/#register","title":"Register","text":""},{"location":"CLDF/CLDF6/#_1","title":"\u4fdd\u6301\u4fe1\u53f7\u5728\u591a\u4e2a\u65f6\u949f\u5468\u671f\u4e0d\u53d8","text":"<p>\u6dfb\u52a0Load\uff0cLoad\u4e3a0\u65f6\u65e0\u8bbaclock\u4e3a\u4f55\u503c\uff0c\u8f93\u51fa\u4e0d\u53d8\uff0cLoad\u4e3a1\u65f6\uff0c\u8f93\u51fa\u968fclock\u53d8\u5316</p> <ol> <li> <p>\u65b9\u5f0f\u4e00\uff1a\u76f4\u63a5\u52a0\u6216\u95e8</p> <p></p> <p>\u7136\u800c\uff0c\u5728\u95e8\u63a7\u65f6\u949f\u6280\u672f\u4e2d\uff0c\u7531\u4e8e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u903b\u8f91\u95e8\uff0c\u65f6\u949f\u8109\u51b2\u5230\u8fbe Control \u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u989d\u5916\u7684\u4f20\u64ad\u5ef6\u65f6\uff0c\u5373\u65f6\u949f\u504f\u79fb(clock skew)\u3002\u800c\u8fd9\u5fae\u5c0f\u7684\u5ef6\u65f6\u4f1a\u5bfc\u81f4\u5728\u6574\u4e2a\u540c\u6b65\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u540c\u7ec4\u4ef6\u5f97\u5230\u7684\u65f6\u949f\u8109\u51b2\u6709\u504f\u5dee\uff0c\u800c\u8fd9\u662f\u6211\u4eec\u6240\u4e0d\u5e0c\u671b\u770b\u5230\u7684\u3002\u6240\u4ee5\u5728\u5b9e\u9645\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u5e94\u5f53\u907f\u514d\u6216\u5c3d\u53ef\u80fd\u7f29\u5c0f\u65f6\u949f\u504f\u79fb\u3002</p> </li> <li> <p>\u53e6\u5916\u4e00\u4e2a\u505a\u6cd5\u662f\uff0c\u5728\u4e0d\u5e0c\u671b\u5b83\u4fee\u6539\u7684\u65f6\u5019\uff0c\u4e0d\u65ad\u5c06\u5b83\u7684\u8f93\u5165\u8f7d\u5165\uff0c\u4e5f\u5c31\u662f\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4e8c\u9009\u4e00\u591a\u8def\u590d\u7528\u5668\u5b9e\u73b0\u3002</p> <p></p> </li> </ol>"},{"location":"CLDF/CLDF6/#register-cell-design","title":"Register Cell Design","text":"<p>Assume that a register consists of identical cells.(\u6bcf\u4e2a\u4f4d\u6267\u884c\u76f8\u540c\u64cd\u4f5c)</p> <ul> <li>Design representative cell for the register</li> <li>Connect copies of the cell together to form the register</li> <li>Applying appropriate \"boundary conditions\" to cells that need to be different and contract if appropriate</li> </ul>"},{"location":"CLDF/CLDF6/#specifications","title":"Specifications","text":"<ul> <li>A register</li> <li>Data inputs to the register</li> <li>Control input combinations to the register   e.g. \u63a7\u5236\u8f93\u5165: Load, Shift, Add. \u6211\u4eec\u53ef\u4ee5\u7528\u4e09\u4e2a\u5f15\u811a\u5206\u522b\u8868\u793a\u63a7\u5236\u8f93\u5165(not encoded, one-hot code)\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e24\u4e2a\u5f15\u811a S0 S1 \u7684\u7ec4\u5408\u6765\u8868\u793a\u63a7\u5236\u8f93\u5165(encoded)</li> <li>A set of register functions (typically specified as register transfers) \u5373\u89c4\u5b9a\u63a7\u5236\u8f93\u5165\u7684\u51fd\u6570\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c</li> <li>A hold state specification(e.g. If all control inputs are 0, hold the current register state)</li> </ul>"},{"location":"CLDF/CLDF6/#register-transfer-operations","title":"Register Transfer Operations","text":"<p>The movement and processing of data stored in registers</p> <ul> <li>Three basic components:</li> <li>set of registers(\u6e90\u5bc4\u5b58\u5668\uff0c\u76ee\u6807\u5bc4\u5b58\u5668)</li> <li>operations</li> <li>control of operations \u76d1\u7763\u64cd\u4f5c\u5e8f\u5217\u7684\u63a7\u5236</li> <li>Elementary Operations -- load, count, shift, add, bitwise \"OR\", etc.   Elementary operations called micro-operations</li> </ul> <p>\u5176\u4e2d\uff0c\u6700\u57fa\u7840\u7684\u90a3\u90e8\u5206\u64cd\u4f5c\u88ab\u79f0\u4e3a\u5fae\u64cd\u4f5c(micro-operation)\uff0c\u5b83\u4eec\u662f\u5b9e\u73b0\u590d\u6742\u64cd\u4f5c\u7684\u57fa\u7840\uff0c\u4f8b\u5982\u5c06 R1 \u7684\u6570\u636e\u8f7d\u5165 R2\uff0c\u5c06 R1 \u548c R2 \u76f8\u52a0\uff0c\u6216\u662f\u81ea\u589e R1 \u7b49\u3002\u5b83\u4eec\u901a\u5e38\u4ee5\u6bd4\u7279\u5411\u91cf\u4e3a\u8f7d\u4f53\u5e76\u884c\u5b9e\u73b0\u7684\u3002</p>"},{"location":"CLDF/CLDF6/#register-notation","title":"Register Notation","text":"<p>RTL:\u5bc4\u5b58\u5668\u4f20\u8f93\u8bed\u8a00(Register Transfer Language)</p> <ol> <li> <p>\\(sl,sr\\)\u4f8b\u5b50\uff1a R2&lt;-sl R1 \uff0cR1\u5de6\u79fb\u4e00\u4f4d\u4f20\u7ed9R2</p> </li> <li> <p>example:\u5982\u679c K1=1 \u90a3\u4e48\u5c06 R1 \u7684\u4fe1\u53f7\u4f20\u7ed9 R2, \u6211\u4eec\u53ef\u4ee5\u5199\u4e3a K1:(R2\u2190R1), \u5176\u4e2d R1 \u662f\u4e00\u4e2a\u63a7\u5236\u53d8\u91cf\uff0c\u8868\u660e\u6761\u4ef6\u6267\u884c\u7684\u53d1\u751f\u662f\u5426\u53d1\u751f\u3002K1\u63a7\u5236\u7684\u662fR2\u662f\u5426\u63a5\u6536R1\u7684\u4fe1\u53f7\uff0c\u800c\u975eR1\u662f\u5426\u53d1\u9001</p> </li> </ol>"},{"location":"CLDF/CLDF6/#register-transfer-structures","title":"Register Transfer Structures","text":""},{"location":"CLDF/CLDF6/#1-multiplexer-based-transfers","title":"1. Multiplexer-Based Transfers\uff1a\u57fa\u4e8e\u591a\u8def\u590d\u7528\u5668\u7684\u4f20\u8f93","text":"<p>\\(K1:R0\\leftarrow R1,K2\\overline{K1}:R0\\leftarrow R2 \\(,\u4e5f\u5c31\u662f\\)K1+K2\\)\u4e3a\u771f\u65f6R0\u4f1a\u88ab\u66f4\u65b0</p> <p>\u901a\u8fc7\u4e00\u7cfb\u5217one-hot\u7f16\u7801\u51b3\u5b9a\u9009\u62e9\u54ea\u4e2a\uff0c\u5176\u4e2d <code>MUX</code> \u7684 k\u223c(n\u22121) \u5b9e\u73b0\u4e86\u8f6c\u79fb\u64cd\u4f5c\u3002</p>"},{"location":"CLDF/CLDF6/#2-multiplexer-bus","title":"2. Multiplexer Bus","text":""},{"location":"CLDF/CLDF6/#_2","title":"\u57fa\u4e8e\u4e13\u7528\u591a\u8def\u590d\u7528\u5668\u7684\u4f20\u8f93","text":""},{"location":"CLDF/CLDF6/#_3","title":"\u57fa\u4e8e\u5171\u7528\u591a\u8def\u590d\u7528\u5668\u7684\u4f20\u8f93","text":"<p>\u200b   \u901a\u8fc7\u603b\u7ebfbus\u5b9e\u73b0n\u90091\u591a\u8def\u590d\u7528\u5668\u5b8c\u6210\u5bc4\u5b58\u5668\u4e4b\u95f4\u503c\u7684\u4ea4\u6362\u3002\u95e8\u8f93\u5165\u6210\u672c9/bit\uff0c\u591a\u8def\u590d\u7528\u56688\u4e2a\u8f93\u5165+1\u4e2a\u8f93\u51fa</p>"},{"location":"CLDF/CLDF6/#3-three-state-bus","title":"3. Three-State Bus \u4e09\u6001\u603b\u7ebf","text":"<p>The 3-input MUX can be replaced by a 3-state node (bus) and 3-state buffers. Cost is further reduced, but transfers are limited.</p> <p>\u53ea\u6709\u4e00\u4e2a\u4e09\u6001\u95e8\u88ab\u4f7f\u80fd\u65f6\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u4e09\u6001\u95e8\u4e0d\u5904\u4e8e\u9ad8\u963b\u6001\u3002\u7535\u8def\u4e2d\u6240\u6709\u90fd\u662f\u8be5\u503c\u3002</p> <p>\u51cf\u5c11\u63a5\u7ebf\uff0c\u964d\u4f4e\u5e03\u7ebf\u96be\u5ea6\u3002</p> <p>\u5c06\u5bc4\u5b58\u5668\u548c\u4e09\u6001\u95e8\u5c01\u88c5\u5728\u4e00\u8d77\u8003\u8651\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u5916\u90e8\u5f15\u811a(n bits), \u4f46\u591a\u8def\u590d\u7528\u5668\u7684\u65b9\u6cd5\u9700\u8981\u4e24\u6839\u4f4d\u5bbd\u662f n \u7684\u5f15\u811a\uff08\u56e0\u4e3a\u4e09\u6001\u95e8\u7684\u5916\u90e8\u5f15\u811a\u662f\u53ef\u4ee5\u53cc\u5411\u4f20\u8f93\u6570\u636e\u7684\uff09</p> <p>\u95e8\u8f93\u5165\u6210\u672c\uff1a9\uff08\\(3\\times3\\)\u4e2a\u4e09\u6001\u95e8\uff09</p>"},{"location":"CLDF/CLDF6/#shift-registers","title":"Shift Registers","text":"<p>\u4f7f\u7528\u89e6\u53d1\u5668\u800c\u4e0d\u80fd\u4f7f\u7528\u9501\u5b58\u5668\uff08\u9664\u6781\u5c11\u7279\u4f8b\uff09</p> <ol> <li>\u53f3\u79fb</li> </ol> <ol> <li>\u53f3\u79fb+\u5e76\u884c\u8f93\u5165 Parallel Load Shift Registers<ul> <li>shift=0 \u5e76\u884c\u8f93\u5165</li> <li>shift=1 \u79fb\u4f4d</li> </ul> </li> </ol> <ul> <li>Shift\u4e3a1\uff0c\u79fb\u4f4d</li> <li>Shift\u4e3a0\uff0cLoad0\uff0c\u4fdd\u6301</li> <li>Shift\u4e3a0\uff0cLoad1\uff0c\u5e76\u884c\u52a0\u8f7d</li> </ul>"},{"location":"CLDF/CLDF6/#_4","title":"\u53cc\u5411\u4f4d\u79fb\u5bc4\u5b58\u5668\uff08\u901a\u8fc7\u52a0\u5165\u4e00\u4e2a\u591a\u8def\u9009\u62e9\u5668\u5b9e\u73b0\uff09","text":"<p>\u5bf9\\(S_1S_0\\),00\u4fdd\u6301\uff0c01\u5de6\u79fb\uff0c10\u53f3\u79fb\uff0c11\u5e76\u884c\u8f93\u5165</p> <p>\u5176\u672c\u8d28\u4e0a\u5c31\u662f\u6dfb\u52a0\u4e86\u4e00\u4e2a MUX \u6765\u9009\u62e9\u4e0b\u4e00\u4e2a\u65f6\u949f\u662f\u7ee7\u627f \\((i+1)\u3001(i-1)\u3001D_i\\)\u8fd8\u662f\\(Q\\)</p>"},{"location":"CLDF/CLDF6/#counters","title":"Counters","text":""},{"location":"CLDF/CLDF6/#ripple-counter","title":"Ripple Counter","text":"<ol> <li> <p>B\u9891\u7387\u662fA\u4e00\u534a\u3002A\u8f93\u51fa\u53d6\u53cd\u4f5c\u4e3aB\u7684\u65f6\u949f\u4fe1\u53f7\u3002 \u53ef\u4ee5\u7528\u505a\u65f6\u949f\u5206\u9891\u3002</p> </li> <li> <p>\u4e0a\u56fe\u4e2d\uff0c\u4e0b\u4e00\u4e2a FF \u7684\u65f6\u949f\u6765\u81ea\u4e8e\u4e0a\u4e00\u4e2a FF \u7684\u8f93\u51fa\u53d6\u53cd\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684 FF \u6765\u8bf4\uff0c\u4e0b\u4e00\u4e2a FF \u4f1a\u5728\u4e0a\u4e00\u4e2a FF \u7684\u8f93\u51fa\u4ece 1 \u5230 0 \u65f6\u81ea\u53cd\uff0c\u6240\u4ee5\u662f\u6b63\u5411\u8ba1\u65f6(Upward Counting)\uff1b</p> </li> </ol> <p>\u53cd\u4e4b\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a FF \u7684\u65f6\u949f\u6765\u81ea\u4e8e\u4e0a\u4e00\u4e2a FF \u7684\u76f4\u63a5\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e0a\u5347\u6cbf\u89e6\u53d1\u7684 FF \u6765\u8bf4\uff0c\u4e0b\u4e00\u4e2a FF \u4f1a\u5728\u4e0a\u4e00\u4e2a FF \u7684\u8f93\u51fa\u4ece 0 \u5230 1 \u65f6\u81ea\u53cd\uff0c\u6240\u4ee5\u662f\u9006\u5411\u8f93\u51fa(Downward Counting)\uff1b 3. \u7f3a\u70b9\uff1a\u6bcf\u4e00\u4e2a\u65f6\u949f\u4fe1\u53f7\u4f20\u9012\u90fd\u6709\u5ef6\u65f6\uff0c\u540c\u65f6\u4e0d\u80fd\u4f5c\u4e3a\u540c\u6b65\u8ba1\u6570\u5668\u3002\u7b80\u5355\u4f46\u4e0d\u5b89\u5168\u3002</p> <p>\u7406\u8bba\u4e0a\uff0c111\u4e4b\u540e\u5e94\u8be5\u53d8\u6210000\uff0c\u4f46\u5b9e\u9645\u4e0a\uff1a\\(111-&gt;110-&gt;100-&gt;000\\)</p> <p>\u6b64\u5916\u5bf9\u4e8en bits, \u6700\u574f\u65f6\u95f4\u5ef6\u8fdf\u662f \\(n\\cdot t_{PHL}\\) \u901f\u5ea6\u4f1a\u975e\u5e38\u6162.</p> <ol> <li>\u4f7f\u7528\uff1a\u8d8a\u9ad8\u7ea7\u7684\u89e6\u53d1\u5668\u8d8a\u4e0d\u5bb9\u6613\u88ab\u89e6\u53d1\uff0c\u529f\u8017\u4f4e\uff0c\u53ef\u7528\u4e8e\u8109\u51b2\u8ba1\u6570\u7b49\u573a\u666f\u3002</li> </ol>"},{"location":"CLDF/CLDF6/#synchronous-counters","title":"Synchronous Counters \u540c\u6b65\u8ba1\u6570\u5668","text":"<p>\u6bcf\u6b21\u901a\u8fc7\u81ea\u589e\u5668+1</p> <p>\u89c2\u5bdf\u53d1\u73b0\uff0c\u4f4d\u6570\u589e\u52a0\u65f6\u4e0d\u5229\u4e8e\u5316\u7b80\uff0c\u4f46\\(Q_n\\)\u53d6\u53cd\u5f53\u4e14\u4ec5\u5f530~n-1\u5747\u4e3a1\uff0c\u56e0\u6b64\u53ef\u4ee5\u91c7\u53d6\u4ee5\u4e0b\u4e0e\u95e8\u94fe\u4f5c\u4e3a\u63a7\u5236\u4fe1\u53f7</p> <p>\u4f7f\u80fd\u4e3a0\u76f8\u5f53\u4e8e\u4fdd\u6301\u3002 CO\u8f93\u51fa\u8fdb\u4f4d\u7528\u4e8e\u4e0b\u4e00\u90e8\u5206\u7535\u8def</p> <p>\u95ee\u9898\uff1a\u540c\u6837\u5b58\u5728\u5ef6\u8fdf\u3002 </p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1alook ahead \u7528\u4e00\u4e2a\u4e0e\u95e8\u628a\u6240\u6709\u4f4e\u4f4d\u63a5\u8d77\u6765</p> <p>symbol\uff1a</p>"},{"location":"CLDF/CLDF6/#other-counters","title":"Other Counters","text":"<ol> <li>Down Counter</li> <li>Up-Down Counter</li> <li>Parallel Load Counter</li> <li>Divide-by-n(Module n) Counter\uff1a\u5341\u8fdb\u5236\u6a219\uff0c\u65f6\u949f\u6a215</li> </ol>"},{"location":"CLDF/CLDF6/#counter-with-parallel-load","title":"Counter with Parallel Load","text":"<p>\u5b9e\u73b0\u5e76\u884c\u8f93\u5165</p>"},{"location":"CLDF/CLDF6/#design-example-synchronous-bcd","title":"Design Example: Synchronous BCD","text":"<ol> <li>\u72b6\u6001\u8868\uff1a</li> </ol> <ol> <li>\u5361\u8bfa\u56fe\u5316\u7b80</li> </ol> <ol> <li>\u9a8c\u8bc1\u65e0\u7528\u72b6\u6001\u60c5\u51b5\uff0c\u53d1\u73b0\u4e0d\u4f1a\u6b7b\u9501</li> </ol>"},{"location":"CLDF/CLDF6/#counting-modulo-n","title":"Counting Modulo N","text":"<ol> <li> <p>\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u57fa\u7840\u4e0a\uff0c\u91c7\u53d6\u540c\u6b65/\u5f02\u6b65\u6e05\u96f6</p> <ul> <li>\u5f02\u6b65\uff0c\u901a\u8fc7clear\uff08\u5f02\u6b65\u590d\u4f4d\u811a\uff09\uff0c\u8ba1\u6570\u8fbe\u5230N\u5b9e\u65f6\u6e05\u96f6\u5373\u53ef</li> </ul> <p></p> <ul> <li>\u540c\u6b65\uff0cN-1\u65f6reset\u4e3a1\uff0c\u5728\u4e0b\u4e00\u4e2a\u4e0a\u5347\u6cbf\u6e05\u96f6 <code>better choice</code></li> </ul> <p></p> </li> <li> <p>\u591a\u4f4d\u5bc4\u5b58\u5668\uff0c\u5206\u5f00\u8bbe\u8ba1\uff0c\u5982\u8bbe\u8ba1\u65f6\u95f4\uff0c\u4f4e\u4f4d\u4e3a\u6a21 10 \u8ba1\u6570\u5668\uff0c\u9ad8\u4f4d\u4e3a\u6a21 6 \u8ba1\u65f6\u5668\uff0c\u4f4e\u4f4d\u7684 <code>Carry Output</code> \u65e2\u4f5c\u4e3a\u4f4e\u4f4d\u7684\u540c\u6b65\u6e05\u96f6\u4fe1\u53f7\uff0c\u53c8\u662f\u9ad8\u4f4d\u7684 <code>Enable</code> \u4fe1\u53f7.</p> </li> </ol>"},{"location":"CLDF/CLDF6/#serial-operations","title":"Serial Operations","text":"<p>\u4e32\u884c\uff1a\u5bc4\u5b58\u5668\u4e00\u6b21\u53ea\u63a5\u53d7\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5982\u679c\u4f20\u8f93 n \u4f4d\u9700\u8981 n \u4e2a\u65f6\u949f\u5468\u671f\u3002</p> <p>\u9700\u8981\u7684\u5f15\u7ebf\u6570\u91cf\u5c11\uff0c\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\u53ea\u9700\u8981\u4e00\u6761\u7ebf\u548c\u4e00\u6761\u5730\u7ebf\u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u4e14\u56e0\u4e3a\u5f15\u7ebf\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5176\u65f6\u949f\u9891\u7387\u8fbe\u5230\u975e\u5e38\u9ad8</p> <p>\u5f53\u4eca\u9ad8\u901f\u4f20\u8f93\u5982USB\uff0c\u4ee5\u592a\u7f51\u7ebf\u7b49\u90fd\u4f7f\u7528\u4e32\u884c</p> <p>\u4e32\u884c\u52a0\u6cd5\u5668\uff1a\u4ec5\u4f7f\u7528\u4e00\u4f4d\u5168\u52a0\u5668\u4e0e\u4e00\u4e2a\u7528\u4e8e\u8fdb\u4f4d\u7684\u89e6\u53d1\u5668\u3002The result is stored in the A register and the final carry in the flip-flop</p> <p>Serial addition is a low cost way to add large numbers of operands, since a \u201ctree\u201d of full adder cells can be made to any depth, and each new level doubles the number of operands.</p> <p>Other operations can be performed serially as well, such as parity generation/checking or more complex error-check codes.</p> <p>Shifting a binary number left is equivalent to multiplying by 2.  Shifting a binary number right is equivalent to dividing by 2.</p>"},{"location":"CLDF/CLDF7/","title":"Chapter 7  Memory Basics","text":""},{"location":"CLDF/CLDF7/#memory-definition","title":"Memory Definition","text":"<ol> <li>\u5185\u5b58\uff1a\u5b58\u50a8\u5355\u5143\u7684\u96c6\u5408\uff0c\u4ee5\u53ca\u5411\u5b83\u4eec\u4f20\u8f93\u4fe1\u606f\u548c\u4ece\u5b83\u4eec\u4f20\u8f93\u4fe1\u606f\u7684\u5fc5\u8981\u7535\u8def</li> <li>\u5185\u5b58\u7ec4\u7ec7\uff1a\u5185\u5b58\u7684\u57fa\u672c\u67b6\u6784\u7ed3\u6784\uff0c\u4ee5\u8bbf\u95ee\u6570\u636e\u7684\u65b9\u5f0f\u8868\u793a</li> <li>\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668 \uff08RAM\uff09\uff1a \u4e00\u79cd\u7ec4\u7ec7\u8d77\u6765\u7684\u5b58\u50a8\u5668\uff0c\u53ef\u4ee5\u5728\u4e0d\u4f9d\u8d56\u4e8e\u6240\u9009\u7279\u5b9a\u5355\u5143\u7684\u65f6\u95f4\u5185\u5c06\u6570\u636e\u4f20\u8f93\u5230\u4efb\u4f55\u5355\u5143\uff08\u6216\u5355\u5143\u96c6\u5408\uff09\u6216\u4ece\u4efb\u4f55\u5355\u5143\uff08\u6216\u5355\u5143\u96c6\u5408\uff09\u4f20\u8f93\u6570\u636e\u3002 </li> <li> <p>\u5185\u5b58\u5730\u5740\uff1a\u6807\u8bc6\u7279\u5b9a\u5185\u5b58\u5143\u7d20\uff08\u6216\u5143\u7d20\u96c6\u5408\uff09\u7684\u4f4d\u5411\u91cf\u3002</p> </li> <li> <p>typical data elements</p> <ol> <li>bit: a single binary digit</li> <li>byte: eight bits accessed together 8bit\u4e00\u5b57\u8282</li> <li>word: \u4e8c\u8fdb\u5236bit\u96c6\u5408\uff0c\u5927\u5c0f\u901a\u5e38\u662f2\u7684\u5e42\u6b21\u4e2abyte\uff0c\u4e0d\u540c\u8ba1\u7b97\u673a\u5b57\u957f\u53ef\u80fd\u4e0d\u540c</li> </ol> </li> <li>memory data\uff1a \u8981\u5b58\u50a8\u5230\u5185\u5b58\u6216\u4ece\u5185\u5b58\u8bbf\u95ee\u7684\u5185\u5bb9</li> <li>\u5185\u5b58\u64cd\u4f5c\uff1a\u5982\u8bfb\u53d6\u5199\u5165\u7b49\u7b49</li> </ol>"},{"location":"CLDF/CLDF7/#memory-organization","title":"Memory Organization","text":"<p>Organized as an indexed array of words. Value of the index for each word is the memory address.</p>"},{"location":"CLDF/CLDF7/#memory-block-diagram","title":"Memory Block Diagram","text":"<ul> <li>\\(k\\) address lines decoded to address \\(2^k\\) words of memory</li> <li>each word is \\(n\\) bits</li> <li>Read and Write are single control lines by 1 bit.</li> </ul>"},{"location":"CLDF/CLDF7/#memory-organization-example","title":"Memory Organization Example","text":"<p>\u5730\u57400-7\uff0c\u6bcf\u4e2a\u5730\u5740\u5b588\u4f4d\u6570\u636e</p>"},{"location":"CLDF/CLDF7/#memory-operation-timing","title":"Memory Operation Timing","text":"<p>\u901a\u5e38\u662f\u5f02\u6b65\u7684</p> <ol> <li>\u8bfb</li> </ol> <ol> <li> <p>\u5199</p> <p></p> <ul> <li>Critical times measured with respect to edges of write pulse (1-0-1):</li> <li>Address must be established at least a specified time before 1-0 and held for at least a specified time after 0-1 to avoid disturbing stored contents of other addresses \u5730\u5740\u5e94\u8be5\u5728\u8bfb\u5199\u5f00\u59cb\u524d\u548c\u7ed3\u675f\u540e\u90fd\u4fdd\u6301\u4e00\u5b9a\u65f6\u95f4\u7684\u7a33\u5b9a</li> <li>Data must be established at least a specified time before 0-1 and held for at least a specified time after 0-1 to write correctly \u6570\u636e\u540c\u7406</li> <li>\u8bfb\u8bbf\u95ee\u65f6\u95f4\u548c\u5199\u5468\u671f\u65f6\u95f4\u5fc5\u987b\u8981\u4e3a\u65f6\u949f\u5468\u671f\u7684\u56fa\u5b9a\u500d\u6570\uff0c\u8fd9\u662f\u56e0\u4e3a\u8bfb\u5199\u64cd\u4f5c\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u662f\u901a\u8fc7\u662f\u65f6\u949f\u8fb9\u6cbf\u63a7\u5236\u7684</li> <li>\u5728\u8bfb\u64cd\u4f5c\u540e\uff0c\u524d65ns\u4e3a\u8bfb\u8bbf\u95ee\u65f6\u95f4\uff0c\u6b64\u4e4b\u540e\u6570\u636e\u624d\u5b8c\u6574\u6709\u6548</li> </ul> </li> </ol>"},{"location":"CLDF/CLDF7/#ram","title":"RAM","text":"<ol> <li> <p>type of random access memory\uff1a </p> <ol> <li>static,SRAM\uff1a\u901f\u5ea6\u5feb\uff0c\u6210\u672c\u9ad8\uff0cinformation stored in latches\uff0c\u65ad\u7535\u4e22\u5931\u4fe1\u606f</li> <li>dynamic,DRAM\uff1a\u901a\u8fc7\u7535\u5bb9\u5b58\u50a8\u7535\u8377\u6807\u5fd70\u548c1\uff0c\u7f3a\u70b9\u662f\u4f1a\u6f0f\u7535\uff0c\u6570\u636e\u4f1a\u4e22\u5931\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u65f6\u5237\u65b0\uff0c\u4f18\u70b9\u662f\u6240\u9700\u5143\u4ef6\u5c11\uff08\u4e00\u4f4d\u53ea\u9700\u4e00\u4e2a\u6676\u4f53\u7ba1\u52a0\u4e00\u4e2a\u7535\u5bb9\uff09\uff0c\u5bc6\u5ea6\u9ad8\uff0c\u6210\u672c\u4f4e</li> </ol> </li> <li> <p>dependence on power supply</p> <ol> <li>volatile\uff1a\u6389\u7535\u6613\u5931\uff0close stored information when power turned off\uff0cRAM\u90fd\u662f</li> <li>non-volatile\uff1a\u7814\u53d1ing\uff0c\u78c1\u76d8</li> </ol> </li> </ol>"},{"location":"CLDF/CLDF7/#static-ram","title":"Static RAM \u5f02\u6b65\u5668\u4ef6","text":"<ol> <li> <p>Storage Cell</p> <p>    - select\u4e3a0\uff0c\u8f93\u5165\u88abdisable\u51680\uff0cSR\u4fdd\u6301\u72b6\u6001\uff0c\u8f93\u51fa\u4e5f\u88abdisable\uff0c\u5bf9\u8f93\u51fa\u7ed3\u679c\u4e0d\u9020\u6210\u5f71\u54cd    - select\u4e3a1\uff0c\u6709\u6761\u4ef6\u4fee\u6539SR\u4e2d\u503c\u5e76\u8f93\u51fa</p> </li> <li> <p>Bit Slice\u4f4d\u7247: Represents all circuitry that is required for \\(2^n\\) 1-bit words</p> </li> </ol> <p>\u5185\u5b58\u64cd\u4f5c\u57fa\u672c\u8981\u6c42\uff1a\u6bcf\u6b21\u53ea\u5bf9\u4e00\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64\u6bcf\u6b21word select\u4f7f\u80fd\u4e00\u4f4d\uff0c\u7136\u540e\u5c06\u6700\u540e\u5f97\u5230\u7ed3\u679c\u53d6\u6216</p> <ol> <li> <p>\\(2^n\\)-Word \\(\\times\\) 1-Bit RAM IC:</p> <ul> <li>Decoder: decodes the n address lines to \\(2^n\\) word select lines</li> <li>A 3-state buffer on the data output permits RAM ICs to be combined into a RAM with \\(c \\times 2^n\\) words</li> </ul> </li> <li> <p>Coincident Selection:\u884c\u5217\u8bd1\u7801</p> <ul> <li>Word select becomes Row select</li> <li> <p>Bit select becomes Column select</p> <p></p> <p>\u59821001\uff0c10\u4f7f\u80fdrow 2\uff0c01\u4f7f\u80fdcolumn 1</p> </li> <li> <p>\\(8\\times2\\)RAM,\u4e00\u6b21\u64cd\u4f5c\u4e24\u4f4d</p> <p></p> </li> </ul> </li> <li> <p>Making Larger Memories\uff1a\u628a\\(4\\times n\\)\u53d8\u6210\\(16\\times n\\)</p> <ul> <li>\u81ea\u6269\u5c55\uff0c\u5373\u8f93\u51fa\u7684\u5b57\u5bbd\u6ca1\u53d8\u3002\u9ad8\u4f4d\u9009\u62e9RAM\u82af\u7247\uff0c\u5176\u4f59\u4e09\u6001\u95e8\u8f93\u51fa\u4e3a\u9ad8\u963b\u6001</li> </ul> <p></p> </li> <li> <p>Making Wider Memories\uff1a\u589e\u52a0\u4f4d\u5bbd\uff0c\u6bcf\u5757 RAM \u82af\u7247\u5c31\u4ee3\u8868\u6700\u540e\u8f93\u51fa\u7684\u67d0\u4e00\u4f4d\uff0c\u5c06\u5730\u5740\u7ebf\u548c\u63a7\u5236\u7ebf\u5e76\u884c\u8fde\u63a5\u3002</p> <p></p> </li> </ol>"},{"location":"CLDF/CLDF7/#dynamic-ram","title":"Dynamic RAM \u540c\u6b65","text":"<ul> <li>Read:\u5927\u5bb9\u5668\u521d\u59cb\u7f6e\u4e3a\u5df2\u77e5\u4e2d\u95f4\u6c34\u4f4d\u3002\u82e5\u5c0f\u5bb9\u56681\uff0c\u5927\u5bb9\u5668\u7531\u4e8e\u6c34\u4f4d\u6bd4\u5c0f\u5bb9\u5668\u4f4e\uff0c\u4f1a\u5fae\u5fae\u4e0a\u5347\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u8bfb\u4e861\uff1b\u82e5\u5c0f\u5bb9\u56680\uff0c\u5927\u5bb9\u5668\u6c34\u4f4d\u6bd4\u5c0f\u5bb9\u5668\u9ad8\uff0c\u4f1a\u5fae\u5fae\u4e0b\u964d\uff0c\u8ba4\u4e3a\u662f\u8bfb\u4e860</li> <li>\u5728\u8fd9\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u5916\u90e8\u5bb9\u5668\u53d8\u5316\u4e0d\u4f1a\u5f88\u5927\uff0c\u4f46\u8db3\u4ee5\u68c0\u6d4b\u5230\uff0c\u4f46\u662f\u5c0f\u5bb9\u5668\u4e2d\u539f\u672c\u5b58\u50a8\u7684\u6570\u636e\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u8981\u8fdb\u884c\u6062\u590d</li> <li>\u6062\u590d1\uff1a\u6c34\u6cf5\u5c06\u5927\u5bb9\u5668\u6ce8\u6ee1\uff0c\u4e4b\u540e\u901a\u8fc7\u9600\u95e8</li> <li>\u6062\u590d0\uff1a\u6c34\u6cf5\u6392\u7a7a\u5927\u5bb9\u5668</li> <li>\u5bf9\u5b9e\u9645\u5b58\u50a8\u5355\u5143\uff0c\u8fd8\u6709\u5176\u4ed6\u7535\u8377\u6d41\u52a8\u8def\u5f84\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5b58\u50a8\u5bb9\u5668\u4e0a\u7684\u5c0f\u5b54(leak)\uff0c\u4f7f\u5f97\u5bb9\u5668\u6c34\u4f4d\u4e0b\u964d\u5230\u4e00\u5b9a\u6c34\u5e73\uff0c\u4f7f\u5f97\u5373\u4f7f\u5b58\u50a8\u4e861\uff0c\u6253\u5f00\u9600\u95e8\u540e\u5927\u5bb9\u5668\u6c34\u4f4d\u4e0d\u4ec5\u6ca1\u6709\u53ef\u89c2\u6d4b\u53d8\u5316\uff0c\u751a\u81f3\u8fd8\u53ef\u80fd\u4e0b\u964d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5468\u671f\u6027\u586b\u6ee1\u5b58\u50a8\u503c\u4e3a1\u7684\u5c0f\u5bb9\u5668\uff0c\u8be5\u64cd\u4f5c\u79f0\u4e3a\u5b58\u50a8\u5355\u5143\u7684\u5237\u65b0\u3002</li> </ul> <p>\u5199\u6570\u636e\u65f6\u76f4\u63a5\u5145\u653e\u7535\u5373\u53ef\uff1b\u8bfb\u53d6\u65f6\uff0c\u9700\u8981\u6709\u7535\u8def\u5224\u65ad\u7535\u538b\u9ad8\u4f4e\uff0c\u8fd9\u65f6\u4f1a\u6d88\u8017\u7535\u8377,\u8981\u5c06\u7834\u574f\u6027\u8bfb\u8f6c\u4e3a\u975e\u7834\u574f\u6027\uff08\u5c06\u503c\u5199\u56de\u53bb\uff09</p> <ol> <li>Bit Slice:\u68c0\u6d4b\u653e\u5927\u5668\u7528\u4e8e\u5c06 C \u4e0a\u7684\u5fae\u5c0f\u7535\u538b\u53d8\u5316\u66f4\u6539\u4e3a H \u6216 L\uff0c\u8fde\u63a5B\u3001C\u548c\u68c0\u6d4b\u653e\u5927\u5668\u8f93\u51fa\uff0c\u4f7f\u7834\u574f\u6027\u8bfb\u53d6\u8f6c\u6362\u4e3a\u975e\u7834\u574f\u6027\u8bfb\u53d6</li> </ol> <ol> <li>\u9700\u8981\u505a\u5b9a\u65f6\u5237\u65b0\uff08\u7535\u5bb9\u4f1a\u81ea\u5df1\u653e\u7535\uff09 - Refresh Controller and Refresh Counter</li> <li>\u5206\u522b\u8f93\u5165\u884c\u5730\u5740\u3001\u5217\u5730\u5740\uff08\u5b9e\u9645\u4e0a\u662f\u4e00\u7ec4\u5f15\u811a\uff0c\u53ea\u662f\u88ab DRAM \u5206\u5f00\u8f93\u5165\uff09\uff0c\u5bf9\u5e94 \\(\\overline{RAS},\\overline{CAS}\\)\uff08\u63a7\u5236\u5f15\u811a\uff0c\u544a\u8bc9\u82af\u7247\u73b0\u5728\u8f93\u5165\u7684\u662f\u884c/\u5217\u5730\u5740\uff09</li> </ol> <ol> <li>read\u65f6\u5e8f\uff1a\u884c\u5730\u5740\u5bc4\u5b58\u5668\u8bfb\u5165\uff0c\u5217\u5730\u5740\u8ba1\u6570\u5668\u8bfb\u5165\uff0c\u5730\u5740\u5206\u4e24\u6b21\u8f93\u5165\u3002\u6240\u9009\u884c\u6240\u6709\u4f4d\u90fd\u88ab\u91cd\u65b0\u5b58\u50a8\u4e86\u4e00\u904d</li> </ol> <ol> <li>write\uff1a\u5728\u5199\u64cd\u4f5c\uff0c\u6240\u9009\u884c\u5176\u4ed6\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u5355\u5143\u5c06\u539f\u6765\u5b58\u50a8\u503c\u53c8\u5b58\u50a8\u4e86\u4e00\u6b21\uff1bread\u53d80\u540e\uff0c\u6570\u636e\u5728\u5217\u5730\u5740\u9009\u62e9\u65f6\u95f4\u76f8\u540c\u7684\u65f6\u95f4\u95f4\u9694\u5185\u6709\u6548</li> </ol> <ol> <li> <p>types</p> <ul> <li> <p>Synchronous DRAM (SDRAM) \u968f\u7cfb\u7edf\u65f6\u949f</p> <ul> <li>\u7528\u4e8e\u5bfb\u5740\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u8981\u4f20\u8f93\u7684\u5185\u90e8\u6570\u636e</li> <li>\u4e00\u6b21\u53ef\u4ee5\u8bfb\u51fa\u591a\u4e2a\u6570\u636e beginning with the column address counts up to column address + burst size \u2013 1</li> <li>burst size=4 \u6781\u901f\u8bfb\u957f\u5ea6\uff1a\u8f93\u51fa\u5b57\u8282\u7684\u6570\u91cf</li> </ul> <p></p> <ul> <li>\u8ba1\u7b97\u4f8b\u5b50</li> </ul> <p></p> </li> <li> <p>Double Data Rate SDRAM (DDR SDRAM) \u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u90fd\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u63d0\u5347\u4e00\u500d\u541e\u5410\u91cf</p> </li> <li> <p>RAMBUS\u00ae DRAM (RDRAM)</p> </li> </ul> </li> <li> <p>DRAM\u8bfb\u53d6\u8017\u65f6\u957f</p> </li> <li> <p>\u7531\u4e8e\u5217\u5730\u5740\u6bcf\u4e2a\u5468\u671f\u9700\u8981\u52a01\uff0c\u56e0\u6b64\u5217\u5730\u5740\u4f7f\u7528\u8ba1\u6570\u5668\u8bbf\u95ee\uff0c\u4e3a\u4f20\u8f93\u63d0\u4f9b\u8fde\u7eed\u7684\u5217\u5730\u5740</p> </li> </ol>"},{"location":"CV/","title":"Introduction to Computer Vision","text":"<p>Abstract</p> <ul> <li>2024fall</li> <li>Teacher: \u5468\u6653\u5dcd</li> </ul>"},{"location":"CV/cv1/","title":"Lec.01: Linear Algebra","text":"<ol> <li> <p>Affine Transformations</p> <ul> <li>Affine map = linear map + translation</li> </ul> <p>$$   \\begin{pmatrix}x'\\newline y'\\end{pmatrix} = \\begin{pmatrix}a&amp;b\\newline c&amp;d\\end{pmatrix}\\cdot\\begin{pmatrix}x\\newline y\\end{pmatrix}+\\begin{pmatrix}t_x\\newline t_y\\end{pmatrix}   $$</p> <ul> <li>Using homogenous coordinates</li> </ul> <p>$$   \\begin{pmatrix}x'\\newline y'\\newline 1\\end{pmatrix} = \\begin{pmatrix}a&amp;b&amp;t_x\\newline c&amp;d&amp;t_y\\newline 0&amp;0&amp;1\\end{pmatrix}\\cdot\\begin{pmatrix}x\\newline y\\newline 1\\end{pmatrix}   $$</p> </li> </ol>"},{"location":"CV/cv10/","title":"Lec.10: Recognition","text":""},{"location":"CV/cv10/#semantic-segmentation","title":"Semantic Segmentation","text":"<ol> <li> <p>sliding window: \u6548\u7387\u4f4e\uff0c\u4f5c\u7528\u6709\u9650\uff0c\u611f\u53d7\u91ce\u5c0f</p> </li> <li> <p>\u4e00\u822c\u4f7f\u7528\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc</p> <ul> <li>loss function: per-pixel cross-entropy<ul> <li>But convolution on high resolution is expensive</li> </ul> </li> </ul> <p></p> <ul> <li> <p>\u63d0\u9ad8\u6548\u7387\uff1a\u4f7f\u7528unet</p> <p></p> <ul> <li> <p>\u5347\u7ef4\u4f7f\u7528unpooling\uff1a\u53ef\u4ee5\u4f7f\u7528bed of nails(\u65b0\u589e\u7684\u4f4d\u7f6e\u76f4\u63a5\u53d60)\uff0cnearest neighbor(\u548c\u6700\u8fd1\u7684\u4e00\u81f4)\uff0c\u53cc\u7ebf\u6027\u63d2\u503c\uff0c\u53cc\u4e09\u6b21\u63d2\u503c</p> </li> <li> <p>skip connection\uff1a\u5728upsampling\u4e2d\u76f4\u63a5\u4f7f\u7528downsampling\u8fc7\u7a0b\u76f8\u540c\u5927\u5c0f\u7684feature map</p> </li> </ul> <p></p> </li> </ul> </li> <li> <p>DeepLab: FCN + CRF</p> </li> <li> <p>CRF(Conditional random field):</p> <ul> <li> <p>Energy function:     $$     E(x)=\\sum_{i'}\\theta_i(x_i)+\\sum_{ij}\\theta_{ij}(x_i,x_j)     $$</p> </li> <li> <p>Unary potential     $$     \\theta_i(x_i)=-\\log P(x_i)     $$</p> </li> <li> <p>Pairwise potential     $$     \\begin{aligned}\\theta_{ij}(x_{i},x_{j})=&amp;\\mu(x_{i},x_{j})\\bigg[w_{1}\\exp\\bigg(-\\frac{||p_{i}-p_{j}||^{2}}{2\\sigma_{\\alpha}^{2}}-\\frac{||I_{i}-I_{j}||^{2}}{2\\sigma_{\\beta}^{2}}\\bigg)\\newline &amp;+w_{2}\\exp\\Big(-\\frac{||p_{i}-p_{j}||^{2}}{2\\sigma_{\\gamma}^{2}}\\Big)\\Big]\\end{aligned}     $$     where \\(\\mu(x_{i},x_{j})=1\\) if \\(x_i\\neq x_{j}\\), and zero otherwise</p> </li> </ul> </li> <li> <p>Evaluation metric: Per-pixel Intersection-over-union(IoU)</p> </li> </ol>"},{"location":"CV/cv10/#object-detection","title":"Object detection","text":"<ol> <li> <p>output: a set of bounding boxes that denote objects</p> </li> <li> <p>detect a single object: Treat localization as a regression problem! \u5206\u4e24\u4e2a\u7f51\u7edc\u8fdb\u884c\u5206\u7c7b\u548c\u786e\u5b9abox\u8303\u56f4</p> </li> <li> <p>Region proposals\uff1a\u5bf9\u56fe\u50cf\u91c7\u53d6\u8fc7\u5206\u5272\uff0c\u627e\u5230\u6240\u6709\u6709\u53ef\u80fd\u7684box\uff0c\u901a\u5e38\u57fa\u4e8e\u542f\u53d1\u5f0f\u3002relatively fast to run</p> <ul> <li>Selective Search gives 2000 region proposals in a few seconds on CPU</li> </ul> </li> <li> <p>R-CNN</p> <ul> <li>Resize each region to 224x224 and run through CNN</li> <li>Predict class scores and bbox transform</li> <li>Use scores to select a subset of region proposals to output</li> </ul> <p></p> <ul> <li>evaluation metric: IoU &gt; 0.5 is decent, &gt; 0.7 is pretty good, &gt; 0.9 is almost perfect</li> <li>Non-Max Suppression: Object detectors often output many overlapping detections<ol> <li>Select the highest-scoring box</li> <li>Eliminate lower-scoring boxes with IoU &gt; threshold \u548c\u7b2c\u4e00\u6b65\u4e2d\u5206\u6570\u6700\u9ad8\u7684\u8ba1\u7b97IoU</li> <li>If any boxes remain, goto 1</li> </ol> </li> </ul> </li> <li> <p>Fast R-CNN: \u628a\u6574\u4e2a\u56fe\u90fd\u8dd1\u4e00\u904d\u7f51\u7edc\u7684backbone\u4ee5\u63d0\u53d6\u7279\u5f81\uff0c\u63d0\u9ad8\u6548\u7387</p> </li> </ol> <ol> <li> <p>Faster R-CNN: A two-stage object detector</p> <ul> <li>First stage: run once per image</li> <li>Backbone network</li> <li>RPN</li> <li>Second stage: run once per region</li> <li>Crop features: RoI pool / align</li> <li>Predict object class</li> <li>Predict bbox offset</li> <li>\u8fdb\u4e00\u6b65\u5730\uff0c\u4f7f\u7528\u4e00\u4e2a\u5377\u79ef\u7f51\u7edc\u8bad\u7ec3region proposal</li> </ul> <p></p> <ul> <li>RPN\uff1a\u9884\u5148\u5b9a\u4e49K\u79cd\u53ef\u80fd\u7684anchor box\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u751f\u6210\u5bf9\u5e94\u7684\u8fd9\u4e9bbox\uff0c\u4e4b\u540e\u8dd1\u7f51\u7edc\uff0c\u7f51\u7edc\u8f93\u51fa\u5bf9\u5e94box\u662f\u5426\u5305\u542b\u7269\u4f53\uff0c\u4ee5\u53ca4\u4e2a\\(\\Delta\\)\uff0c\u8868\u793abox\u5728\u56db\u4e2a\u65b9\u5411\u4e0a\u8981\u5982\u4f55\u8c03\u6574\u3002\u6700\u540e\u9009\u53d6\u5206\u6570\u6700\u9ad8\u7684\u82e5\u5e72\u4e2a</li> </ul> <p></p> </li> <li> <p>\u786e\u8ba4\u54ea\u4e9bbox\u6709object\u540e\uff0cSingle-Stage Detector: Classify each object as one of C categories (or background)</p> </li> <li> <p>YOLO: single-stage\u3002 \u5373\u8bc6\u522b\u6846\u5185\u6709\u7269\u4f53\u548c\u662f\u4ec0\u4e48\u7269\u4f53\u53ea\u7528\u8dd1\u4e00\u6b21\uff0c\u73b0\u5728yolo\u7528\u7684\u6700\u591a</p> </li> <li> <p>two vs. single</p> <ul> <li>Two-stage is generally more accurate</li> <li>Single-stage is faster</li> </ul> </li> </ol>"},{"location":"CV/cv10/#instance-segmentation","title":"Instance segmentation","text":"<ol> <li> <p>Faster R-CNN + additional head(mask prediction)</p> </li> <li> <p>deep snake\uff1a\u6700\u65e9\u7684\uff0c\u901a\u8fc7\u4f18\u5316\u7684\u65b9\u5f0f</p> </li> </ol> <ol> <li> <p>Beyond instance-segmentation</p> <ul> <li>Label all pixels in the image (both things and stuff)</li> </ul> </li> </ol>"},{"location":"CV/cv10/#human-pose-estimation","title":"Human pose estimation","text":"<ol> <li>represent the pose of a human by locating a set of keypoints</li> </ol> <p>e.g. 17 keypoints:</p> <ul> <li>Nose</li> <li>Left / Right eye</li> <li>Left / Right ear</li> <li>Left / Right shoulder</li> <li>Left / Right elbow</li> <li>Left / Right wrist</li> <li>Left / Right hip</li> <li>Left / Right knee</li> <li>Left / Right ankle</li> </ul> <ol> <li> <p>single human</p> <ul> <li>directly predict joint locations</li> <li>represent joint locations as the heatmap</li> </ul> </li> <li> <p>Multiple humans</p> <ul> <li>Top-down: Detect humans and detect keypoints in each bbox \u5148\u7528\u524d\u9762\u7684\u65b9\u6cd5\u5206\u5272\u627e\u5230\u6bcf\u4e2a\u4eba\uff0c\u4e4b\u540e\u518d\u5f53single human\u8bc6\u522b\u3002\u4f46\u6548\u7387\u4f4e\uff0c\u540c\u65f6\u4e24\u4e2a\u4eba\u91cd\u5408\u65f6\u53ef\u80fd\u53ea\u4f1a\u6709\u4e00\u4e2abox\uff0c\u4e0d\u53ef\u4fee\u6b63<ul> <li>Mask R-CNNs</li> <li>\u5927\u90e8\u5206\u7684\u65f6\u5019\u66f4\u51c6\u786e</li> </ul> </li> <li>Bottom-up: Detect keypoints and group keypoints to form humans<ul> <li>Example: OpenPose: Link parts based on part affinity fields </li> <li>\u66f4\u5feb\uff0c\u590d\u6742\u60c5\u51b5\u6548\u679c\u53ef\u80fd\u66f4\u597d</li> </ul> </li> </ul> </li> </ol>"},{"location":"CV/cv10/#other-tasks","title":"Other tasks","text":"<ol> <li>video classification: use 3D CNN</li> </ol> <ol> <li> <p>temporal action localization: Given a long untrimmed video sequence, identify frames corresponding to different actions \u4f4d\u7f6e+\u5e27\u7684region propsal</p> </li> <li> <p>Spatial-temporal detection: Given a long untrimmed video, detect all the people in space and time and classify the activities they are performing</p> </li> <li> <p>Multi-object trackinig: Identify and track objects belonging to one or more categories without any prior knowledge about the appearance and number of targets.</p> </li> </ol>"},{"location":"CV/cv11/","title":"Lec.11: 3D Deep Learning","text":""},{"location":"CV/cv11/#feature-matching","title":"Feature matching","text":"<ol> <li> <p>SuperPoint</p> </li> <li> <p>CNN-based detectors:</p> <ul> <li> <p>train CNNs to detect corners</p> </li> <li> <p>train CNNs to enforce repeatability: warp image and enforce equivariance     $$     \\min_f\\frac{1}{n}\\sum_{i=1}^n|f(g(\\mathbf{I}))-g(f(\\mathbf{I}))|^2     $$</p> </li> </ul> </li> <li> <p>CNN-based descriptors</p> <ul> <li> <p>train descriptors by metric learning</p> </li> <li> <p>constrastive loss</p> </li> </ul> \\[ L_{tri}=\\frac{1}{N}\\sum_{i=1}^N\\max(0,m+\\|F_I(A)-F_{I'}(P)\\|-\\|F_I(A)-F_{I'}(N)\\|)^2 \\] <ul> <li> <p>where is training data from</p> <ul> <li>synthetic data</li> <li>use MVS</li> </ul> </li> </ul> </li> </ol>"},{"location":"CV/cv11/#object-pose-estimation","title":"Object Pose Estimation","text":"<ol> <li> <p>feature-matching-based methods</p> <ul> <li>First,reconstruct object SfM model by input multi-view images</li> <li>Then obtain 2D-3D correspondeces by lifting 2D-2D matches to 3D</li> <li>Finally, object pose of query image can be solved by PnP</li> </ul> </li> <li> <p>Direct Pose Regression Methods</p> <ul> <li>Directly regressing object pose of queryimage using a neural network</li> <li>Need to render a large amount of images for training</li> </ul> </li> <li> <p>Keypoint detection methods</p> <ul> <li>Using a CNN to detect pre-defined keypoints</li> <li>Need to render a large amount ofimages for training</li> </ul> </li> </ol>"},{"location":"CV/cv11/#dense-reconstruction","title":"Dense Reconstruction","text":"<ol> <li>MVSNet: predict cost volume from CNN features</li> </ol> <ol> <li>implict representations \u9690\u5f0f\u8868\u8fbe\uff0c\u901a\u8fc7\u4e00\u4e2a\u8fde\u7eed\u51fd\u6570 Occpupacy, Signed distance function</li> </ol> <p>\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3implict representations</p> <ol> <li> <p>single image to 3D</p> <ul> <li> <p>monoculer depth estimation: using network to guess depth from single image</p> </li> <li> <p>scale ambiguity: the same object with different sizes and depths give the same image </p> <p>\u6b67\u4e49\u6027</p> </li> <li> <p>loss function: scale-invarient depth error</p> </li> </ul> </li> </ol> \\[ D_{SI}(y,y^*)=\\frac{1}{n}\\sum_{i=1}^n(\\log y_i-\\log y_i^*+\\alpha(y,y^*))^2 \\newline  \\alpha(y,y^*)=\\frac{1}{n}\\sum_{j=1}^n(\\log y_j-\\log y_j^*)  \\]"},{"location":"CV/cv11/#deep-learning-for-3d-understanding","title":"Deep learning for 3D understanding","text":"<ol> <li> <p>3D ConvNets: High space/time complexity of high resolution voxels \\(O(N^3)\\)</p> </li> <li> <p>sparse ConvNets: using sparity of 3D shapes</p> <ul> <li>Store the sparse surface signals (Octree)</li> <li>Constrain the computation near the surface</li> <li>Sparse convolution: compute inner product only at the active sites (nonzero entries)</li> </ul> <p></p> </li> <li> <p>deep learning on point clouds</p> <ul> <li> <p>challenge</p> <ul> <li>Point cloud is unrasterized data, irregular</li> <li>Convolution cannot be applied</li> </ul> </li> <li> <p>PointNet</p> <ul> <li> <p>\u8868\u793a\uff1aN orderless points, each represented by a D dim coordinate</p> </li> <li> <p>orderless\u7684\u89e3\u51b3\uff1amax pooling makes the output invariant to the order of input points</p> </li> </ul> <p></p> <ul> <li>\u8ba9\u7f51\u7edc\u65cb\u8f6c\u4e0d\u53d8\uff1aestimate the transformation using another network (T-Net)</li> </ul> <p></p> <ul> <li> <p>limitations</p> </li> <li> <p>No local context for each point!</p> </li> </ul> </li> </ul> </li> </ol> <ol> <li> <p>PointNet++: Multi-Scale PointNet</p> <ol> <li>Sampling: Sample anchor points by Farthest Point Sampling (FPS)</li> <li>Grouping: Find neighbourhood of anchor points</li> <li> <p>Apply PointNet in each neighborhood to mimic convolution</p> <p></p> </li> </ol> </li> <li> <p>3D semantic segmentation</p> <ul> <li>Input: sensor data of a 3D scene (RGB/depth/point cloud \u2026..)</li> <li>Output: Label each point in point cloud with category label.</li> <li>Possible solution: fuse 2D segmentation results in 3D \u56e0\u4e3a2D\u7684\u6548\u679c\u6bd4\u8f83\u597d\u4e86</li> </ul> </li> <li> <p>3D object detection</p> <ul> <li>PointRCNN: RCNN for point cloud</li> </ul> <p></p> <ul> <li>Frustum PointNets: using 2D detectors to generate 3D proposals</li> </ul> </li> </ol>"},{"location":"CV/cv12/","title":"Lec.12: Computational Photography","text":""},{"location":"CV/cv12/#high-dynamic-range-imaginghdr","title":"High Dynamic Range Imaging(HDR)","text":"<ol> <li> <p>Exposure = Gain x Irradiance x Time</p> <ul> <li>Gain is controlled by the ISO<ul> <li>\u8d8a\u9ad8\u8d8a\u7075\u654f\uff0c\u4e5f\u4f1a\u653e\u5927\u566a\u58f0</li> </ul> </li> <li>Irradiance is controlled by the aperture \u5149\u5708 f\u6570</li> <li>Time is controlled by the shutter speed<ul> <li>\u6309\u4e0b\u5feb\u95e8\uff0c\u5148\u6e05\u7a7a\u4e4b\u524d\u7684\u5185\u5bb9\uff0c\u518d\u5f00\u59cb\u62cd\u3002\u8fd9\u4e2a\u65f6\u95f4\u5dee\u53eb\u5feb\u95e8\u5ef6\u8fdf\u3002\u5355\u53cd\u76f8\u673a\u662f\u5149\u5b66\u53d6\u666f\u5668\uff0c\u4f20\u611f\u5668\u4e0d\u9700\u8981\u63a5\u53d7\u5149\u7ebf\uff0c\u56e0\u6b64\u62cd\u7167\u65f6\u4e0d\u7528\u6e05\u7a7a\u4e4b\u524d\u7684\u5185\u5bb9\uff0c\u5feb\u95e8\u5ef6\u8fdf\u6bd4\u8f83\u4f4e</li> </ul> </li> <li>When taking a photo, the averaged exposure should be at the middle of the sensor\u2019s measurement range. So that the photo has both bright and dark parts with details</li> </ul> </li> <li> <p>Dynamic range(\u52a8\u6001\u8303\u56f4): The ratio between the largest and smallest values of a certain quantity</p> <ul> <li> <p>Images have an even lower dynamic range because of quantization (8-bit = 256)</p> <p></p> </li> </ul> </li> <li> <p>Key idea:</p> <ul> <li>Exposure bracketing: Capture multiple LDR images at different exposures</li> <li>Merging: Combine them into a single HDR image</li> </ul> </li> <li> <p>Image formation model: Suppose scene radiance for image pixel \\((x,y)\\) is \\(L(x,y)\\). For image I, \\(I(x,y)=clip[t_i\\cdot L(x,y)+noise]\\)</p> </li> <li> <p>Merging images: For each pixel:</p> <ul> <li>Find \u201cvalid\u201d pixels in each image</li> <li>Weight valid pixel values appropriately</li> <li>Form a new pixel value as the weighted average of valid pixel values</li> </ul> </li> <li> <p>Display the HDR image: \u867d\u7136\u8bf4merge\u540e\u7684\u56fe\u7247\u52a8\u6001\u8303\u56f4\u5f88\u5927\uff0c\u4f46\u662f\u663e\u793a\u5c4f\u7b49\u8bbe\u5907\u53ef\u4ee5\u663e\u793a\u7684\u4f9d\u7136\u53ea\u67098-bit\uff0c\u8fd9\u6837\u60f3\u8868\u793a\u51fa\u5f88\u597d\u7684\u4eae\u90e8\u7ec6\u8282\u548c\u6697\u90e8\u7ec6\u8282\uff0c\u5c31\u4f1a\u4f7f\u5f97\u6574\u4e2a\u56fe\u7247\u504f\u6697,\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u9700\u8981Tone Mapping\u6765\u5efa\u7acb\u4e00\u4e2aHDR\u5230LDR\u7684\u8f6c\u6362\u516c\u5f0f</p> </li> <li> <p>Tone Mapping</p> <ul> <li>\u7ebf\u6027 \\(X\\rightarrow\\alpha X\\)</li> <li>\u975e\u7ebf\u6027(gamma compression) \\(X\\rightarrow\\alpha X^\\gamma\\) \\(\\gamma\\)\u5927\u4e8e1\u66f4\u6697\uff0c\u5c0f\u4e8e1\u66f4\u4eae\u3002\u8fd9\u4e00\u65b9\u6cd5\u96c6\u6210\u5728\u4e0d\u540c\u7684\u76f8\u673a\u91cc\u4e86\uff0c\u4e5f\u53ef\u4ee5\u540e\u671f\u8c03\uff0c\u4f46\u662f\u8981\u5b58\u6210log</li> </ul> </li> </ol>"},{"location":"CV/cv12/#deblurring","title":"Deblurring","text":"<ol> <li> <p>reason</p> <ul> <li>Defocus: the subject is not in the depth of view \u6ca1\u5bf9\u4e0a\u7126</li> <li>Motion blur: moving subjects or unstable camera</li> </ul> </li> <li> <p>Get a clear image</p> <ul> <li>Accurate focus</li> <li>Fast shutter speed<ul> <li>Large aperture</li> <li>High ISO</li> <li>One of the reasons why SLR cameras and lenses are expensive</li> </ul> </li> <li>\u4f7f\u7528hardware\uff1a\u5982\u4e09\u811a\u67b6\u3001\u4e91\u53f0\u3001\u81ea\u5e26\u9632\u6296</li> </ul> </li> <li> <p>Modeling image blur: The blurring process can be described by convolution, the blurred image is called convolution kernel</p> <ul> <li>The blur pattern of defocusing depends on the aperture shape</li> <li>The blur pattern of shaking depends on the camera trajectory</li> <li>blurred image = clear image \u4e0e blur kernel \u505a\u5377\u79ef</li> </ul> </li> <li> <p>deblurring = deconvolution</p> <ul> <li> <p>Non-blind image deconvolution(NBID): \\(G=F\\otimes H\\)</p> <ul> <li> <p>G: The captured image (known), F: Image to be solved (unknown), H: Convolution kernel (known)</p> </li> <li> <p>\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362 \\(F=IFFT\\left(FFT(G)\\div FFT(H)\\right)\\)</p> </li> <li> <p>Usually called inverse filter Inverse filter</p> </li> <li> <p>\u95ee\u9898\uff1a\u5927\u90e8\u5206\u6a21\u7cca\u6838\u90fd\u662f\u4f4e\u9891\u6ee4\u6ce2\u5668\uff0c\u505a\u9006\u5377\u79ef\u53ef\u80fd\u4f1a\u653e\u5927\u9ad8\u9891\u90e8\u5206\uff0c\u4ece\u800c\u566a\u97f3\u88ab\u653e\u5927\u4e86   $$   \\begin{aligned}    &amp; G(u,v)=H(u,v)F(u,v)+N(u,v) \\newline     &amp; \\hat{F}(u,v)=G(u,v)/H(u,v)=F(u,v)+N(u,v)/H(u,v)   \\end{aligned}   $$</p> </li> <li> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u6539\u53d8\u6ee4\u6ce2\u5668\u8868\u8fbe\u65b9\u5f0f\uff0c\u4e0d\u653e\u5927\u9ad8\u9891</p> </li> </ul> <p></p> <ul> <li>\u5e94\u7528\uff1a\u9ad8\u901f\u770b\u8f66\u724c\uff08\u8f66\u7684\u8f68\u9053\u76f8\u5bf9\u56fa\u5b9a\uff09\uff0c\u54c8\u52c3\u592a\u7a7a\u671b\u8fdc\u955c</li> </ul> </li> <li> <p>Deconvolution by optimization \u53bb\u566a\u97f3</p> <ul> <li> <p>\u8981\u4f18\u5316\u7684\u53d8\u91cf\uff1a\u6e05\u6670\u7684\u539f\u56fe\u50cf </p> </li> <li> <p>\u76ee\u6807\u51fd\u6570\uff1a</p> </li> <li> <p>\u8981\u6c42\u89e3\u7684\u56fe\u50cf\u548c\u7528\u5377\u79ef\u6838\u8ba1\u7b97\u540e\u6a21\u7cca\u7684\u56fe\u50cf\u5c3d\u53ef\u80fd\u63a5\u8fd1 likelihood</p> </li> <li> <p>\u590d\u539f\u56fe\u50cf\u5c3d\u53ef\u80fdreal  prior</p> </li> <li> <p>\u5047\u8bbe\u566a\u58f0\u662f\u9ad8\u65af\u5206\u5e03</p> </li> </ul> \\[ MSE=\\|G-F\\otimes H\\|_2^2=\\sum_{ij}(G_{ij}-[F\\otimes H]_{ij})^2 \\] <ul> <li> <p>Prior of natural image</p> </li> <li> <p>Natural images are generally smooth in segments \u5927\u591a\u6570\u5730\u65b9\u662f\u5149\u6ed1\u7684</p> </li> <li>Gradient map is sparse</li> <li>Adding L1 regularization makes the image gradient sparse \u7528\u6b63\u5219\u9879\u8ba9\u68af\u5ea6\u66f4\u7a00\u758f\uff0c\u5728\u539f\u5148\u8bef\u5dee\u52a0\u4e00\u4e2a\\(\\|\\nabla F\\|_1\\)</li> </ul> </li> <li> <p>Blind image deconvolution(BID)</p> <ul> <li> <p>blur kernel\u662f\u975e\u8d1f\u4e14\u7a00\u758f\u7684</p> </li> <li> <p>\u4f18\u5316\u76ee\u6807\u51fd\u6570   $$   \\min_{F,H}|G-F\\otimes H|_2^2+\\lambda_1|\\nabla F|_1+\\lambda_2|H|_1   s.t. H\\geq0   $$</p> </li> </ul> </li> </ul> </li> </ol>"},{"location":"CV/cv12/#colorization","title":"Colorization","text":"<p>\u4e0d\u8003</p> <p>\u9ed1\u767d\u8f6c\u5f69\u8272</p> <p>add color to a monochrome picture or video with the aid of a computer</p> <ul> <li> <p>There are two main ways to color grayscale images:</p> </li> <li> <p>Sample-based colorization: use sample image</p> </li> <li> <p>Interactive colorization: paint brush interactively</p> </li> </ul>"},{"location":"CV/cv12/#sample-based-colorization","title":"Sample-based colorization","text":"<ul> <li>Scan the target image, for each pixel:</li> <li>Find the best matching point in the sample (e.g., considering the brightness and the standard deviation with neighboring pixels)</li> <li>Assign the color of the matching point to the pixel</li> </ul>"},{"location":"CV/cv12/#interactive-colorization","title":"Interactive colorization","text":"<p>\u8f6c\u5316\u4e3a\u4f18\u5316\u95ee\u9898 $$ J(U)=\\sum_r\\left(U(\\text{r})-\\sum_{s\\in N(\\text{r})}w_{rs}U\\left(s\\right)\\right)^2 $$</p> <ul> <li>\\(U(r),U(s)\\): RGB values of pixel \\(r,s\\)</li> <li>\\(N(r)\\): neighborhood pixels of pixel \\(r\\)</li> <li>\\(w_{rs}\\): weight that measures similarity between \\(r\\) and \\(s\\)</li> <li>Constriant: User-specified colors of brushed pixels keep unchanged</li> </ul>"},{"location":"CV/cv12/#video-colorization","title":"Video colorization","text":"<p>\u628a\u89c6\u9891\u5f53\u6210\u4e09\u7ef4\u6570\u7ec4\uff0c\u540c\u6837\u4f7f\u7528\u4f18\u5316\u7b97\u6cd5</p>"},{"location":"CV/cv12/#modern-approach","title":"Modern approach","text":"<p>\u795e\u7ecf\u7f51\u7edc</p> <ol> <li> <p>Loss function for image synthesis     $$     L(\\Theta)=||F(X;\\Theta)-Y||^2     $$</p> <ul> <li>Problem with reconstruction loss<ul> <li>Cannot handle the case with multiple solutions</li> <li>Cannot measure if an image is realistic</li> </ul> </li> </ul> </li> <li> <p>GAN</p> <ul> <li> <p>G tries to synthesize fake images that fool D:     $$     \\arg\\min_G\\mathbb{E}_{x,y}[\\log D(G(x))+\\log(1-D(y))]     $$</p> </li> <li> <p>G tries to synthesize fake images that fool the best D:     $$     \\arg\\min_G\\max_D\\mathbb{E}_{x,y}[\\log D(G(x))+\\log(1-D(y))]     $$</p> </li> <li> <p>D can be viewed as a loss function to train G</p> <ul> <li>Called adversarial loss</li> <li>Learned instead of being hand-designed</li> <li>Can be applied to any image synthesis tasks</li> </ul> </li> </ul> </li> </ol>"},{"location":"CV/cv12/#more-image-synthesis-tasks","title":"More Image Synthesis Tasks","text":"<ol> <li> <p>Super-Resolution: Super Resolution using GAN</p> </li> <li> <p>Image to Image Translation</p> <ul> <li>Style transfer</li> <li>Text-to-Photo</li> <li>Image dehazings</li> </ul> </li> <li> <p>Pose and garment transfer</p> </li> </ol> <ul> <li>Method<ul> <li>Use parametric mesh (SMPL) to represent body pose and shape</li> <li>Use high-dimensional UV texture map to encode appearance</li> <li>Transfer the pose and appearance</li> </ul> </li> </ul> <ol> <li> <p>Head Re-enactment</p> </li> <li> <p>AIGC</p> </li> <li> <p>Diffusion Models</p> </li> </ol> <ol> <li>Conditional DMs: Text-to-Image, Latent Diffusion, Text-to-Video (SORA)</li> </ol>"},{"location":"CV/cv2/","title":"Lec.02: Image Formation","text":""},{"location":"CV/cv2/#camera-and-lens","title":"Camera and lens","text":"<ol> <li> <p>Pinhole camera</p> <ul> <li>Add a barrier to block off most of the rays, The opening known as the aperture</li> <li>\u5b54\u592a\u5c0f\u4e00\u65b9\u9762\u4eae\u5ea6\u4e0d\u591f\uff0c\u53e6\u4e00\u65b9\u9762\u4f1a\u53d1\u751f\u884d\u5c04\u73b0\u8c61diffraction</li> </ul> </li> </ol> <ol> <li>Lens: \\(\\dfrac{1}{i}+\\dfrac{1}{o}=\\dfrac{1}{f}\\)</li> </ol> <ul> <li>Magnification: \\(m=\\dfrac{h_i}{h_o}\\)</li> </ul> <ol> <li> <p>Field of View: depend on focal length and sensor size</p> <ul> <li>\u957f\u7126\u4f1a\u653e\u5927\u8fdc\u5904\u7684\u7269\u4f53\u3002\u7126\u8ddd\u8d8a\u957f\uff0c\u89c6\u89d2\u8d8a\u7a84\uff0c\u9002\u5408\u8fdc\u6444\uff1b\u7126\u8ddd\u8d8a\u77ed\uff0c\u89c6\u89d2\u8d8a\u5bbd\uff0c\u9002\u5408\u5e7f\u89d2\u62cd\u6444\u3002</li> <li>FOV also depends on sensor size</li> </ul> </li> </ol> <ol> <li> <p>F-number: More convenient to represent aperture as a fraction of focal length</p> <ul> <li>\\(N=\\dfrac{f}{D}\\)</li> </ul> </li> <li> <p>Lens Defocus</p> <ul> <li>From similar triangles: \\(\\dfrac bD=\\dfrac{|i^{\\prime}-i|}{i^{\\prime}}\\)</li> <li>Blur circle diameter: \\(b=\\dfrac D{i^{\\prime}}|i^{\\prime}-i|,b\\propto D\\propto\\dfrac1N\\)</li> <li>\u5982\u4f55\u8ba4\u4e3aimage\u662fwell focused\u7684\uff0c\u53ea\u8981b\u7684\u5927\u5c0f\u5c0f\u4e8e\u50cf\u7d20\u5927\u5c0f\u5373\u53ef</li> </ul> </li> </ol> <ol> <li>Depth of Field\uff1a\u56fe\u50cf\u8db3\u591f\u805a\u7126\u7684\u7269\u4f53\u8ddd\u79bb\u7684\u8303\u56f4</li> </ol> <p>\u666f\u6df1\u548c\u54ea\u4e9b\u56e0\u7d20\u6709\u5173</p> <ul> <li>o \u76f8\u673a\u5230\u7269\u4f53\u7684\u8ddd\u79bb</li> <li>f \u955c\u5934\u7126\u8ddd</li> <li>c \u56fe\u50cf\u4e2d\u53ef\u63a5\u53d7\u7684\u6700\u5927\u6a21\u7cca\u5708\u76f4\u5f84</li> <li>N \u5149\u5708\u7684F-number</li> </ul> \\[ \\begin{aligned}&amp;\\bullet c=\\frac{f^2(o-o_1)}{No_1(o-f)}, c=\\frac{f^2(o_2-o)}{No_2(o-f)}\\newline &amp;\\bullet\\text{ Depth of Field: }o_2-o_1=\\frac{2of^2cN(o-f)}{f^4-c^2N^2(o-f)^2}\\end{aligned} \\] <ol> <li> <p>How to blur the background</p> <ul> <li>Large aperture</li> <li>Long focal length</li> <li>Near foreground</li> <li>Far Background</li> </ul> </li> </ol>"},{"location":"CV/cv2/#geometric-image-formation","title":"Geometric Image Formation","text":"<ol> <li>Pin-hole camera model: Perspective Projection</li> </ol> <ol> <li>Perspective Projection in homogeneous coordinates</li> </ol> \\[ \\begin{bmatrix}f &amp; 0 &amp; 0 &amp; 0\\newline  0 &amp; f &amp; 0 &amp; 0\\newline  0 &amp; 0 &amp; 1 &amp; 0\\end{bmatrix}\\begin{bmatrix}x\\newline  y\\newline  z\\newline  1\\end{bmatrix}=\\begin{bmatrix}fx\\newline  fy\\newline  z\\end{bmatrix}\\cong\\begin{bmatrix}f\\frac xz\\newline  f\\frac yz\\newline  1\\end{bmatrix} \\] <ul> <li>Each point has an infinite set of homogeneous coordinates</li> </ul> <ol> <li>Vanishing points: \u4e09\u7ef4\u7a7a\u95f4\u4e2d\u5e73\u884c\u7ebf\u5728\u7167\u7247\u4e2d\u4f1a\u6536\u655b\u4e8e\u540c\u4e00\u70b9</li> </ol> <ul> <li>The ray from C through v is parallel to the lines</li> <li>v tells us the direction of the lines</li> <li>v may be outside the image frame or at infinity</li> </ul> <ol> <li> <p>Vanishing lines</p> <ul> <li>Any set of parallel lines on the plane define a vanishing point</li> <li>The union of all of these vanishing points is the vanishing line</li> <li>Note that different planes define different vanishing lines<ul> <li>The direction of the vanishing line tells us the orientation of the plane</li> </ul> </li> </ul> </li> </ol> <p>\u9020\u6210\u7578\u53d8\u7684\u539f\u56e0\u6709\u54ea\u4e9b</p> <ol> <li> <p>Perspective distortion</p> <ul> <li>\u5411\u4e0a\u503e\u659c\u7167\u76f8\u673a\u4f1a\u5bfc\u81f4\u5782\u76f4\u65b9\u5411\u6536\u655b</li> <li>\u7528\u4e00\u4e2a\u666e\u901a\u7684\u955c\u5934\u6765\u4fdd\u6301\u76f8\u673a\u7684\u6c34\u5e73\uff0c\u53ea\u80fd\u6355\u6349\u5230\u5efa\u7b51\u7684\u5e95\u90e8</li> <li>\u5916\u90e8\u67f1\u770b\u8d77\u6765\u66f4\u5927</li> <li>\u53d8\u5f62\u4e0d\u662f\u7531\u4e8e\u955c\u5934\u7684\u7f3a\u9677</li> </ul> </li> <li> <p>Radial distortion</p> <ul> <li> <p>Caused by imperfect lenses(\u900f\u955c)</p> </li> <li> <p>More noticeable for rays that pass through the edge of the lens</p> <p>\u5bf9\u4e8e\u901a\u8fc7\u900f\u955c\u8fb9\u7f18\u7684\u5149\u7ebf\u6765\u8bf4\u66f4\u4e3a\u660e\u663e</p> </li> <li> <p>\u5e7f\u89d2\u5bb9\u6613\u5bfc\u81f4\u6876\u5f62\u7578\u53d8</p> </li> <li> <p>\u957f\u7126\u5bb9\u6613\u5bfc\u81f4\u6795\u5f62\u7578\u53d8</p> </li> </ul> </li> </ol> \\[ \\begin{aligned}&amp;r^{2} = {x_{n}^{\\prime}}^{2}+{y_{n}^{\\prime}}^{2}\\newline &amp;x_{d}^{\\prime} = x_{n}^{\\prime}(1+\\kappa_{1}r^{2}+\\kappa_{2}r^{4})\\newline &amp;y_{d}^{\\prime} = y_{n}^{\\prime}(1+\\kappa_{1}r^{2}+\\kappa_{2}r^{4})\\end{aligned} \\]"},{"location":"CV/cv2/#photometric-image-formation","title":"Photometric image formation","text":"<ul> <li> <p>Shutter speed controls exposure time</p> </li> <li> <p>The pixel value is equal to the integral of the light intensity within the exposure time</p> </li> </ul> <p>\u50cf\u7d20\u503c\u7b49\u4e8e\u5149\u5f3a\\(\\times\\)\u66dd\u5149\u65f6\u95f4</p> <ul> <li> <p>Rolliing shutter effect\uff1a\u5377\u5e18\u5feb\u95e8\uff0c\u9010\u884c\u66dd\u5149\uff0c\u800c\u975eglobal shutter\uff0c\u5373\u7406\u60f3\u4e2d\u7684\u6574\u5f20\u7167\u7247\u540c\u65f6\u66dd\u5149\uff0c\u62cd\u6444\u7ed3\u679c\u5c31\u53ef\u80fd\u51fa\u73b0\"\u503e\u659c\"\u3001\"\u6447\u6446\u4e0d\u5b9a\"\u6216\"\u90e8\u5206\u66dd\u5149\"\u7b49\u60c5\u51b5\uff0c\u5373\u679c\u51bb\u6548\u5e94\u3002</p> </li> <li> <p>Color spaces: RGB, HSV(Hue\u8272\u8c03, Value\u4eae\u5ea6, Saturation\u9971\u548c\u5ea6)</p> </li> <li>HSV\u6bd4RGB\u66f4\u63a5\u8fd1\u4eba\u7c7b\u5bf9\u989c\u8272\u611f\u77e5\uff0c\u5728\u56fe\u50cf\u5904\u7406\u4e2d\u4f7f\u7528\u6bd4\u8f83\u591a</li> <li>\u4e24\u8005\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362 </li> </ul> <ul> <li>Bayer filter</li> <li>\u7eff\u8272\u6700\u591a\uff1a\u4eba\u773c\u5bf9\u7eff\u8272\u5149\u7684\u654f\u611f\u5ea6\u6700\u9ad8\uff1b\u7eff\u8272\u662f\u81ea\u7136\u754c\u4e2d\u6700\u5e38\u89c1\u7684\u989c\u8272\u4e4b\u4e00\uff1b\u7eff\u8272\u901a\u9053\u901a\u5e38\u566a\u58f0\u8f83\u5c11</li> </ul>"},{"location":"CV/cv2/#shading","title":"Shading","text":"<ul> <li> <p>Compute light reflected toward camera at a specific point.</p> </li> <li> <p>Inputs:</p> </li> <li>Viewer direction, v</li> <li>Surface normal, n</li> <li>Light direction, I (for each of many lights.)</li> <li>Surface parameters \u6750\u8d28</li> </ul> <ul> <li>BRDF(Bidirectional Reflectance Distribution Function)</li> </ul> <p>\u4e0d\u8003</p> <ul> <li>Diffuse (Lambertian) Reflection \u6f2b\u53cd\u5c04</li> </ul> <ul> <li>Specular reflection \u955c\u9762\u53cd\u5c04</li> </ul> <ul> <li>Ambient Lighting \u73af\u5883\u5149</li> </ul> <ul> <li>Blinn-Phong Reflection Model</li> </ul>"},{"location":"CV/cv3/","title":"Lec.03: Image Processing","text":""},{"location":"CV/cv3/#image-processing-basics","title":"Image Processing Basics","text":"<ol> <li> <p>increase contrast with 'S curve' \\(\\text{output}(x,y)=f(\\text{input}(x,y))\\)</p> <ul> <li>S\u578b\uff0c\u4eae\u7684\u66f4\u4eae\uff0c\u6697\u7684\u66f4\u6697\uff0c\u63d0\u9ad8\u5bf9\u6bd4\u5ea6</li> </ul> </li> </ol> <ol> <li>Convolution</li> </ol> <ul> <li>Discrete 2D Convolution</li> </ul> <ul> <li> <p>Padding: add pixels around the image border, zero values, edge values, symmetric...</p> </li> <li> <p>Gaussian Blur: \\(f(i,j)=\\dfrac1{2\\pi\\sigma^2}e^{-\\dfrac{i^2+j^2}{2\\sigma^2}}\\)</p> </li> <li> <p>\\(\\sigma\\)\u5927\u4e00\u4e9b\u66f4\u7cca</p> </li> <li> <p>Sharpening</p> </li> <li>High frequencies in image \\(I=I-blur(I)\\)</li> <li> <p>Sharpened image \\(=I+(I-blur(I))\\)\uff0c\u5373\u5728\u539f\u56fe\u6dfb\u52a0\u9ad8\u9891\u90e8\u5206</p> </li> <li> <p>\u8fb9\u7f18\u68c0\u6d4b</p> </li> </ul> <ul> <li>\u53ef\u4ee5\u8ba4\u4e3afilter\u662f\u5bf9\u7279\u5b9apattern\u7684\u68c0\u6d4b</li> </ul>"},{"location":"CV/cv3/#image-sampling","title":"Image Sampling","text":"<ol> <li>Aliasing: artifacts due to sampling. Signals are changing too fast but sampled too slow</li> </ol> <ol> <li>\u628a\u4efb\u610f\u4fe1\u53f7\u7528\u6b63\u4f59\u5f26\u4fe1\u53f7\u8868\u793a -&gt; Fourier Transform</li> </ol> \\[ \\begin{aligned}&amp;\\bullet F(u)=\\int_{-\\infty}^{\\infty}f(x)e^{-i2\\pi ux} dx\\newline &amp;\\bullet f(x)=\\int_{-\\infty}^{\\infty}F(u)e^{i2\\pi ux} du\\newline &amp;\\bullet x{:}\\mathrm{space},u{:}\\mathrm{frequency},e^{i\\theta}=cos\\theta+isin\\theta,\\newline &amp;i=\\sqrt{-1}\\end{aligned} \\] <ul> <li>\u9ad8\u65af\u51fd\u6570\u7684\u5085\u91cc\u53f6\u53d8\u6362\u8fd8\u662f\u9ad8\u65af\u51fd\u6570</li> </ul> <ol> <li> <p>Convolution Theorem\uff1a\u7a7a\u95f4\u57df\u548c\u9891\u57df\u4e4b\u95f4\u7684\u5173\u7cfb</p> <ul> <li>\u7a7a\u95f4\u57df\u4e2d\u7684\u5377\u79ef\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u9891\u7387\u57df\u4e2d\u7684\u9010\u70b9\u4e58\u6cd5\u64cd\u4f5c</li> <li>\u5e94\u7528\u5377\u79ef\u5b9a\u7406\u7684\u6b65\u9aa4<ol> <li>\u8ba1\u7b97\u5085\u91cc\u53f6\u53d8\u6362\uff1a\u5c06\\(f(x,y)\\)\u548c\\(g(x,y)\\)\u901a\u8fc7\u4e8c\u7ef4\u5085\u91cc\u53f6\u53d8\u6362\u8f6c\u6362\u4e3a\\(F(u,v)\\)\u548c\\(G(u,v)\\)\u3002</li> <li>\u5728\u9891\u7387\u57df\u4e2d\u76f8\u4e58\uff1a\u8ba1\u7b97\u4e58\u79ef\\(H(u,v)=F(u,v)\\cdot G(u,v)\\)\u3002</li> <li>\u9006\u5085\u91cc\u53f6\u53d8\u6362\uff1a\u5c06\\(H(u,v)\\)\u901a\u8fc7\u9006\u5085\u91cc\u53f6\u53d8\u6362\u8f6c\u6362\u56de\u7a7a\u95f4\u57df\uff0c\u5f97\u5230\u5377\u79ef\u7ed3\u679c\\(h(x,y)\\)\u3002</li> </ol> </li> </ul> </li> </ol> <ol> <li>box filter = low-pass filter \u5168\u662f1<ul> <li>wider kernel = lower frequency</li> </ul> </li> <li>\u91c7\u6837\u9891\u7387\u4f4e\uff0c\u5728\u9891\u57df\u8109\u51b2\u5bc6\u96c6\uff0c\u4ea7\u751f\u6df7\u53e0\uff0c\u5bfc\u81f4\u91c7\u6837\u5931\u771f</li> </ol> <ul> <li> <p>\u89e3\u51b3\u63aa\u65bd</p> </li> <li> <p>\u63d0\u9ad8\u91c7\u6837\u7387 Nyquist-Shannon theorem: Consider a band-limited signal: has no frequencies above \\(f_0\\), the signal can be perfectly reconstructed if sampled with a frequency larger than \\(2f_0\\) </p> <p>important</p> </li> <li> <p>Anti-aliasing: Filtering out high frequendcies before sampling</p> <ol> <li> <p>Convolve the image with low-pass filters (e.g. Gaussian)</p> </li> <li> <p>Sample it with a Nyquist rate</p> </li> </ol> </li> </ul>"},{"location":"CV/cv3/#image-magnification","title":"Image Magnification","text":"<ol> <li> <p>\u63d2\u503c</p> <ul> <li> <p>Nearest-neighbor interpolation\uff1a\u4e0d\u8fde\u7eed\u4e0d\u5e73\u6ed1</p> </li> <li> <p>Linear interpolation\uff1a\u8fde\u7eed\uff0c\u4e0d\u5e73\u6ed1</p> </li> <li> <p>Cubic interpolation\uff1a\u7528\u4e09\u6b21\u66f2\u7ebf\u903c\u8fd1\uff0c\u8fde\u7eed\uff0c\u5e73\u6ed1</p> </li> <li> <p>Bilinear Interpolation</p> <ul> <li>Generally bilinear is good enough</li> </ul> <p></p> </li> <li> <p>Bicubic Interpolation: \\(p(x,y)=\\sum_{i=0}^3\\sum_{j=0}^3a_{ij}x^iy^j\\)</p> </li> </ul> </li> </ol>"},{"location":"CV/cv3/#change-aspect-ratio","title":"Change Aspect Ratio","text":"<ol> <li> <p>Basic idea:</p> <ul> <li>Problem statement: we need to remove \\(n\\) pixels from each row</li> <li>Basic idea: remove unimportant pixels</li> </ul> </li> <li> <p>Importance of pixel</p> <ul> <li>Edge energgy: \\(E(I)=|\\dfrac{\\partial I}{\\partial x}|+|\\dfrac{\\partial I}{\\partial y}|\\)</li> <li>\u8ba1\u7b97\uff1a\u901a\u8fc7\u5377\u79ef</li> </ul> </li> <li> <p>Seam carving: Find connected path of pixels from top to bottom of which the edge energy is minimal\u3002\u6bcf\u6b21\u6bcf\u884c\u5220\u9664\u4e00\u4e2a\u50cf\u7d20\uff0c\u8981\u5220\u9664n\u4e2a\u5219\u8dd1n\u6b21</p> <ul> <li> <p>solved by dynamic programming:</p> <ul> <li>If \\(M(i,j)\\) = minimal energy of a seam going through \\((i,j)\\)</li> <li>Then</li> </ul> \\[ \\mathbf{M}(i,j)=E(i,j)+\\min\\left(\\mathbf{M}(i-1,j-1),\\mathbf{M}(i-1,j),\\mathbf{M}(i-1,j+1)\\right) \\] </li> </ul> </li> <li> <p>Seam insertion: Find \\(k\\) seams to insert, then interpolate pixels</p> </li> </ol>"},{"location":"CV/cv4/","title":"Lec.04: Model Fitting and Optimization","text":""},{"location":"CV/cv4/#optimization","title":"Optimization","text":"<ol> <li> <p>objective function, inequality constraint functions, equality constraint functions $$ \\begin{aligned}\\text{minimize}   &amp; f_0(x)\\newline  \\text{subject to}   &amp; f_i(x)\\leq0,\\quad i=1,\\ldots,m\\newline &amp;g_i(x)=0,\\quad i=1,\\ldots,p\\end{aligned} $$</p> <p>Example</p> <p></p> </li> <li> <p>Model fitting: a mathematical model \\(b=f_x(a)\\)</p> </li> <li> <p>MSE: \\(\\widehat{x}=\\underset{x}{\\operatorname*{argmin}}\\Sigma_i(b_i-a_i^Tx)^2\\)</p> <ul> <li>Why MSE: \u5bf9\u566a\u58f0\u6ca1\u6709\u4efb\u4f55\u5148\u9a8c\u77e5\u8bc6\u60c5\u51b5\u4e0b\uff0c\u8ba4\u4e3a\u5404\u79cd\u566a\u58f0\u7684\u548c\u662f\u9ad8\u65af\u566a\u58f0</li> <li>Gaussian noise: \\(b_i=a_i^Tx+n,n\\sim G(0,\\sigma)\\)</li> <li>then given \\(x\\), the likelihood of observing \\((a_i,b_i)\\) is </li> </ul> <p>$$    P[(a_i,b_i)|x]=P[b_i-a_i^Tx]\\propto\\exp-\\frac{(b_i-a_i^Tx)^2}{2\\sigma^2}    $$</p> <ul> <li>if the data points are independent</li> </ul> <p>$$    \\begin{aligned}    &amp;\\begin{aligned}P[(a_1,b_1)(a_2,b_2)...|x]\\end{aligned} \\newline     &amp;=\\prod_{i}P[(a_{i},b_{i})|x] \\newline     &amp;=\\prod_iP[b_i-a_i^Tx] \\newline     &amp;\\propto\\exp-\\frac{\\sum_{i}(b_{i}-a_{i}^{T}x)^{2}}{2\\sigma^{2}}=\\exp-\\frac{|Ax-b|_{2}^{2}}{2\\sigma^{2}}    \\end{aligned}    $$</p> <ul> <li>MLE = \u6700\u5927\u5316\u4e0a\u8ff0\u6982\u7387\u76f8\u5f53\u4e8e\u6700\u5c0f\u5316\\(||Ax-b||^2_2\\)\u3002\u56e0\u6b64MSE = MLE with Gaussian noise assumption</li> </ul> </li> </ol>"},{"location":"CV/cv4/#numerical-methods","title":"Numerical methods","text":"<ol> <li> <p>overall:</p> <ul> <li>\\(x\\leftarrow x_0\\%\\) Initialization</li> <li>while not converge<ul> <li>\\(\\boldsymbol{h}\\leftarrow\\)descending_direction\\((\\boldsymbol x)\\ \\%\\) determine the direction</li> <li>\\(\\alpha\\leftarrow\\)descending_step\\((\\boldsymbol{x},\\boldsymbol{h})\\ \\%\\) determine the step</li> <li>\\(x\\leftarrow x+\\alpha\\boldsymbol{h}\\ \\%\\) update the parameters</li> </ul> </li> </ul> </li> <li> <p>Taylor expansion</p> <ul> <li>First-order: \\(F(x_k+\\Delta x)\\approx F(x_k)+J_F\\Delta x\\),\\(J_F=[\\dfrac{\\partial f}{\\partial x_1}\\cdots\\dfrac{\\partial f}{\\partial x_n}]\\)\u4e3aJacobian matrix </li> <li>Second-order: \\(F(x_k+\\Delta x)\\approx F(x_k)+J_F\\Delta x+\\dfrac{1}{2}\\Delta x^TH_F\\Delta x\\),\\(H_F\\)\u4e3aHessian matrix</li> </ul> <p>$$   \\mathbf{H}=\\begin{bmatrix}\\frac{\\partial^2f}{\\partial x_1^2}&amp;\\frac{\\partial^2f}{\\partial x_1\\partial x_2}&amp;\\cdots&amp;\\frac{\\partial^2f}{\\partial x_1 \\partial x_n}\\newline \\newline \\frac{\\partial^2f}{\\partial x_2 \\partial x_1}&amp;\\frac{\\partial^2f}{\\partial x_2^2}&amp;\\cdots&amp;\\frac{\\partial^2f}{\\partial x_2 \\partial x_n}\\newline \\newline \\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\newline \\newline \\frac{\\partial^2f}{\\partial x_n \\partial x_1}&amp;\\frac{\\partial^2f}{\\partial x_n \\partial x_2}&amp;\\cdots&amp;\\frac{\\partial^2f}{\\partial x_n^2}\\end{bmatrix}   $$</p> </li> <li> <p>Steepest descent method: When direction of \\(\\Delta x\\) is same as \\(-J_F^T\\), the objective function descend steepest</p> <ul> <li>Advantage<ul> <li>Easy to implement</li> <li>Perform well when far from the minimum</li> </ul> </li> <li>Disadvantage<ul> <li>Converge slowly when near the minimum</li> <li>Waste a lot of computation</li> </ul> </li> <li>Reason<ul> <li>Only use first-order derivative</li> <li>Does not use curvature(\u66f2\u7387)</li> </ul> </li> </ul> </li> <li> <p>determine the step size</p> <ul> <li>exact line search: too slow</li> <li>backtracking algorithm<ul> <li>initial \\(\\alpha\\) with a big value</li> <li>decrease \\(\\alpha\\) until $\\phi(\\alpha)\\leq\\phi(0)+\\gamma\\phi^{\\prime}(0)\\alpha, 0&lt;\\gamma&lt;1 $</li> </ul> </li> </ul> </li> </ol> <ol> <li> <p>Newton method: \u7528\u4e8c\u9636\u6cf0\u52d2\u5c55\u5f00\uff0cNewton step \\(\\Delta x=-H_F^{-1}J_F^T\\)</p> <ul> <li>Advantage: fast convergence near the minimum</li> <li>Disadvantage: Hessian\u77e9\u9635\u7684\u8ba1\u7b97\u6d88\u8017\u8d44\u6e90\u91cf\u5927\u3002\u6539\u8fdb\uff1a\u8fd1\u4f3c\u8ba1\u7b97Hessian\u9635</li> </ul> </li> <li> <p>Gauss-Newton method: useful for solving nonlinear least squares</p> <ul> <li> <p>\\(\\widehat{x}=\\underset{x}{\\operatorname*{argmin}}\\|R(x)\\|_2^2=F(x)\\),\\(R(x)\\)\u4e3a\u6b8b\u5dee</p> </li> <li> <p>instead of expanding \\(F(x)\\), we expand \\(R(x)\\)</p> </li> <li> <p>\\(J_R\\) is the Jacobian of \\(R(x)\\)</p> </li> </ul> \\[ \\begin{aligned}\\|R(x_{k}+\\Delta x)\\|_2^2 &amp; \\approx\\|R(x_{k})+J_{R}\\Delta x\\|_2^2\\quad\\newline   &amp; =\\|R(x_{k})\\|_2^2+2R(x_{k})^{T}J_{R}\\Delta x+\\Delta x^{T}J_{R}^{T}J_{R}\\Delta x\\end{aligned} \\] <ul> <li> <p>\u6700\u4f18\u89e3\u6ee1\u8db3: \\(J_R^TJ_R\\Delta x+J_R^TR(x_k)=0,\\Delta x=-(J_R^TJ_R)^{-1}J_R^TR(x_k)\\)</p> </li> <li> <p>\u4f18\u70b9\uff1a\u4e0d\u7528\u7b97Hessian\u9635, fast to converge</p> </li> <li> <p>\u7f3a\u70b9\uff1a\u82e5\\(J_R^TJ_R\\)\u4e3a\u5947\u5f02\u7684\uff0c\u5373\u4e0d\u6ee1\u79e9\uff0c\u7279\u5f81\u503c\u6709\u53ef\u80fd\u4e3a0\uff0c\u7b97\u6cd5\u4e0d\u7a33\u5b9a</p> </li> </ul> </li> <li> <p>Levenberg-Marquardt\uff1a\\(\\Delta x=-(J_R^TJ_R+\\lambda I)^{-1}J_R^TR(x_k)\\),\u5bf9\\(\\lambda&gt;0\\)\uff0c\\(J_R^TJ_R+\\lambda I\\)\u4e00\u5b9a\u662f\u6b63\u5b9a\u7684</p> <ul> <li>Advantage:<ul> <li>Start quickly: \\(\\lambda\\uparrow\\)</li> <li>Converge quickly: \\(\\lambda\\downarrow\\)</li> <li>Do not degenerate: \\(J_R^TJ_R+\\lambda I\\) is always positive-definite</li> <li>LM = Gradient descent + Gauss-Newton</li> <li>\\(\\lambda\\)\u5f88\u5927 stepsize\u5f88\u5c0f\u7684gradient descent</li> <li>\\(\\lambda\\)\u5f88\u5927 Guass-Newton</li> </ul> </li> </ul> </li> </ol>"},{"location":"CV/cv4/#robust-estimation","title":"Robust estimation","text":"<ol> <li>Inlier: obey the model assumption</li> </ol> <p>Outlier: differ significantly from the assumption</p> <ol> <li>use other loss functions to replace MSE to reduce the effect<ul> <li>like L1, Huber. They are called robust functions</li> </ul> </li> </ol> <ol> <li> <p>RANSAC(Random Sample Concensus): The most powerful method to handle outliers</p> <ul> <li>Key idea: The distribution of inliers is similar while outliers differ a lot, use data point pairs to vote</li> </ul> </li> <li> <p>ill-posed problem: the solution is not unique.</p> <ul> <li>example:\u65b9\u7a0b\u4e2a\u6570\u5c11\u4e8e\u53d8\u91cf\u4e2a\u6570</li> <li>solution: use prior knowledge to add more constraints<ul> <li>L2, L1 regularization</li> </ul> </li> </ul> </li> </ol>"},{"location":"CV/cv4/#graphcut","title":"Graphcut","text":"<p>\u4ee5\u540e\u8bb2\uff0c\u4e0d\u8003</p> <ol> <li> <p>Image labeling problems</p> <ul> <li>Assign a label to each image pixel</li> <li>Neighboring pixels tend to take the same label</li> <li>treat images as graphs<ul> <li>a vertex for each pixel</li> <li>an edge between each pair</li> </ul> </li> </ul> </li> <li> <p>Measuring affinity: let \\(i\\) and \\(j\\) be two pixels whose features are \\(f_i\\) and \\(f_j\\) (color for example)</p> <ul> <li>pixel dissimilarity</li> </ul> \\[ S\\left(\\mathbf{f}_{i},\\mathbf{f}_{j}\\right)=\\sqrt{\\left(\\sum_{k}\\left(f_{ik}-f_{jk}\\right)^{2}\\right)} \\] <ul> <li>pixel affinity</li> </ul> \\[ w(i,j)=A\\left(\\mathbf{f}_{i},\\mathbf{f}_{j}\\right)=e^{\\left\\{\\frac{-1}{2\\sigma^{2}}S\\left(\\mathbf{f}_{t},\\mathbf{f}_{j}\\right)\\right\\}} \\] </li> <li> <p>Graph cut</p> <ul> <li>cut \\(C=(V_A, V_B)\\) is a partition of vertices \\(V\\) of a graph \\(G\\) into two disjoint subsets \\(V_A\\) and \\(V_B\\)</li> <li>qcost of cut: sum of weights of cut-set edges \\(cut(V_A, V_B)=\\sum\\limits_{u\\in V_A,v\\in V_B}w(u,v)\\)</li> </ul> </li> <li> <p>Segmentation as graph cut</p> <ul> <li>Vertices within a subgraph have high affinity</li> <li>Vertices from two different subgraphs have low affinity</li> </ul> </li> </ol> <ol> <li>normalized cut    $$    \\begin{aligned}\\mathrm{NCut}\\left(V_A,V_B\\right)&amp;=\\frac{\\operatorname{cut}\\left(V_A,V_B\\right)}{\\operatorname{assoc}\\left(V_A,V\\right)}+\\frac{\\operatorname{cut}\\left(V_A,V_B\\right)}{\\operatorname{assoc}\\left(V_B,V\\right)}\\newline &amp;\\operatorname{assoc}(V_A,V)=\\sum_{u\\in V_A,v\\in V}w(u,v)\\end{aligned}    $$</li> </ol>"},{"location":"CV/cv5/","title":"Lec.05: Image Matching and Motion Estimation","text":""},{"location":"CV/cv5/#image-matching","title":"Image matching","text":"<ol> <li> <p>Main Components of Feature matching</p> <ul> <li>Detection: identify the interest points</li> <li>Description: extract vector feature descriptor surrounding each interest point</li> <li>Matching: determine correspondence between descriptors in two views</li> </ul> </li> </ol>"},{"location":"CV/cv5/#detection","title":"Detection","text":"<ol> <li>local measures of uniqueness: consider a small window of pixels (region), shifting the window in any direction causes a big change</li> </ol> <ol> <li> <p>Principal Component Analysis</p> <ul> <li>The 1<sup>st</sup> principal component is the direction with highest variance.</li> <li>The 2<sup>nd</sup> principal component is the direction with highest variance which is orthogonal to the previous components.</li> </ul> </li> </ol> <ol> <li> <p>Corner detection</p> <ul> <li>Compute the covariance matrix at each point\u3002\\(w\\)\u4e3a\u9ad8\u65af\u6743\u91cd\uff0c\u5373\u8d8a\u4e2d\u5fc3\u6743\u91cd\u8d8a\u9ad8</li> </ul> <p>$$   H=\\sum_{(u,v)}w(u,v)\\left[\\begin{array}{cc}{I_{x}^{2}}&amp;{I_{x}I_{y}}\\newline {I_{x}I_{y}}&amp;{I_{y}^{2}}\\newline \\end{array}\\right]\\quad I_{x}=\\frac{\\partial f}{\\partial x},I_{y}=\\frac{\\partial f}{\\partial y}   $$</p> <ul> <li> <p>\u4e8c\u7ef4\u60c5\u51b5\u4e0b\u7279\u5f81\u503c\u6709\u89e3\u6790\u89e3     $$     H=\\begin{bmatrix}a   b\\newline c   d\\end{bmatrix}\\quad\\lambda_{\\pm}=\\frac{1}{2}\\left((a+d)\\pm\\sqrt{4bc+(a-d)^{2}}\\right)     $$</p> </li> <li> <p>Classify points using eigenvalues of \\(H\\)</p> </li> <li> <p>\u7b80\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Harris operator\u3002\u901a\u8fc7\u8bbe\u7f6ethreshold\u8fdb\u884c\u4e8c\u503c\u5316\u3002\u6700\u540e\u627e\u5230response function\u7684\u5c40\u90e8\u6700\u5927\u503c     $$     f=\\frac{\\lambda_1\\lambda_2}{\\lambda_1+\\lambda_2}=\\frac{determinant(H)}{trace(H)}     $$</p> </li> </ul> </li> </ol> <ol> <li> <p>Harris detector   - Compute derivatives at each pixel   - Compute covariance matrix \\(H\\) in a Gaussian window around each pixel    - Compute corner response function \\(f\\)   - Threshold \\(f\\)   - Find local maxima of response function (nonmaximum suppression)</p> </li> <li> <p>\u7279\u5f81\u70b9\u7684\u53ef\u91cd\u590d\u6027: We want response value \\(f\\) at the corresponding pixels to be invariant to image tran sformations</p> <ul> <li>Intensity change(\u4eae\u5ea6):\u6781\u503c\u4f1a\u53d8\uff0c\u6781\u503c\u70b9\u4e0d\u4f1a, partially invarient</li> </ul> <p></p> <ul> <li> <p>\u5e73\u79fb\u3001\u65cb\u8f6c: \u4e0d\u53d8</p> </li> <li> <p>\u7f29\u653e\uff1acorner response\u5bf9\u7f29\u653e\u4e0d\u662finvariant\u7684\u3002</p> </li> <li> <p>\u5bf9\u4eff\u5c04\u53d8\u6362\u548c\u975e\u7ebf\u6027\u4eae\u5ea6\u53d8\u6362\u4e5f\u4e0d\u662f\u4e0d\u53d8\u7684</p> <p></p> <ul> <li>solution\uff1a\u5728\u4e0d\u540c\u7a97\u53e3\u5927\u5c0f\u4e0b\u8ba1\u7b97</li> <li>implementation: Instead of computing \\(f\\) for larger and larger windows, we can implement using a fixed window size with an image pyramid</li> </ul> </li> </ul> </li> </ol> <ol> <li> <p>Blob detector:\u6591\u70b9\u5728\u4eae\u5ea6\u56fe\u4e2d\u4e8c\u9636\u5bfc\u503c\u8f83\u5927</p> <ul> <li> <p>Laplacian filter</p> <ul> <li>\\(\\nabla^2=\\frac{\\partial^2}{\\partial x^2}+\\frac{\\partial^2}{\\partial y^2}\\)</li> <li>\u8fd1\u4f3c</li> </ul> <p></p> <ul> <li>\u52a0\u8d77\u6765\u5f97\u5230Laplacian filter</li> </ul> </li> <li> <p>Laplacian\u5bf9noise\u654f\u611f\uff0c\u901a\u5e38\u4f7f\u7528Laplacian of Gaussian(LoG) filter\uff0c\u5229\u7528\u9ad8\u65af\u6838smooth image</p> <ul> <li>implementation: \\(\\nabla^2(f*g)=f*\\nabla^2g\\)\u200b, \\(g\\)\u200b \u4e3a2D Gaussian function. The scale of LoG is controlled by \\(\\sigma\\) of Gaussian</li> </ul> </li> <li> <p>Scale selection: Feature points are local maxima in both position and scale. \u628ascale\u4f5c\u4e3a\u7b2c\u4e09\u7ef4\u5ea6</p> </li> </ul> <p></p> </li> <li> <p>DoG: LoG can be approximated by Difference of two Gaussians (DoG) OpenCV\u4e2d\u5e38\u7528</p> <ul> <li>computing DoG at different scales \u5728\u56fe\u50cf\u91d1\u5b57\u5854\u4e2d\u5bf9\u4e0d\u540c\\(\\sigma\\)\u76f8\u51cf\u5c31\u53ef\u4ee5\u5f97\u5230\u4e0d\u540cscale\u4e0b\u7684DoG</li> </ul> </li> </ol>"},{"location":"CV/cv5/#description","title":"Description","text":"<ol> <li> <p>SIFT(Scale Invarient Feature Transform) descriptor:\u8003\u5bdfregion\u5185\u68af\u5ea6\u65b9\u5411\u7684\u5206\u5e03\uff0c\u7528\u76f4\u65b9\u56fe\u4f5c\u4e3a\u63cf\u8ff0\u5b50</p> <ul> <li>\u5e73\u79fb\u4e0d\u53d1\u751f\u53d8\u5316</li> <li>\u65cb\u8f6c\u67f1\u72b6\u56fe\u6574\u4f53\u5e73\u79fb\u3002\u5904\u7406\uff1a\u5f52\u4e00\u5316\uff0c\u6700\u5927\u7684\u653e\u6700\u5de6\u4fa7</li> <li>\u7f29\u653e\uff1a\u7a97\u53e3\u5927\u5c0f\u7531DoG detector\u68c0\u6d4b\u7279\u5f81\u70b9\u65f6\u51b3\u5b9a\uff0c\u56e0\u6b64invariant</li> <li>algorithm\uff1aDoG\u627e\u5230maxima\uff0c\u5bf9\u65cb\u8f6c\u8fdb\u884cdominate orientation\uff0c\u6700\u540ecreate descriptor</li> </ul> </li> </ol> <ol> <li> <p>Properties of SIFT: Extraordinarily robust matching technique</p> <ul> <li>Can handle changes in viewpoint: Theoretically invariant to scale and rotation</li> <li>Can handle significant changes in illumination: Sometimes even day vs. night</li> <li>Fast and efficient: can run in real time</li> <li>Lots of code available</li> </ul> </li> </ol>"},{"location":"CV/cv5/#matching","title":"Matching","text":"<ol> <li> <p>Feature distance:</p> <ul> <li>simple approach \\(\\|f_1-f_2\\|\\), can give small distances for ambiguous (incorrect) matches </li> <li>ratio test: ratio score = \\(\\dfrac{\\|f_1-f_2\\|}{\\|f_1-f_2'\\|}\\)<ul> <li>\\(f_2\\)\u662fbest match, \\(f_2'\\)\u662f2nd best match</li> <li>\u5f88\u63a5\u8fd11\u8bf4\u660e\u5f88\u8fd1\u4f3c\uff0c\u5219\u4e0d\u5bf9\u6b64\u70b9\u8fdb\u884c\u5339\u914d</li> </ul> </li> </ul> </li> <li> <p>Another strategy: find mutual nearest neighbors \u5373\u627e\u5230\u4e00\u5bf9\u7279\u5f81\u70b9\uff0c\u5f7c\u6b64\u4e92\u4e3a\u56fe\u4e2d\u6700\u8fd1\u4f3c\u7684\u70b9</p> </li> <li> <p>Deep Learning</p> </li> </ol>"},{"location":"CV/cv5/#motion-estimation","title":"Motion estimation","text":"<ol> <li> <p>problem</p> <ul> <li>feature-tracking: \u63d0\u53d6\u8ffd\u8e2a\u7279\u5f81\u70b9\uff0c\u8f93\u51fa\u70b9\u7684\u4f4d\u79fb\u4fe1\u606f</li> <li>optical flow\uff1a\u6062\u590d\u6bcf\u4e2a\u50cf\u7d20\u5904\u7684\u56fe\u50cf\u8fd0\u52a8\uff0c\u8f93\u51fa\u5bc6\u96c6\u4f4d\u79fb\u573a\uff08\u5149\u6d41\uff09</li> </ul> </li> </ol>"},{"location":"CV/cv5/#lucas-kanade-method","title":"Lucas-Kanade method","text":"<ol> <li> <p>Key assumptions</p> <ul> <li> <p>small motion: poitns do not move very far</p> </li> <li> <p>brightness constancy: same point looks the same in every frame</p> <ul> <li>\\(I(x,y,t)=I(x+u,y+v,t+1)\\)</li> <li>Taylor expansion assuming small motion</li> <li>\u8fd9\u68371\u4e2a\u65b9\u7a0b\uff0c\u4f46\u662f\u67092\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u9700\u8981\u66f4\u591a\u7684\u65b9\u7a0b\uff0c\u5c31\u6709\u4e86\u7b2c\u4e09\u4e2a\u5047\u8bbe</li> </ul> <p></p> </li> <li> <p>spatial coherence: points move like their neighbors</p> <ul> <li>assume the pixel's neighbors have the same \\((u,v)\\)</li> <li>for \\(5\\times5\\) window, that gives us 25 equations per pixel</li> </ul> </li> </ul> <p>$$     \\left.\\left[\\begin{array}{cc}I_x(\\mathbf{p_1})&amp;I_y(\\mathbf{p_1})\\newline I_x(\\mathbf{p_2})&amp;I_y(\\mathbf{p_2})\\newline \\vdots&amp;\\vdots\\newline I_x(\\mathbf{p_{25}})&amp;I_y(\\mathbf{p_{25}})\\end{array}\\right.\\right]\\left[\\begin{array}{c}u\\newline v\\end{array}\\right]=-\\left[\\begin{array}{c}I_t(\\mathbf{p_1})\\newline I_t(\\mathbf{p_2})\\newline \\vdots\\newline I_t(\\mathbf{p_{25}})\\end{array}\\right]    $$</p> <pre><code>- \u5373$Ad=b$,\u65b9\u7a0b\u4e2a\u6570\u8fdc\u591a\u4e8e\u53d8\u91cf\uff0c\u5f88\u53ef\u80fd\u6ca1\u89e3\uff0c\u56e0\u6b64solve $\\min\\limits_d\\|Ad-b\\|^2$\n- \u5373$(A^TA)d=A^Tb$\n</code></pre> <p>$$     \\left[\\begin{array}{cc}\\sum I_xI_x&amp;\\sum I_xI_y\\newline \\sum I_xI_y&amp;\\sum I_yI_y\\end{array}\\right]\\left[\\begin{array}{c}u\\newline v\\end{array}\\right]=-\\left[\\begin{array}{c}\\sum I_xI_t\\newline \\sum I_yI_t\\end{array}\\right]    $$</p> <pre><code>- \u6709\u89e3\u5de6\u4fa7\u8981\u53ef\u9006\uff0c\u5bf9\u5e94\u4e24\u4e2a\u7279\u5f81\u503c$\\lambda_1$\u548c$\\lambda_2$\u4e0d\u80fd\u592a\u5c0f\uff0c\u5bf9\u5e94\u4e4b\u524d\u63d0\u5230\u7684\u8fb9\u7f18\u68c0\u6d4b\uff0c\u9700\u8981\u662fcorner\u70b9\n\n  - The aperture problem \u65e0\u6cd5\u5224\u65ad\u6cbf\u5b54\u5f84\u65b9\u5411\u7684\u8fd0\u52a8\n\n  &lt;div align=\"center\"&gt;&lt;img src=\"https://pixe1ran9e.oss-cn-hangzhou.aliyuncs.com/image-20241017122234538.png\" alt=\"image-20241017122234538\" style=\"zoom: 33%;\" /&gt;&lt;/div&gt;\n</code></pre> </li> <li> <p>\u597d\u8ddf\u8e2a\u7684\u70b9\uff1a\u7eb9\u7406\u4e30\u5bcc\u7684\u70b9</p> </li> <li> <p>Errors in Lukas-Kanade</p> <ul> <li> <p>Brightness constancy is not satisfied \u5982\u5f00\u5173\u706f\u3001\u8fdb\u51fa\u96a7\u9053</p> <ul> <li>solution: \u68af\u5ea6\u662f\u4e0d\u53d8\u7684</li> </ul> </li> <li> <p>The motion is not small \u8dd1\u6b65\u7684\u4eba</p> <ul> <li>solution: \u964d\u4f4e\u5206\u8fa8\u7387, coarse-to-fine optical flow estimation</li> </ul> <p></p> </li> <li> <p>A point does not move like its neighbors \u8fb9\u7f18</p> </li> </ul> </li> </ol>"},{"location":"CV/cv6/","title":"Lec.06: Image stitching","text":""},{"location":"CV/cv6/#image-warping","title":"Image Warping","text":"<ol> <li> <p>parametric(global) warping: \u6240\u6709\u50cf\u7d20\u70b9\u9075\u5faa\u7edf\u4e00\u7684\u53d8\u6362, \\(p'=T(p)\\)</p> </li> <li> <p>projective transformation(Homography \u5355\u5e94\u53d8\u6362): \u900f\u89c6\u6295\u5f71\u3001\u53d8\u6362</p> <ul> <li>\u81ea\u7531\u5ea6\u4e3a8\uff0c\u56e0\u4e3a\u9f50\u6b21\u5750\u6807\u7cfb\u4e0b\u653e\u7f29\u6ca1\u6709\u5f71\u54cd\uff0c\u6211\u4eec\u901a\u5e38\u7ea6\u675f\\([h_{00}\\ h_{01}\\dots h_{22}]\\)\u7684\u957f\u5ea6\u4e3a1</li> </ul> </li> </ol> <ol> <li>Change projection plane</li> </ol> <ol> <li> <p>\u4ec0\u4e48\u65f6\u5019\u662f\u5355\u5e94\u53d8\u6362</p> <ul> <li>\u76f8\u673a\u7ed5\u5176\u4e2d\u5fc3\u8f6c\u52a8</li> <li>\u76f8\u673a\u4e2d\u5fc3\u79fb\u52a8\u5e76\u4e14\u62cd\u6444\u5185\u5bb9\u5728\u4e00\u4e2a\u5e73\u9762\u4e0a</li> </ul> </li> <li> <p>Inverse Transform(\\(T^{-1}\\)): \u5c06\u53d8\u6362\u56fe\u7247\u6bcf\u4e2a\u50cf\u7d20\u70b9\u901a\u8fc7\u9006\u53d8\u6362\u6620\u5c04\u5230\u539f\u56fe\u7684\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u82e5\u5750\u6807\u4e0d\u4e3a\u6574\u6570\u5219\u5229\u7528\u63d2\u503c\u5f97\u5230\u5bf9\u5e94\u50cf\u7d20</p> </li> </ol>"},{"location":"CV/cv6/#image-stitching","title":"Image Stitching","text":"<ol> <li> <p>Affine transformation</p> \\[ \\left[\\begin{array}{c}x'\\newline y'\\newline 1\\end{array}\\right]=\\left[\\begin{array}{ccc}a&amp;b&amp;c\\newline d&amp;e&amp;f\\newline 0&amp;0&amp;1\\end{array}\\right]\\left[\\begin{array}{c}x\\newline y\\newline 1\\end{array}\\right]=\\left[\\begin{array}{c}ax+by+c\\newline dx+ey+f\\newline 1\\end{array}\\right] \\] <ul> <li>for each match</li> </ul> \\[ x^{\\prime}=ax+by+c\\newline y^{\\prime}=dx+ey+f \\] <ul> <li>for \\(n\\) matches</li> </ul> \\[ \\left[\\begin{array}{cccccc}x_1&amp;y_1&amp;1&amp;0&amp;0&amp;0\\newline 0&amp;0&amp;0&amp;x_1&amp;y_1&amp;1\\newline x_2&amp;y_2&amp;1&amp;0&amp;0&amp;0\\newline 0&amp;0&amp;0&amp;x_2&amp;y_2&amp;1\\newline &amp;&amp;\\vdots&amp;&amp;&amp;\\newline x_n&amp;y_n&amp;1&amp;0&amp;0&amp;0\\newline 0&amp;0&amp;0&amp;x_n&amp;y_n&amp;1\\end{array}\\right]\\left[\\begin{array}{c}a\\newline b\\newline c\\newline d\\newline e\\newline f\\end{array}\\right]=\\left[\\begin{array}{c}x_1'\\newline y_1'\\newline \\newline x_2'\\newline y_2'\\newline \\newline \\vdots\\newline x_n'\\newline y_n'\\end{array}\\right] \\] <ul> <li> <p>solve \\(t\\): find \\(t\\) that minimizes $$ |At-b |^2 $$</p> </li> <li> <p>solution is given by $$ A^TAt=A^Tb t=(A^TA)^{-1}A^Tb $$</p> </li> </ul> </li> <li> <p>projective transformations</p> </li> </ol> <ul> <li>solving for homographies</li> </ul> <p>$$ x_i'\\left(h_{20}x_i+h_{21}y_i+h_{22}\\right)=h_{00}x_i+h_{01}y_i+h_{02} $$</p> <p>$$ y_i'\\left(h_{20}x_i+h_{21}y_i+h_{22}\\right)=h_{10}x_i+h_{11}y_i+h_{12} $$</p> <p>$$    \\left[\\begin{array}{cccccccc}x_i&amp;y_i&amp;1&amp;0&amp;0&amp;0&amp;-x_i'x_i&amp;-x_i'y_i&amp;-x_i'\\newline 0&amp;0&amp;0&amp;x_i&amp;y_i&amp;1&amp;-y_i'x_i&amp;-y_i'y_i&amp;-y_i'\\end{array}\\right]\\left[\\begin{array}{c}h_{00}\\newline h_{01}\\newline h_{02}\\newline h_{10}\\newline h_{11}\\newline h_{12}\\newline h_{20}\\newline h_{21}\\newline h_{22}\\end{array}\\right]=\\left[\\begin{array}{c}0\\newline 0\\end{array}\\right]    $$</p> <ol> <li> <p>RANSAC</p> <ul> <li> <p>Idea: All the inliers will agree with each other on the translation vector; The outliers will disagree with each other</p> <ul> <li>RANSAC only has guarantees if there are &lt;50% outliers</li> </ul> </li> <li> <p>General version:</p> <ol> <li> <p>Randomly choose \\(s\\) samples    - Typically \\(s\\) = minimum sample size that lets you fit a model</p> </li> <li> <p>Fit a model (e.g., transformation matrix) to those samples</p> </li> <li>Count the number of inliers that approximately fit the model</li> <li>Repeat \\(N\\) times</li> <li>Choose the model that has the largest set of inliers</li> <li>final step: least squares fit: Find average translation vector over all inliers</li> </ol> </li> </ul> </li> <li> <p>Cylindrical projection \u4e3a\u4e86\u505a360\u5ea6\u7684\u62fc\u63a5</p> </li> </ol> <ol> <li> <p>Cylindrical panoramas</p> <ul> <li>step<ul> <li>reproject each image onto a cylinder</li> <li>blend</li> <li>Cylindrical image stitching: A rotation of the camera is a translation of the cylinder!</li> </ul> </li> <li>problem: Drift<ul> <li>small errors accumulate over time</li> <li>solution: apply correction so that sum=0 for 360\u00b0 pan</li> </ul> </li> </ul> </li> </ol>"},{"location":"CV/cv7/","title":"Lec.07: Structure from Motion","text":"<p>Problems to be noticed</p> <ul> <li>\u76f8\u673a\u600e\u4e48\u628a\u4e09\u7ef4\u70b9\u6620\u5c04\u5230\u56fe\u50cf\u5e73\u9762 by camera model</li> <li>\u600e\u4e48\u8ba1\u7b97\u76f8\u673a\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c camera calibration and pose estimation</li> <li>\u4ece\u56fe\u7247\u91cd\u5efa3D\u7ed3\u6784 structure from motion</li> </ul>"},{"location":"CV/cv7/#camera-model","title":"Camera model","text":"<ol> <li>Image Formation:\u4e16\u754c\u5750\u6807\u7cfb-&gt;\u76f8\u673a\u5750\u6807\u7cfb-&gt;\u50cf\u5e73\u9762-&gt;\u50cf\u7d20\u5750\u6807</li> </ol> <ol> <li>\u76f8\u673a\u5750\u6807\u7cfb\u5bf9\u9f50\u5230\u4e16\u754c\u5750\u6807\u7cfb extrinsic parameters\u5305\u62ec\u76f8\u673a\u5750\u6807\u548c\u65cb\u8f6c\u89d2\u5ea6\\((R,c_w)\\)</li> </ol> <p>R\u662f\u6b63\u4ea4\u5355\u4f4d\u9635</p> <pre><code>&lt;div align=\"center\"&gt;&lt;img src=\"https://pixe1ran9e.oss-cn-hangzhou.aliyuncs.com/image-20241031100719537.png\" alt=\"image-20241031100719537\" style=\"zoom:50%;\" /&gt;&lt;/div&gt;\n\n  - world-to-camera transformation\n\n&lt;div align=\"center\"&gt;&lt;img src=\"https://pixe1ran9e.oss-cn-hangzhou.aliyuncs.com/image-20241031100744974.png\" alt=\"image-20241031100744974\" style=\"zoom:50%;\" /&gt;&lt;/div&gt;\n\n  - \u9f50\u6b21\u5750\u6807\u7cfb\u4e0b\n\n&lt;div align=\"center\"&gt;&lt;img src=\"https://pixe1ran9e.oss-cn-hangzhou.aliyuncs.com/image-20241031100805734.png\" alt=\"image-20241031100805734\" style=\"zoom:50%;\" /&gt;&lt;/div&gt;\n</code></pre> <ol> <li>camera coordinate\u6295\u5f71\u5230image plane</li> </ol> <ol> <li>image plane to image sensor mapping by intrinsic matrix</li> </ol> <ol> <li>\u603b\u7684projection matrix \\(P\\)</li> </ol>"},{"location":"CV/cv7/#camera-calibration","title":"Camera calibration","text":"<ol> <li> <p>Step 1: Capture an image of an object with known geometry. \u5982\u4f7f\u7528\u6807\u5b9a\u677f\u4f5c\u4e3a\u5df2\u77e5\u4e16\u754c\u5750\u6807\u7cfb</p> </li> <li> <p>Step 2: Identify correspondences between 3D scene points and image points.</p> </li> </ol> <ol> <li>Step 3: For each corresponding point \\(i\\) in scene and image:</li> </ol> <ol> <li>Step 4: Rearranging the terms </li> </ol> <ol> <li> <p>Step 5: Solve for \\(p\\) </p> <ul> <li>\u6ce8\u610f\u5230\u5bf9p\u7684\u6240\u6709\u6570\u540c\u65f6\u4e58\u9664\u4e00\u4e2a\u975e\u96f6\u6570\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c</li> <li>P is defined only up to a scale.</li> <li>\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u5b9a\u4e49\u6700\u540e\u4e00\u4e2a\u5206\u91cf\u4e3a1\u6216\u8005p\u7684\u6a21\u957f\u4e3a1</li> <li>\u6211\u4eec\u8ba9 \\(Ap\\) \u5c3d\u53ef\u80fd\u4e3a0\uff0c\u5373\\(\\min\\limits_{p}||Ap||^2\\)\u540c\u65f6\u4f7f\u5f97 \\(||p||^2=1\\)</li> <li>\u53ef\u4ee5\u77e5\u9053\u89e3\u662f\u77e9\u9635\\(A^TA\\)\u6700\u5c0f\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf</li> </ul> </li> </ol>"},{"location":"CV/cv7/#decompose-projection-matrices-to-intrinsic-and-extrinsic-matrices","title":"Decompose Projection Matrices to Intrinsic and Extrinsic Matrices","text":"<ul> <li>\u65cb\u8f6c\u77e9\u9635\u662f\u6b63\u4ea4\u7684\uff0c\u56e0\u4e3a\u884c\u5217\u5f0f\u503c\u4e3a1</li> <li>QR\u5206\u89e3\u53ef\u4ee5\u5c06\u4e00\u4e2a\u77e9\u9635\u5206\u89e3\u6210\u4e00\u4e2a\u4e0a\u4e09\u89d2\u77e9\u9635\u548c\u4e00\u4e2a\u6b63\u4ea4\u9635\u7684\u4e58\u79ef</li> </ul>"},{"location":"CV/cv7/#perspective-n-point-problem","title":"Perspective-n-Point problem","text":"<p>\u5047\u8bbe\u5185\u53c2\u662f\u56fa\u5b9a\u7684\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u900f\u89c6\u6295\u5f71\u4fe1\u606f\u6c42\u51fa\u76f8\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c</p> <ul> <li>6 unknowns: 3 for rotation, 3 for translation</li> <li>Usually called 6DoF pose estimation</li> </ul> <ol> <li>Direct Linear Transform (DLT) \u9700\u89816\u5bf9\u70b9</li> </ol> <ol> <li>P3P: using the minimal number of points(3). \u9700\u8981\u6c42\u89e3\u7684\u53ea\u6709OA, OB, OC\uff0c\u8f6c\u5316\u540e\u5373x,y</li> </ol> <ul> <li>\u8fd9\u4e2a\u4e8c\u5143\u4e8c\u6b21\u65b9\u7a0b\u6709\u56db\u4e2a\u53ef\u80fd\u89e3\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u70b9\u53bb\u51b3\u5b9a\u54ea\u4e2a\u89e3\u6700\u6709\u53ef\u80fd</li> </ul> <ol> <li>A more general solution for PnP problem: mminimizing the reprojection error \u91cd\u6295\u5f71\u8bef\u5dee. \\(p_i\\)\u4e3agiven 2D points\uff0c\u540e\u534a\u90e8\u5206\u5f0f\u5b50\u4e3a3D points\u6295\u5f71\u52302D</li> </ol> \\[ \\min_{R,t}\\sum_i\\|p_i-K(RP_i+t) \\|^2 \\]"},{"location":"CV/cv7/#structure-from-motion","title":"Structure from motion","text":""},{"location":"CV/cv7/#solving-sfm","title":"Solving SfM","text":"<ol> <li>Assume intrinsic matrix \\(K\\) is known for each camera</li> <li>Find a few reliable corresponding points</li> <li>Find relative camera position \\(t\\) and orientation \\(R\\)</li> <li>Find 3D position of scene points</li> </ol>"},{"location":"CV/cv7/#epipolar-geometry","title":"Epipolar Geometry","text":"<p>\u5bf9\u6781\u51e0\u4f55\u63cf\u8ff0\u4e86\u4e24\u4e2a\u6444\u50cf\u673a\u62cd\u6444\u540c\u4e00\u573a\u666f\u65f6\uff0c\u56fe\u50cf\u4e4b\u95f4\u7684\u51e0\u4f55\u5173\u7cfb\u3002</p> <ol> <li> <p>Epipole(\u6781\u70b9)\uff1a Image point of origin/pinhole of one camera as viewed by the other camera.\u4e24\u4e2a\u76f8\u673a\u5149\u5fc3\u8fde\u7ebf\u4e0e\u56fe\u50cf\u5e73\u9762\u7684\u4ea4\u70b9\uff0c\u76f8\u5f53\u4e8e\u53e6\u4e00\u4e2a\u76f8\u673a\u5728\u8fd9\u4e2a\u76f8\u673a\u7684\u6295\u5f71\u4f4d\u7f6e</p> <ul> <li>\\(e_l\\) \u548c \\(e_r\\) \u662f\u5bf9\u6781\u70b9\u3002\u7ed9\u5b9a\u76f8\u673a\u65f6\u662f\u552f\u4e00\u7684\u3002</li> </ul> </li> <li> <p>Epipolar Plane of Scene Point \\(P\\): The plane formed by camera origins(\\(O_l\\) and \\(O_r\\)), epipoles(\\(e_l\\) and \\(e_r\\)) and scene point \\(P\\).</p> <ul> <li>\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u70b9\u90fd\u4f4d\u4e8e\u552f\u4e00\u7684\u6781\u5e73\u9762\u4e0a</li> </ul> </li> <li> <p>Epipolar Constraint</p> </li> </ol> \\[ x_l \\cdot (t\\times x_l)=0 \\] <ul> <li>We know \\(x_l=Rx_r+t\\)\uff0c\u7528\u8fd9\u4e2a\u66ff\u4ee3\u53f3\u4fa7\u7684\\(x_l\\)\uff0c\u5176\u4e2d\\(R\\)\u548c\\(t\\)\u662f\u4e24\u4e2a\u76f8\u673a\u76f8\u5bf9\u65cb\u8f6c\u548c\u4f4d\u7f6e</li> </ul> <ul> <li> <p>\u6c42\u51fa\\(E\\)\u5c31\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\\(t\\)\u548c\\(R\\)</p> </li> <li> <p>find E: \\(x_l^TEx_r=0\\)</p> </li> </ul> <ul> <li> <p>depth of the scene points doesn't affect the epipolar constraint</p> </li> <li> <p>\u6211\u4eec\u628a\u4e2d\u95f4\u4e09\u4e2a\u77e9\u9635\u8bb0\u4f5c\\(F\\)\uff0c\u5373Fundamental Matrix\uff0c\u5219\\(E=K_l^TFK_r\\)</p> </li> <li> <p>\\(F\\)\u540c\u6837up to a scale\uff0c\u662f\u5c3a\u5ea6\u4e0d\u53d8\u7684\uff0c\u901a\u5e38\u6211\u4eec\u6dfb\u52a0\u7ea6\u675f\\(\\|f\\|^2=1\\)</p> </li> <li> <p>\u6bcf\u4e00\u5bf9\u70b9\u5bf9\u5e94\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b \u7531\u4e8e\u6709\u7ea6\u675f\uff0c\u9700\u89818\u5bf9\u70b9\u5373\u53ef</p> </li> </ul> <ul> <li>Step D: \u8ba1\u7b97\\(E\\)</li> <li>Step E: \u5206\u89e3\u5f97\u5230\\(R\\)\u548c\\(t\\)</li> </ul>"},{"location":"CV/cv7/#triangulation","title":"Triangulation","text":"<p>Given corresponding 2D feature points and camera parameters, how to find the 3D coordinates of scene points? \u7ed9\u5b9a\u4e24\u4e2a\u76f8\u673a\u76842D\u5750\u6807\u548c\u76f8\u673a\u7684\u5916\u53c2\u5185\u53c2\uff0c\u5982\u4f55\u5f97\u5230\u70b9\u5728\u76f8\u673a\u5750\u6807\u7cfb\u7684\u5750\u6807</p> <ul> <li> <p>\u4ee5\u4e0a\\(Ax_r =b\\), Find least squares solution by \\(x_r=(A^TA)^{-1}A^Tb\\)</p> </li> <li> <p>triangulation by optimization</p> </li> </ul> <ul> <li>Multi-frame Structure from Motion</li> </ul>"},{"location":"CV/cv7/#sequential-structure-from-motion","title":"Sequential Structure from Motion","text":"<ol> <li> <p>Initialize camera motion and scene structure</p> </li> <li> <p>For each additional view</p> <ul> <li>Determine projection matrix of new camera using all the known 3D points that are visible in its image </li> <li>Refine and extend structure: compute new 3D points, reoptimize existing points that are also seen by this camera </li> <li>\u4f1a\u51fa\u73b0\u7d2f\u8ba1\u8bef\u5dee<ul> <li>\u53ef\u4ee5\u91c7\u7528\u56de\u73af\u68c0\u6d4b</li> </ul> </li> </ul> <p></p> </li> <li> <p>Refine structure and motion: Bundle Adjustment</p> </li> </ol>"},{"location":"CV/cv7/#incremental-sfm-pipeline","title":"Incremental SfM pipeline","text":""},{"location":"CV/cv8/","title":"Lec.08: Depth estimation and 3D reconstruction","text":""},{"location":"CV/cv8/#depth-estimation","title":"Depth estimation","text":""},{"location":"CV/cv8/#stereo-matching","title":"Stereo matching","text":"<ol> <li>Given \\(X_L\\), its match in the other image \\(X_R\\) must lie on the epipolar line</li> </ol> <ol> <li> <p>Basic stereo matching algorithm: </p> <ul> <li>For each pixel in the first image<ul> <li>Find corresponding epipolar line in the right image</li> <li>Search along epipolar line and pick the best match</li> </ul> </li> </ul> </li> <li> <p>Simplest Case: Parallel images: \u76f8\u673a\u540c\u9ad8\u5ea6\uff0c\u955c\u5934\u89d2\u5ea6\u4e00\u6837\uff0cfocal length\u76f8\u540c</p> <p></p> <ul> <li>\\(x_2-x_1\\)= the disparity of pixel \\((x_1,y_1)\\)</li> <li>depth from disparity: Note that x and x\u2019 are image coordinates relative to the image centers, respectively. Disparity is inversely proportional to depth.</li> </ul> </li> </ol> <ol> <li> <p>Stereo image rectification\uff1a\u5047\u8bbe\u62cd\u6444\u7684\u65f6\u5019\u4e24\u4e2a\u76f8\u673a\u4e0d\u5e73\u884c\uff0c\u5148\u8fdb\u884creproject\u4f7f\u5f97\u4e24\u4e2a\u76f8\u673a\u6c34\u5e73</p> <ul> <li>Reproject image planes onto a common plane parallel to the line between camera centers</li> <li>\u4f7f\u7528\u4e24\u4e2a3x3\u7684\u5355\u5e94\u77e9\u9635</li> </ul> </li> </ol> <ol> <li>Basic stereo matching algorithm: Best match minimizes the dissimilarity</li> <li>Popular matching scores</li> </ol> <ol> <li>Window size</li> </ol> <p>\u672c\u90e8\u5206\u4ee5\u4e0b\u4e0d\u8003</p> <ol> <li> <p>Stereo as energy minimization\u3002</p> <p></p> <ul> <li>match cost: \\(E_d(d)=\\sum\\limits_{(x,y)\\in I}C(x,y,d(x,y))\\)</li> <li>smoothness cost: \\(E_s(d)=\\sum\\limits_{(p,q)\\in\\epsilon}V(d_p,d_q)\\)</li> </ul> <p></p> <ul> <li>can minimize this independently per scanline using DP<ul> <li>\u4f46DP\u53ea\u80fd\u5904\u74061D\u7684\uff0c\u4e0d\u80fd\u5904\u74062D\u7684</li> </ul> </li> </ul> </li> <li> <p>Steps</p> <ol> <li> <p>Calibrate cameras</p> </li> <li> <p>Rectify images</p> </li> <li> <p>Compute disparity</p> </li> <li> <p>Estimate depth</p> </li> </ol> </li> <li> <p>optimal baseline</p> <ul> <li>too small: large depth error</li> <li>too large: difficult search problem</li> </ul> </li> </ol> <ol> <li> <p>What will cause errors</p> <ul> <li>\u76f8\u673a\u6807\u5b9a\u8bef\u5dee</li> <li>\u56fe\u7247\u5206\u8fa8\u7387\u4f4e</li> <li>occlusion \u906e\u6321</li> <li>\u4eae\u5ea6\u4e0d\u4e00\u81f4</li> <li>textureless regions</li> </ul> </li> <li> <p>Active stereo with structured light \u4e3b\u52a8\u5f0f\u7684\u7acb\u4f53\u5339\u914d</p> <ul> <li>simplifies the correspondence problem \u901a\u8fc7\u7ed3\u6784\u5149\u964d\u4f4e\u5339\u914d\u96be\u5ea6\uff0c\u63d0\u9ad8\u7eb9\u7406\u4e30\u5bcc\u5ea6</li> </ul> </li> </ol>"},{"location":"CV/cv8/#multi-view-stereo","title":"Multi-view stereo","text":"<ol> <li> <p>Advantages</p> <ul> <li>Can match windows using more than 1 neighbor, giving a stronger constraint</li> <li>If you have lots of potential neighbors, can choose the best subset of neighbors to match per reference image</li> <li>Can reconstruct a depth map for each reference frame, and the merge into a complete 3D model</li> </ul> </li> <li> <p>basic idea: Correct depth gives consistent projections while incorrect depth gives inconsistent projections. </p> </li> </ol> <p>Compute the error for each depth value for each point in the reference image. Find the depth value that gives the smallest error</p> <ol> <li>Plane-Sweep\uff08\u4e0d\u8003\uff09: Project each plane to neighbors views (via homography) and compare pixel values</li> </ol> <ol> <li> <p>Cost volume is a 3D array that stores the errors of all pixels at all depths</p> </li> <li> <p>Patch Match: an efficient algorithm</p> <ul> <li> <p>\u5047\u8bbe\uff1a\u968f\u673a\u521d\u59cb\u5316\u4e2d\u4f1a\u4ea7\u751f\u4e00\u90e8\u5206good guess\uff0cneighbor\u7684\u53d8\u6362\u662f\u76f8\u4f3c\u7684</p> </li> <li> <p>Steps</p> <ol> <li> <p>random initialization: Each pixel is given a random patch offset as initialization</p> </li> <li> <p>propagation: Each pixels checks if the offsets from neighboring patches give a better matching patch. If so, adopt neighbor\u2019s patch offset. \u5c06\u5f53\u524d\u50cf\u7d20\u7684\u5339\u914d\u504f\u79fb\u91cf\u4f20\u64ad\u7ed9\u90bb\u8fd1\u50cf\u7d20\uff0c\u5982\u679c\u90bb\u8fd1\u50cf\u7d20\u7684\u5339\u914d\u6548\u679c\u66f4\u597d\uff0c\u5219\u66f4\u65b0\u5176\u504f\u79fb\u91cf\u3002</p> </li> <li> <p>local search: Each pixels searches for better patch offsets within a concentric radius around the current offset. \u5728\u5f53\u524d\u504f\u79fb\u91cf\u5468\u56f4\u8fdb\u884c\u968f\u673a\u641c\u7d22\uff0c\u5bfb\u627e\u66f4\u597d\u7684\u5339\u914d\u3002</p> </li> </ol> <p>The search radius starts with the size of the image and is halved each time until it is 1</p> <ol> <li>Go to Step 2 until converge</li> </ol> <p></p> </li> </ul> </li> </ol>"},{"location":"CV/cv8/#3d-reconstruction","title":"3D reconstruction","text":"<ol> <li> <p>pipeline</p> <ul> <li>Compute depth map per image</li> <li>Fuse the depth maps into a 3D surface</li> <li>Texture mapping</li> </ul> </li> </ol>"},{"location":"CV/cv8/#3d-representations","title":"3D representations","text":"<ol> <li>point cloud: \u53ea\u6709\u70b9\uff0cno surface</li> <li> <p>volume</p> <ul> <li>occupancy volume: \\(V_{ijk}=1\\) if occupied, 0 if empty</li> <li>SDF(Signed Distance Function) volume: The distance of a point to the shape boundary. The distance is defined by a metric, usually the Euclidean distance<ul> <li>Truncated Signed Distance Function (TSDF): Truncation SDF\u2019s distance value to [\u22121, 1]</li> </ul> </li> </ul> </li> </ol> <ol> <li>mesh: A polygon mesh with vertices and edges, usually triangle mesh</li> </ol>"},{"location":"CV/cv8/#3d-surface-reconstruction","title":"3D surface reconstruction","text":"<ul> <li>depth maps -&gt; occupancy volume</li> <li> <p>Poisson reconstruction</p> </li> <li> <p>occupancy volume -&gt; mesh</p> </li> <li> <p>Marching cubes</p> </li> <li> <p>construct a volume: good for denoising, easier to be converted to mesh</p> </li> </ul>"},{"location":"CV/cv8/#poisson-reconstrucition","title":"Poisson reconstrucition","text":"<p>\u4e0d\u8003\u7ec6\u8282</p> <ol> <li>convert depth map to point cloud</li> </ol> <ol> <li> <p>\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u6cd5\u5411\u91cf: variancee\u6700\u5c0f\u7684\u65b9\u5411</p> </li> <li> <p>represent surface by indicator(occupancy) function</p> <ul> <li>gradient relationship: \u6784\u9020\u51fa\u7684\u8868\u9762\u5728\u5bf9\u5e94\u70b9\u7684\u68af\u5ea6\u5e94\u8be5\u5c3d\u53ef\u80fd\u548c\u6bcf\u4e2a\u70b9\u7684\u6cd5\u5411\u91cf\u4e00\u81f4\uff0c\u4f18\u5316\u95ee\u9898</li> <li>represent the oriented points by a vector field \\(\\vec{V}\\)</li> <li>find the function whose gradient best approximates \\(\\vec{V}\\) by minimizing</li> </ul> \\[ \\min_{\\chi}\\|\\nabla\\chi-\\vec{V}\\| \\] </li> </ol>"},{"location":"CV/cv8/#marching-cubes","title":"Marching cubes","text":"<p>Marching Squares(2D)</p> <p>For each grid cell with a sign change \u53ea\u6709\u5f53\u4e00\u4e2a\u683c\u5b50\u56db\u4e2a\u9876\u70b9\u989c\u8272\u4e0d\u540c\uff0c\u624d\u5b58\u5728\u8fb9\u754c\u3002\u5bf9\u5e94\u8fb9\u754c\u5c31\u5728\u4e24\u7aef\u989c\u8272\u4e0d\u540c\u7684\u5730\u65b9\u3002</p> <ul> <li>Create one vertex on each grid edge with a sign change.</li> <li>Connect vertices by lines.</li> <li>Lines should not intersect</li> <li>Use a pre-computed look-up table</li> <li>Location of the vertex can be determined by linear interpolation of SDF values.</li> </ul> <p></p> <p>\u4e09\u7ef4\u60c5\u51b5\u7c7b\u4f3c</p>"},{"location":"CV/cv8/#texture-mapping","title":"Texture mapping","text":"<ul> <li>add color to 3D surface</li> <li>Each triangle vertices is assigned a 2D coordinate \\((u,v)\\) in the texture image </li> </ul>"},{"location":"CV/cv8/#neural-scene-representations","title":"Neural Scene Representations","text":"<ol> <li>Implict Neural Representations</li> </ol> <ol> <li>Neural Radiance Fields (NeRF) \u4e0d\u540c\u89d2\u5ea6\u989c\u8272\u4e0d\u5b8c\u5168\u76f8\u540c Representing scenes as continuous density and color fields \u751f\u6210\u795e\u7ecf\u8f90\u5c04\u573a</li> </ol> <ul> <li>Limitations\uff1aPoor surface reconstruction quality \u8868\u9762\u523b\u753b\u4e0d\u597d</li> </ul>"},{"location":"MARL/","title":"Multi-Agent Reinforcement Learning","text":"<p>Abstract</p> <ul> <li>2024summer</li> <li>\u8fd9\u662f\u5927\u4e8c\u77ed\u5b66\u671f\u7684\u8bfe\u7a0b\uff0c\u591a\u667a\u80fd\u4f53\u5f3a\u5316\u5b66\u4e60\u5b9e\u8df5\uff0c\u662f\u4e0e\u817e\u8baf\u5f00\u609f\u5408\u4f5c\u7684\u8bfe\uff0c\u6574\u4f53\u8bfe\u7a0b\u96be\u5ea6\u6ca1\u6709\u90a3\u4e48\u9ad8</li> <li>\u5927\u4f5c\u4e1a\u662f\u7ec4\u961f\u505a\u4e00\u4e2a3v3\u7684\u8d2a\u5403\u86c7</li> <li>Lec8\u662f\u817e\u8baf\u7684\u4ecb\u7ecd\u6027\u8bb2\u5ea7\uff0c\u6545\u65e0note</li> </ul>"},{"location":"MARL/Lec1/","title":"1 Dynamic Programming","text":"<ol> <li> <p>\u6709\u9650\u6b65(N)\u671f\u671b\u7d2f\u8ba1\u5956\u52b1</p> \\[ J^{\\Pi}_N(i)=E[\\alpha^NG(i_N)+\\sum\\limits_{k=0}^{N-1}\\alpha^kg(i_k,\\mu_k(i_k),i_{k+1})|i_0=i] \\] <ul> <li>\u4e00\u9636\u6bb5\u51b3\u7b56 \u6700\u5c0f\u5316cost</li> </ul> \\[ J^*_1(i)=\\min\\limits_{u\\in U(i)}\\sum\\limits_{j=1}^np_{ij}(u)(g(i,u,j)+\\alpha G(j)) \\] <ul> <li>k\u9636\u6bb5\u51b3\u7b56</li> </ul> \\[ J^*_k(i)=\\min\\limits_{u\\in U(i)}\\sum\\limits_{j=1}^np_{ij}(u)(g(i,u,j)+\\alpha J^*_{k-1}(j)) \\] </li> </ol> <p>Example:\u6700\u77ed\u8def\u5f84\u6848\u4f8b</p> <p> </p>"},{"location":"MARL/Lec1/#_1","title":"\u4e00\u822c\u7406\u8bba","text":"<ol> <li>\u7ed9\u5b9a\u7b56\u7565\uff0c\u4e0d\u8bba\u521d\u59cb\u72b6\u6001\uff0cn\u8f6e\u51b3\u7b56\u540e\u8fdb\u5165\u7ec8\u6b62\u72b6\u6001\u6982\u7387\u4e3a\u6b63\uff0c\u5219\u8be5\u7b56\u7565\u4e3a\u5408\u7406\u7b56\u7565</li> </ol> \\[ \\rho_\\mu=\\max\\limits_{i=1,\\cdots,n}P(i_n\\neq0|i_0=i,\\mu)&lt;1 \\] <ol> <li>\u52a8\u6001\u89c4\u5212\u901f\u8bb0\u7b26\u53f7:</li> </ol> <p>\u4e00\u822c\u6765\u8bf4\\(T\\)\u548c\\(T_\\mu\\)\u5177\u5907\u5982\u4e0b\u7279\u6027</p> <ol> <li>\u5728\u524d\u9762\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u5047\u8bbe\u81f3\u5c11\u6709\u4e00\u4e2a\u5408\u7406\u7b56\u7565\u4ee5\u53ca\u6bcf\u4e00\u4e2a\u4e0d\u5408\u7406\u7b56\u7565\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u72b6\u6001\u6210\u672c\u65e0\u9650\u5927\uff0c\u5219<ul> <li>\u6700\u4f18\u672a\u6765\u6210\u672c(\u5956\u52b1)\\(J^*\\)\u53d8\u91cf\u662f\u6709\u9650\u5143\uff0c\u4e14\u662f\\(J=TJ\\)\u7684\u552f\u4e00\u89e3</li> <li>\u7ed9\u5b9a\u6bcf\u4e00\u4e2a\u5411\u91cf\\(J,\\lim\\limits_{k\\rightarrow\\infty}T^kJ=J^*\\)</li> <li>\u5bf9\u7b56\u7565\\(\\mu\\)\u548c\\(T_\\mu\\)\u4e0a\u8ff0\u540c\u6837\u9002\u7528</li> </ul> </li> <li>\u8bc1\u660eDP\u7684\u6b63\u786e\u6027\uff0cby\u6536\u7f29\u6620\u5c04</li> </ol>"},{"location":"MARL/Lec1/#mdp","title":"MDP\u5efa\u6a21","text":"<ol> <li>\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b\\(M=&lt;S,A,P,R,Y&gt;\\)\u5305\u62ec\u72b6\u6001\u96c6\u5408\u3001\u884c\u4e3a\u96c6\u5408\u3001\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\u3001\u5956\u52b1\u51fd\u6570\u3001\u672a\u6765\u5956\u52b1\u8870\u51cf\u7cfb\u6570<ul> <li>\u5728\u4e00\u4e2a\u672a\u77e5\u73af\u5883\u4e2d\uff0c\u8f6c\u79fb\u6982\u7387P\u548c\u5956\u52b1R\u7531\u73af\u5883\u7ed9\u51fa\uff0c\u65e0\u6cd5\u83b7\u53d6\u5168\u90e8\u4fe1\u606f</li> </ul> </li> </ol> <ol> <li>POMDP\uff1a\u90e8\u5206\u53ef\u89c2\u6d4b\uff0c\u5e26\u6709\u9690\u85cf\u72b6\u6001\u7684MDP\uff0c\\(M=&lt;S,A,O,P,R,Z,\\gamma&gt;\\)</li> </ol> <ol> <li>Bellman\u65b9\u7a0b</li> </ol> <p>AI\u5bfc\u7684\u6b8b\u5b58\u8bb0\u5fc6\u5377\u571f\u91cd\u6765</p> <p>Bellman\u671f\u671b\u65b9\u7a0b</p> <p>Bellman\u6700\u4f18\u65b9\u7a0b</p>"},{"location":"MARL/Lec1/#_2","title":"\u7b56\u7565\u8bc4\u4f30\u4e0e\u4f18\u5316","text":"<ul> <li>\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u7b56\u7565\\(\\pi\\)\uff0c\u7b56\u7565\u8bc4\u4f30\u7528\u4e8e\u8ba1\u7b97\u72b6\u6001\u4ef7\u503c\u51fd\u6570</li> </ul> <ul> <li>\u57fa\u4e8e\u4ef7\u503c\u51fd\u6570\uff0c\u7b56\u7565\u4f18\u5316\u901a\u8fc7\u66f4\u8d2a\u5a6a\u7684\u884c\u4e3a\u751f\u6210\u66f4\u597d\u7684\u7b56\u7565\\(\\pi'\\geq\\pi\\)\uff0c\u4e14\u4e0d\u4f1a\u66f4\u574f</li> </ul> <ul> <li> <p>\u4e00\u822c\u7b56\u7565\u8fed\u4ee3\u7b97\u6cd5\u5c06\u7b56\u7565\u8bc4\u4f30\u548c\u7b56\u7565\u4f18\u5316\u76f8\u7ed3\u5408\uff0c\u6bcf\u6b21\u7b56\u7565\u6267\u884c\u540e\u8bc4\u4f30\u3001\u4f18\u5316\u518d\u6267\u884c</p> </li> <li> <p>\u5728GPI\u4e2d\uff0c\u4ef7\u503c\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u8fed\u4ee3\u6765\u4e0d\u65ad\u63a5\u8fd1\u5f53\u524d\u7b56\u7565\u7684\u5b9e\u9645\u503c;\u7b56\u7565\u4e5f\u5728\u6b64\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u63a5\u8fd1\u6700\u4f18\u7b56\u7565:\u4e14\u603b\u662f\u53ef\u4ee5\u6536\u655b\u5230\u6700\u4f18\u7b56\u7565</p> </li> </ul>"},{"location":"MARL/Lec2/","title":"2 Value Estimation","text":""},{"location":"MARL/Lec2/#monte-carlo-methods","title":"Monte-Carlo methods","text":"<p>\u57fa\u4e8e\u968f\u673a\u91c7\u6837\u548c\u7edf\u8ba1\u7684\u65b9\u6cd5</p> <ol> <li>\u56de\u987e    $$ V^{\\pi}(s)=E[R(s_0)+\\gamma R(s_1)+\\gamma^2R(s_2)+\\cdots|s_0=s,\\pi] $$</li> </ol> <p>$$ =E[G_t|s_0=s,\\pi]\\approx\\dfrac{1}{N}\\sum_{i=1}^{N}G_t^i $$</p> <ol> <li> <p>\u5177\u4f53\u5b9e\u73b0</p> <ul> <li>\u5bf9\u6bcf\u4e00\u56de\u5408\u4e2d\u65f6\u95f4t\u6b65\u65f6\u7684\u72b6\u6001s</li> </ul> <p> </p> <ul> <li>\u6574\u7406\u4e3a\u589e\u91cf\u66f4\u65b0:</li> </ul> <p>$$ N(s_t)\\leftarrow N(s_t)+1 $$</p> <p>$$ V(s_t)\\leftarrow V(s_t)+(G_t-V(s_t))/N(s_t) $$</p> <ul> <li>\u5bf9\u975e\u5e73\u7a33\u73af\u5883\uff0c\u5373\u73af\u5883\u52a8\u6001\u4f1a\u968f\u65f6\u95f4\u53d1\u751f\u53d8\u5316\uff0c\u8499\u7279\u5361\u6d1b\u65b9\u6cd5\u53ef\u4ee5\u8ddf\u8e2a\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\u5185\u7684\u5e73\u5747\u503c</li> </ul> <p>$$   V(s_t)\\leftarrow V(s_t)+\\alpha(G_t-V(s_t))   $$</p> </li> <li> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u76f4\u63a5\u4ece\u7ecf\u9a8c\u56de\u5408\u8fdb\u884c\u5b66\u4e60\uff0c\u4e0d\u9700\u8981\u6a21\u62df/\u641c\u7d22</li> <li>\u6a21\u578b\u65e0\u5173\uff08model-free\uff09\uff0c\u65e0\u9700\u73af\u5883\u4fe1\u606f</li> <li>\u6838\u5fc3\u601d\u60f3\u7b80\u5355\u76f4\u767d\uff1avalue = mean return</li> <li>\u4f7f\u7528\u5b8c\u6574\u56de\u5408\u8fdb\u884c\u66f4\u65b0\uff1a\u53ea\u80fd\u5e94\u7528\u4e8e\u6709\u9650\u957f\u5ea6\u7684\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\uff0c\u5373\u6240\u6709\u7684\u56de\u5408\u90fd\u5e94\u6709\u7ec8\u6b62\u72b6\u6001</li> </ul> </li> </ol>"},{"location":"MARL/Lec2/#_1","title":"\u65f6\u5e8f\u5dee\u5206","text":"<ol> <li> <p>\u57fa\u672c\u7279\u70b9\u548c\u5b9a\u4e49</p> <ul> <li>$$ G_t=R_{t+1}+\\gamma R_{t+2}+\\cdots+\\gamma_{T-1}R_T=R_{t+1}+\\gamma V(s_{t+1}) $$ \u662f \\(V^\\pi\\)\u7684\u6709\u504f\u4f30\u8ba1</li> <li> \\[ V(s_t)\\leftarrow V(s_t)+\\alpha(R_{t+1}+\\gamma V(s_{t+1})-V(s_t)) \\] </li> <li>\u80fd\u591f\u76f4\u63a5\u4f7f\u7528\u7ecf\u9a8c\u56de\u5408\u5b66\u4e60\uff0c\u540c\u6837\u4e5f\u662f\u6a21\u578b\u65e0\u5173\u7684\uff0c\u7ed3\u5408\u4e86\u81ea\u4e3e(bootstrapping)\uff0c\u80fd\u4ece\u4e0d\u5b8c\u6574\u7684\u56de\u5408\u4e2d\u5b66\u4e60\u3002\u901a\u8fc7\u66f4\u65b0\u5f53\u524d\u9884\u6d4b\u503c\uff0c\u4f7f\u4e4b\u63a5\u8fd1\u4f30\u8ba1\u51fa\u6765\u7684\u7d2f\u8ba1\u5956\u52b1\uff0c\u800c\u975e\u771f\u5b9e\u7d2f\u8ba1\u5956\u52b1\uff0c\u80fd\u591f\u5728\u6bcf\u4e00\u6b65\u4e4b\u540e\u8fdb\u884c\u5728\u7ebf\u5b66\u4e60\uff0c\u80fd\u591f\u5e94\u7528\u4e8e\u65e0\u9650\u957f\u5ea6\u7684\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b</li> </ul> </li> <li> <p>\u65f6\u5e8f\u5dee\u5206\u76ee\u6807\u5177\u6709\u66f4\u4f4e\u7684\u65b9\u5dee\uff0c\u8fd9\u662f\u56e0\u4e3a</p> <ul> <li>\u7d2f\u8ba1\u5956\u52b1\u53d6\u51b3\u4e8e\u591a\u6b65\u968f\u673a\u52a8\u4f5c\u3001\u72b6\u6001\u8f6c\u79fb\u548c\u5956\u52b1</li> <li>\u65f6\u5e8f\u5dee\u5206\u53d6\u51b3\u4e8e\u5355\u6b65\u968f\u673a\u52a8\u4f5c\u3001\u72b6\u6001\u8f6c\u79fb\u548c\u5956\u52b1</li> </ul> </li> </ol>"},{"location":"MARL/Lec2/#_2","title":"\u8d44\u683c\u8ff9","text":"<ul> <li> <p>\u591a\u6b65\u65f6\u5e8f\u5dee\u5206\u65b9\u6cd5 \\(V(s_t)\\leftarrow V(s_t)+\\alpha(G_t^n-V(s_t))\\)</p> </li> <li> <p>\u8d44\u683c\u8ff9\u901a\u5e38\u4f7f\u7528\u4e00\u4e2a\u8d85\u53c2\u6570\\(\\lambda\\in[0,1]\\)\u63a7\u5236\uff0c\\(\\lambda=1\\)\u7b49\u4ef7\u4e8e\u8499\u7279\u5361\u7f57\uff0c\\(\\lambda=0\\)\u7b49\u4ef7\u4e8e\u65f6\u5e8f\u5dee\u5206</p> </li> <li> <p>\u5e38\u89c1\u7684\uff1a\\(TD-\\lambda, G_t^n=R_{t+1}+\\gamma R_{t+2}+\\cdots+\\gamma^{n-1}R_{t+n}+\\gamma^n V(s_{t+n})=(1-\\lambda)\\sum_{n=1}^\\infty\\lambda^{n-1}G_t^n\\)</p> <ul> <li>\u524d\u5411\u89c6\u89d2\uff1a\u671d\u7740\\(G_t^n\\)\u65b9\u5411\u66f4\u65b0\u503c\u51fd\u6570\uff0c\u540c\u65f6\u901a\u8fc7\u89c2\u6d4b\u672a\u6765\u6570\u636e\u8ba1\u7b97\uff0c\u53ea\u80fd\u8ba1\u7b97\u5b8c\u6574\u56de\u5408</li> <li>\u540e\u5411\u89c6\u89d2\uff1a\u5bf9\u6bcf\u4e2a\u72b6\u6001s\u4fdd\u6301\u8d44\u683c\u8ff9\uff0c\u66f4\u65b0\u6bcf\u4e2a\u72b6\u6001s\u7684\u4ef7\u503c\u51fd\u6570\uff0c\u4e0eTD-error\u548c\u8d44\u683c\u8ff9\\(E_t(s)\\)\u6210\u6bd4\u4f8b\u5173\u7cfb</li> </ul> </li> </ul>"},{"location":"MARL/Lec2/#_3","title":"\u8868\u683c\u578b\u65f6\u5e8f\u5dee\u5206\u65b9\u6cd5","text":""},{"location":"MARL/Lec2/#sarsa","title":"SARSA","text":"<ol> <li>\u7b56\u7565\u8bc4\u4f30\uff1a</li> </ol> \\[ Q(s_t,a_t)\\leftarrow Q(s_t,a_t)+\\alpha(R_{t+1}+\\gamma Q(s_{t+1},a_{t+1})-Q(s_t,a_t)) \\] <ol> <li> <p>\u7b56\u7565\u6539\u8fdb\uff1a\\(\\epsilon\\)-greedy</p> </li> <li> <p>on-policy TD control\u4f7f\u7528\u5f53\u524d\u7b56\u7565\u8fdb\u884c\u52a8\u4f5c\u91c7\u6837\uff0c\u5373SARSA\u7b97\u6cd5\u4e2d\u7684\u4e24\u4e2a\u52a8\u4f5cA\u90fd\u662f\u7531\u5f53\u524d\u7b56\u7565\u9009\u62e9\u7684</p> </li> </ol>"},{"location":"MARL/Lec2/#q-learning","title":"Q-learning","text":"<ol> <li> <p>\u72b6\u6001\u52a8\u4f5c\u503c\u51fd\u6570\\(Q(s,a)\\in R\\)\uff0c\u4e00\u79cd\u79bb\u7ebf\u7b56\u7565(off-pilicy)\u65b9\u6cd5    $$    Q(s_t,a_t)=\\sum_{t=0}^T R(s_t,a_t),a_t \\sim \\mu(s_t)    $$    \u8fed\u4ee3\u5f0f\uff1a    $$    Q(s_t,a_t)=R(s_t,a_t)+\\gamma Q(s_{t+1},a_{t+1})    $$</p> </li> <li> <p>\u79bb\u7ebf\u7b56\u7565\uff1a</p> <ul> <li>\u76ee\u6807\u51fd\u6570\\(\\pi(a_t|s_t)\\)\u8fdb\u884c\u503c\u51fd\u6570\u8bc4\u4f30</li> <li>\u884c\u4e3a\u7b56\u7565\\(\\mu(a_t|s_t)\\)\u6536\u96c6\u6570\u636e</li> <li>\u79bb\u7ebf\uff1a\u5e73\u8861\u63a2\u7d22\u548c\u5229\u7528</li> </ul> </li> <li> <p>\u5177\u4f53\u5b9e\u73b0\uff1a</p> </li> </ol> <ol> <li>\u5b9a\u7406\uff1aQ-learning\u53ef\u4ee5\u6536\u655b\u5230\u6700\u4f18\u72b6\u6001-\u52a8\u4f5c\u503c\u51fd\u6570    $$    Q(s_t,a_t)\\rightarrow Q^*(s_t,a_t)    $$</li> </ol> <p>\u5b9a\u7406\u8bc1\u660e by \u6536\u7f29\u7b97\u5b50\u3001\u65e0\u7a77\u8303\u6570 \uff08\u771f\u770b\u4e0d\u8fdb\u53bb\uff09</p> <ul> <li> <p>\u5b9a\u4e49H\u7b97\u5b50    $$   HQ(s_t,a_t)=R_t +\\gamma E_{s_{t+1}\\sim p(\\cdot|s,a)}[\\max_{a'}Q(s_{t+1},a_{t+1})]   $$</p> </li> <li> <p>\u6700\u4f18\u503c\u51fd\u6570\\(Q^*\\)\u662f\\(H\\)\u7684\u4e0d\u52a8\u70b9\uff0c\u610f\u5473\u7740\\(Q^*=HQ^*\\)</p> </li> </ul> <p> </p> <ul> <li>\u7531\u6570\u5217\u6536\u655b\u7684\u67ef\u897f\u5b9a\u7406\u5f97\u8bc1</li> </ul>"},{"location":"MARL/Lec3/","title":"3 Introduction to Deep Learning","text":"<p>3 Introduction to Deep Learning</p>"},{"location":"MARL/Lec3/#_1","title":"\u795e\u7ecf\u7f51\u7edc\u76f8\u5173\u6982\u5ff5","text":"<ol> <li> <p>\u6fc0\u6d3b\u51fd\u6570\uff1a\u9636\u8dc3\u51fd\u6570, sigmoid, tanh, softmax, \u6052\u7b49\u51fd\u6570, ReLU</p> <ul> <li>LeakyReLU:</li> </ul> <p></p> <ul> <li>GELU:</li> </ul> <p>$$   f(x)=x\\Phi(x)=\\dfrac{1}{2}x(1+erf(\\dfrac{x}{\\sqrt2})) \\   erf(x)=\\dfrac{2}{\\sqrt\\pi}\\int_0^xe^{-y^2}dy   $$</p> </li> <li> <p>\u635f\u5931\u51fd\u6570</p> <ul> <li>\u4e8c\u5206\u7c7b\u5e38\u7528\uff1a\u4e8c\u5206\u7c7b\u4ea4\u53c9\u71b5 \\(f\\)\u4e3a\u795e\u7ecf\u7f51\u7edc\u8f93\u51fa\uff0c\\(y\\)\u4e3a\u771f\u5b9e\u6807\u7b7e\u6216\u56de\u5f52\u503c</li> </ul> <p>$$   loss=-\\dfrac{1}{N}\\sum_{i=1}^Ny\\ln f+(1-y)\\ln(1-f)   $$</p> <ul> <li>\u591a\u5206\u7c7b\u5e38\u7528\uff1a\u5206\u7c7b\u4ea4\u53c9\u71b5 \\(M\\)\u7c7b\uff0c\u4f7f\u7528one-hot\u7f16\u7801</li> </ul> <p>$$   loss=-\\dfrac{1}{N}\\sum^N_{i=1}\\sum_{c=1}^My_{ic}\\ln(f_{ic})   $$</p> </li> <li> <p>\u4f18\u5316\u5668 SGD\u548cAdam\u6bd4\u8f83\u591a</p> <ul> <li>\u68af\u5ea6\u4e0b\u964d\u6cd5</li> <li>\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\uff1a\u6bcf\u6b21\u4f7f\u7528\u6570\u636e\u4e2d\u7684\u4e00\u4e2a\u6837\u672c\u7684\u68af\u5ea6\u4f5c\u4e3a\u66f4\u65b0\u68af\u5ea6\uff0c\u5f00\u9500\u4f4e</li> <li>\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u6cd5\uff1a\u6bcf\u6b21\u4f7f\u7528\u6570\u636e\u4e2d\u7684\u4e00\u4e2a\u6279(batch)\u7684\u68af\u5ea6\u4f5c\u4e3a\u66f4\u65b0\u68af\u5ea6</li> <li> <p>\u5f15\u5165\u52a8\u91cf\u7684\u68af\u5ea6\u8ba1\u7b97\u65b9\u6cd5</p> <p> </p> </li> <li> <p>\u5b66\u4e60\u7387\u81ea\u9002\u5e94\u7684\u4f18\u5316\u7b97\u6cd5</p> <ul> <li>AdaGrad</li> </ul> <p> </p> <ul> <li>RMSProp</li> </ul> <p> </p> <ul> <li>Adam</li> </ul> <p> </p> </li> </ul> </li> <li> <p>\u8bc4\u4f30</p> <ul> <li>\u6cdb\u5316\u8bef\u5dee\uff1a\u5728\u771f\u5b9e\u5206\u5e03\u4e0a\u7684\u8bef\u5dee \u6d4b\u8bd5\u8bef\u5dee\uff1a\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8bef\u5dee\uff0c\u7528\u4e8e\u8fd1\u4f3c\u6cdb\u5316\u8bef\u5dee</li> <li> <p>\u6cdb\u5316\u8bef\u5dee\u7684\u504f\u5dee-\u65b9\u5dee\u5206\u89e3\uff1a</p> <ul> <li>\u65b9\u5dee\uff1a\u8bad\u7ec3\u96c6\u6570\u636e\u6270\u52a8\u7684\u5f71\u54cd</li> <li>\u566a\u97f3\uff1a\u671f\u671b\u6cdb\u5316\u8bef\u5dee\u7684\u4e0b\u754c\uff0c\u5373\u95ee\u9898\u672c\u8eab\u7684\u96be\u5ea6</li> </ul> \\[ E(f;D)=bias^2(x)+var(x)+\\epsilon^2 \\] <p> </p> </li> <li> <p>\u89e3\u51b3\u8fc7\u62df\u5408</p> <ul> <li>\u65e9\u505c\u6cd5\uff1a\u5728\u6570\u636e\u96c6\u4e2d\u989d\u5916\u5212\u5206\u51fa\u4e00\u90e8\u5206\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\uff0c\u82e5\u8bad\u7ec3\u96c6\u8bef\u5dee\u964d\u4f4e\u800c\u9a8c\u8bc1\u96c6\u8bef\u5dee\u5347\u9ad8\uff0c\u5219\u505c\u6b62\u8bad\u7ec3</li> <li>\u6b63\u5219\u5316:\u901a\u8fc7\u5f15\u5165\u566a\u58f0\u6216\u9650\u5236\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u964d\u4f4e\u6a21\u578b\u5bf9\u8f93\u5165\u6216\u8005\u53c2\u6570\u7684\u654f\u611f\u6027\uff0c\u907f\u514d\u8fc7\u62df\u5408\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002</li> </ul> </li> </ul> </li> <li> <p>Robert Hecht-Nielsen\uff0c1987\uff0c\u8bc1\u660e\u4e09\u5c42\u4ee5\u4e0a\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u65e0\u9650\u903c\u8fd1\u4efb\u610f\u8fde\u7eed\u51fd\u6570</p> </li> </ol>"},{"location":"MARL/Lec3/#_2","title":"\u6df1\u5ea6\u5b66\u4e60\u7f51\u7edc\u67b6\u6784","text":"<p>CNN,RNN,LSTM,GRU \u4e0d\u8fc7\u591a\u4ecb\u7ecd\uff0c\u5df2\u7ecf\u6709\u6240\u4e86\u89e3</p>"},{"location":"MARL/Lec3/#_3","title":"\u5927\u6a21\u578b\u548c\u8868\u793a\u6536\u655b","text":""},{"location":"MARL/Lec3/#transformer","title":"Transformer\u2014\u2014\u4ee5\u7ffb\u8bd1\u4e3a\u4f8b","text":"<p>Transformer is all you need</p> <ul> <li> <p>Decoder</p> <ul> <li> <p>\u5305\u542b\u4e24\u4e2aMulti-Head Attention\uff0c\u7b2c\u4e00\u4e2a\u91c7\u7528Masked\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u4e2a\u7684K,V\u77e9\u9635\u4f7f\u7528Encoder\u7684\u7f16\u7801\u4fe1\u606f\u77e9\u9635C\u8fdb\u884c\u8ba1\u7b97\uff0c\u800cQ\u4f7f\u7528\u4e0a\u4e00\u4e2aDecoder block\u7684\u8f93\u51fa\u8ba1\u7b97</p> </li> <li> <p>\u7b2c\u4e00\u5c42\u5c06\u8f93\u5165\u77e9\u9635\u548cMask\u77e9\u9635\u76f8\u4e58</p> </li> <li> <p>\u6bcf\u4e00\u4e2a\u8bcd\u6e90\u8981\u8fdb\u884c\u4e09\u6b21\u7ebf\u6027\u53d8\u6362\uff0c\u5206\u522b\u5bf9\u5e94Query, Key, Value\uff0c\u5f97\u5230Q,K,V\u77e9\u9635\uff0c\u8ba1\u7b97\\(QK^T\\)</p> </li> </ul> <p> </p> <ul> <li> <p>\u6700\u540e\u5f97\u5230\\(QK^T\\)\u8fdb\u884cSoftmax\uff0c\u8ba1\u7b97attention score\uff0c\u4e4b\u540e\u4f7f\u7528\\(Mask\\ QK^T\\)\u4e0e\u77e9\u9635\\(V\\)\u76f8\u4e58\uff0c\u5f97\u5230\u8f93\u51fa\\(Z\\)</p> </li> <li> <p>\u901a\u8fc7\u4e0a\u8ff0\u6b65\u9aa4\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2aMask Self-Attention\u7684\u8f93\u51fa\u77e9\u9635\\(Z_i\\)\uff1b\u7136\u540e\u548cEncoder\u7c7b\u4f3c\uff0c\u901a\u8fc7Multi-Head Attention\u62fc\u63a5\u591a\u4e2a\u8f93\u51fa\\(Z_i\\)\uff0c\u7136\u540e\u8ba1\u7b97\u5f97\u5230\u7b2c\u4e00\u4e2aMulti-Head Attention\u7684\u8f93\u51fa\\(Z\\),\\(Z\\)\u4e0e\u8f93\u5165\\(X\\)\u7ef4\u5ea6\u4e00\u6837\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u591a\u5934\u6ce8\u610f\u529b\u5c42\uff0c\u6839\u636eEncoder\u7684\u8f93\u51faC\u8ba1\u7b97\u5f97\u5230K,V\uff0c\u6839\u636e\u4e0a\u4e00\u4e2aDecoder block\u7684\u8f93\u51faZ\u8ba1\u7b97Q\uff0c\u5176\u4f59\u4e0e\u7b2c\u4e00\u5c42\u4e00\u81f4</p> </li> <li> <p>Softmax\u9884\u6d4b\u8f93\u51fa\u5355\u8bcd</p> <ul> <li>\u56e0\u4e3aMask\u5b58\u5728\uff0c\u5355\u8bcd0\u7684\u8f93\u51fa\\(Z_0\\)\u53ea\u5305\u542b\u5355\u8bcd0\u7684\u4fe1\u606f</li> <li>Softmax\u6839\u636e\u8f93\u51fa\u77e9\u9635\u7684\u6bcf\u4e00\u884c\u9884\u6d4b\u4e0b\u4e00\u4e2a\u5355\u8bcd</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>\u5c0f\u7ed3</p> </li> <li> <p>\u5e76\u884c\u8bad\u7ec3</p> </li> <li>\u5728\u8f93\u5165\u6dfb\u52a0\u4f4d\u7f6eEmbedding\u4ee5\u5229\u7528\u5355\u8bcd\u987a\u5e8f</li> <li>\u81ea\u6ce8\u610f\u529b\u673a\u5236</li> </ul>"},{"location":"MARL/Lec3/#_4","title":"\u8868\u793a\u6536\u655b","text":"<p>\u6838\u5fc3\u89c2\u70b9\uff1a\u4e0d\u540c\u5927\u6a21\u578b\u7684\u8868\u793a\u8d8b\u4e8e\u6536\u655b</p> <p>\u201c\u6a21\u578b\u884c\u4e3a\u4e0d\u662f\u7531\u67b6\u6784\u3001\u53c2\u6570\u6216\u4f18\u5316\u5668\u51b3\u5b9a\u7684\u3002\u5b83\u7531\u4f60\u7684\u8bed\u6599\u96c6\u51b3\u5b9a\uff0c\u6ca1\u6709\u5176\u4ed6\u51b3\u5b9a\u56e0\u7d20\u3002\u5176\u4ed6\u4e00\u5207\u56e0\u7d20\u90fd\u4e0d\u8fc7\u662f\u4e3a\u4e86\u6709\u6548\u8ba1\u7b97\u4ee5\u8fd1\u4f3c\u8be5\u8bed\u6599\u96c6\u7684\u624b\u6bb5\u3002\u201d</p>"},{"location":"MARL/Lec4/","title":"4 Deep Q Network","text":""},{"location":"MARL/Lec4/#_1","title":"\u63a2\u7d22\u4e0e\u5229\u7528","text":""},{"location":"MARL/Lec4/#epsilon-greedy","title":"\\(\\epsilon\\)-greedy","text":"<p>\\(\\epsilon\\)\u53ef\u4ee5\u8bbe\u5b9a\u4e3a\u8d85\u53c2\uff0c\u4e5f\u53ef\u4ee5\u968f\u8bad\u7ec3\u8fdb\u884c\u8870\u51cf</p>"},{"location":"MARL/Lec4/#ucb","title":"UCB","text":"<ul> <li> <p>\\(Q(a)\\leq\\hat{Q}_t(a)+\\hat{U}_t(a)\\),\u5176\u4e2d\u4e0a\u754c\u51fd\u6570\\(\\hat{U}_t(a)\\)\u4e0e\\(N_t(a)\\)\u76f8\u5173\uff0c\u5927\u884c\u4e3a\u8bbf\u95ee\u6b21\u6570\u5bfc\u81f4\u8f83\u5c0f\u7684\u7f6e\u4fe1\u4e0a\u754c</p> </li> <li> <p>Hoeffding\u4e0d\u7b49\u5f0f:     $$     \\mathbb{P}[Q(a)&gt;\\hat{Q}_t(a)+U_t(a)]\\leq e^{-2tU_t(a)^2}     $$</p> <ul> <li> <p>\u6211\u4eec\u4ee4\\(p=e^{-2tU_t(a)^2}\\),\u5219\\(U_t(a)=\\sqrt{\\dfrac{-\\log p}{2N_t(a)}}\\)</p> </li> <li> <p>\u4e00\u79cd\u542f\u53d1\u65b9\u6cd5\u662f\u53ca\u65f6\u964d\u4f4ep\u7684\u9608\u503c\uff0c\u8bbe\u5b9a\\(p=t^{-4}\\),\u5219\\(U_t(a)=\\sqrt{\\dfrac{2\\log t}{N_t(a)}}\\)</p> </li> <li> <p>\u56e0\u6b64\u5c31\u6709     $$     a_t^{UCB1}=\\arg\\max_{a\\in A}(Q(a)+\\sqrt{\\dfrac{2\\log t}{N_t(a)}})     $$</p> </li> <li> <p>\u66f4\u4e00\u822c\u5730\uff0c\\(U_t(a)=\\sqrt{\\dfrac{c\\log t}{N_t(a)}}\\)</p> </li> </ul> </li> </ul>"},{"location":"MARL/Lec4/#_2","title":"\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22","text":"<ul> <li>\u6838\u5fc3\u601d\u8def\uff1a\u4e0d\u9700\u8981\u624b\u52a8\u8bbe\u8ba1\u4e00\u4e2a\u5173\u4e8e\u72b6\u6001\u7684\u542f\u53d1\u51fd\u6570\uff0c\u800c\u662f\u4ece\u8be5\u72b6\u6001\u5f00\u59cb\u968f\u673a\u6a21\u62df\u4e00\u5c40\u535a\u5f08\u83b7\u5f97\u80dc\u8d1f\u4fe1\u606f\u3002</li> <li>\u589e\u52a0UCB\u8ba1\u7b97\u53ef\u4ee5\u7ed9\u72b6\u6001\u66f4\u597d\u7684\u9884\u4f30\u4ef7\u503c\u3002</li> <li>MCTS\u8fed\u4ee3\uff1a\u9009\u62e9\u3001\u6269\u5c55\u3001\u6a21\u62df\u3001\u56de\u4f20<ul> <li>\u9009\u62e9\u8fc7\u7a0b\uff1a\u9012\u5f52\u9009\u62e9\u6700\u5927UCB\u503c\u7684\u5b50\u8282\u70b9</li> <li>\u6269\u5c55\u8fc7\u7a0b\uff1a\u4e3a\u5b50\u8282\u70b9\u6269\u5145\u672a\u8bbf\u95ee\u7684\u8282\u70b9\u5e76\u52a0\u8fdb\u8499\u7279\u5361\u6d1b\u6811\u4e2d</li> <li>\u6a21\u62df\u8fc7\u7a0b\uff1a\u4ece\u65b0\u6269\u5c55\u7684\u8282\u70b9\u5f00\u59cb\uff0c\u91c7\u7528\u56fa\u5b9a\u7684\u7b56\u7565\u8fdb\u884c\u535a\u5f08\u6a21\u62df\uff08rollout\uff09\uff0c\u76f4\u5230\u535a\u5f08\u7ed3\u675f\u3002</li> <li>rollout\u8fc7\u7a0b\u91c7\u7528\u4efb\u4f55\u7b56\u7565\u7686\u53ef</li> </ul> </li> <li>\u56de\u4f20\u8fc7\u7a0b\uff1a\u5c06\u6a21\u62df\u7684\u7ed3\u679c\u9012\u5f52\u56de\u4f20\u5230\u8def\u5f84\u7ecf\u8fc7\u7684\u6240\u6709\u8282\u70b9\u76f4\u5230\u6839\u8282\u70b9\u3002<ul> <li>\u4e00\u822c\u66f4\u65b0\u8282\u70b9\u4ef7\u503c\u548c\u8282\u70b9\u8bbf\u95ee\u6b21\u6570</li> <li>\u5982\u679c\u9884\u5b58\u8282\u70b9UCB\u503c\uff0c\u5219\u66f4\u65b0\u8be5\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684UCB\u503c</li> </ul> </li> <li>\u4f18\u52bf<ul> <li>\u5728\u65e0\u4e13\u5bb6\u77e5\u8bc6\u7684\u65f6\u5019\u5f88\u6709\u6548\uff1b</li> <li>\u8282\u70b9\u5927\u91cf\u6a21\u62df\u540e\u53ef\u4ee5\u903c\u8fd1\u771f\u5b9e\u8282\u70b9\u4ef7\u503c\uff1b</li> <li>MCTS\u8fc7\u7a0b\u53ef\u4ee5\u5e76\u884c\u5316\uff0c\u4f8b\u5982\u53ef\u4ee5\u5728\u6269\u5c55\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u591a\u8fdb\u7a0b\u5e76\u884c\u6a21\u62df\uff1b</li> </ul> </li> <li>\u52a3\u52bf<ul> <li>MCTS\u7684\u8ba1\u7b97\u7ed3\u679c\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff1b</li> <li>\u6a21\u62df\u8fc7\u7a0b\u7684\u7b56\u7565\u5bf9\u641c\u7d22\u6548\u7387\u6709\u8f83\u5927\u5f71\u54cd\uff1b</li> </ul> </li> </ul>"},{"location":"MARL/Lec4/#q","title":"\u6df1\u5ea6Q\u7f51\u7edc","text":"<p>\u5c06\u8868\u683c\u5f0f\u7684\\(Q(s,a)\\)\u7684\u53d6\u503c\u7528\u795e\u7ecf\u7f51\u7edc\u4ee3\u66ff\uff0c\u4e14\u8be5\u7f51\u7edc\u4ee5\u72b6\u6001+\u884c\u4e3a\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ee5\u8be5\u72b6\u6001\u884c\u4e3a\u4ef7\u503c\u4f5c\u4e3a\u8f93\u51fa\uff0c\u90a3\u4e48Q-learning\u7b97\u6cd5\u5c31\u53ef\u4ee5\u76f4\u63a5\u6269\u5c55\u4e3a\u6df1\u5ea6Q\u5b66\u4e60\u3002</p> <ol> <li> <p>\u4ee5\u5b66\u4e60\u76ee\u6807 $r + \\gamma \\max\\limits_{a' \\in \\mathcal{A}} Q(s', a') $ \u6765\u589e\u91cf\u5f0f\u66f4\u65b0\\((s, a)\\)\uff0c\u5373\u4ee4 \\(Q(s, a)\\)\u8d34\u8fd1\u5176 TD \u76ee\u6807\u3002</p> <ul> <li> <p>\u72b6\u6001\u4ef7\u503c\u7f51\u7edc\uff1a \\(Q_\\omega(s, a)\\)</p> </li> <li> <p>\u65f6\u5e8f\u5dee\u5206\u76ee\u6807\u7ed3\u679c\uff1a\\(r + \\gamma \\max\\limits_{a'} Q_\\omega(s', a')\\)</p> </li> </ul> <p>\u7ed9\u5b9a\u4e00\u7ec4\u72b6\u6001\u8f6c\u79fb\u6570\u636e\uff1a \\(\\{(s_i, a_i, r_i, s'_i)\\}\\)\uff0c\u6df1\u5ea6 Q \u7f51\u7edc\u7684\u635f\u5931\u51fd\u6570\u6784\u9020\u6210\u4e3a\u5747\u65b9\u8bef\u5dee\u5f62\u5f0f\uff1a</p> <p>$$   \\omega^* = \\arg\\min_\\omega \\frac{1}{2N} \\sum_{i=1}^N \\left[ Q_\\omega(s_i, a_i) - \\left( r_i + \\gamma \\max_{a'} Q_\\omega(s'_i, a') \\right) \\right]^2   $$</p> </li> <li> <p>Fitted Q\u503c\u8fed\u4ee3\u7b97\u6cd5\uff1a</p> <ol> <li>\u901a\u8fc7\u67d0\u4e9b\u7b56\u7565\u6536\u96c6\u72b6\u6001\u8f6c\u79fb\u6570\u636e\u96c6 ${ (s_i, a_i, r_i, s_i') } $</li> <li>\u8ba1\u7b97TD\u76ee\u6807\uff1a$y_i \\leftarrow r_i + \\gamma\\max\\limits_{a_i'} Q_{\\alpha}(s_i', a_i') $</li> <li>\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\uff1a$  \\omega \\leftarrow \\arg\\min\\limits_{\\omega} \\frac{1}{2} \\sum_i||Q_\\omega(s_i, a_i) - y_i||^2  $</li> </ol> </li> <li> <p>\u5728\u7ebfQ\u503c\u8fed\u4ee3\u7b97\u6cd5\uff1a</p> <ol> <li>\u73af\u5883\u4e2d\u6839\u636e\u7b56\u7565\u91c7\u53d6\u884c\u4e3a\\(a_i\\)\uff0c\u5e76\u4ece\u73af\u5883\u83b7\u53d6\u5956\u52b1\\((s_i, a_i, r_i, s\u2019_i)\\)</li> <li>\u8ba1\u7b97TD\u76ee\u6807\uff1a\\(y_i \\leftarrow r_i + \\gamma \\max\\limits_{a\u2019_i} Q_{\\omega}(s\u2019, a\u2019)\\) </li> <li>\u66f4\u65b0\u7f51\u7edc\u53c2\u6570\uff1a\\(\\omega \\leftarrow \\omega-\\alpha \\dfrac{dQ_\\omega}{d\\omega} (s_i, a_i)(Q_\\omega(s_i, a_i) - y_i)\\)</li> </ol> </li> <li> <p>\u5b58\u5728\u95ee\u9898\uff1a</p> <ul> <li>\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u9700\u8981\u72ec\u7acb\u540c\u5206\u5e03\u6570\u636e\uff0c\u4f46\u662f\u72b6\u6001\u8f6c\u79fb\u6570\u636e\u5f3a\u76f8\u5173\uff1b</li> <li>\u66f4\u65b0\u795e\u7ecf\u7f51\u7edc\u53c2\u6570\u5e76\u4e0d\u662f\u68af\u5ea6\u4e0b\u964d\uff0c\\(y_i\\)\u7684\u8ba1\u7b97\u4e5f\u66f4\u65b0\u68af\u5ea6\uff1b</li> <li>Q\u503c\u7684\u66f4\u65b0\u4e0d\u7a33\u5b9a<ul> <li>\u539f\u56e0\uff1a\u5bf9\u4e8e\u540c\u6837\u7684\u72b6\u6001\u8f6c\u79fb\u6570\u636e\uff0c\u77ed\u65f6\u95f4\u5185\u540c\u6837\u7684\u8f93\u5165\u5f97\u5230\u4e0d\u540c\u7684TD\u76ee\u6807\u4f5c\u4e3a\u76d1\u7763\u4fe1\u53f7</li> </ul> </li> </ul> </li> <li> <p>\u89e3\u51b3\u6570\u636e\u76f8\u5173\u6027\uff1a\u5e76\u884cQ-learning\uff0c\u7528\u5176\u4ed6\u8fdb\u7a0b\u7684\u72b6\u6001\u8f6c\u79fb\u66f4\u65b0</p> </li> </ol> <p>\u7ecf\u9a8c\u56de\u653e\u7f13\u5b58\uff1a\u4e0d\u901a\u8fc7\u67d0\u4e9b\u7b56\u7565\u6536\u96c6\u6570\u636e\uff0c\u800c\u662f\u4ece\u7ecf\u9a8c\u56de\u653e\u7f13\u5b58\u4e2d\u91c7\u6837\uff1b\u7ecf\u9a8c\u56de\u653e\u7f13\u5b58\u4e2d\u6570\u636e\u6765\u6e90\u4e8e\u4efb\u4f55\u7b56\u7565\u90fd\u53ef\u4ee5</p> <ol> <li> <p>\u89e3\u51b3\u540e\u4e24\u4e2a\u95ee\u9898\uff1a\u901a\u8fc7\u76ee\u6807\u7f51\u7edc\uff0cTD\u76ee\u6807\u9636\u6bb5\u6027\u4fdd\u6301\u4e0d\u53d8\u4e14\u4e0d\u53c2\u4e0e\u68af\u5ea6\u56de\u4f20</p> </li> <li> <p>\u7ecf\u5178\u6df1\u5ea6Q\u5b66\u4e60</p> <p> </p> <ul> <li>\u66f4\u65b0\u76ee\u6807\u7f51\u7edc\u53c2\u6570\u53ef\u4ee5\u91c7\u7528\u6ed1\u52a8\u5e73\u5747\u7684\u65b9\u6cd5\uff0c\u5373\\(\\omega^-\\leftarrow\\tau\\omega^-+(1-\\tau)\\omega,\\tau=0.99\\)</li> <li>\u8fd9\u79cd\u65b9\u6cd5\u5728\u4e3a\u65b0\\(\\omega^-\\)\u8d4b\u503c\u65f6\u53ef\u4ee5\u4fdd\u7559\u65e7\u6709\u7684\\(\\omega\\)\u7684\u5f71\u54cd</li> </ul> </li> </ol>"},{"location":"MARL/Lec4/#dqn","title":"DQN\u6539\u8fdb\u7b97\u6cd5","text":"<ul> <li> <p>Q\u503c\u8fc7\u9ad8\u4f30\u8ba1</p> <ul> <li>\u57fa\u4e8eBoostrapping\u7b97\u6cd5\u7684\u4ef7\u503c\u4f30\u8ba1\u7684\u5171\u6709\u95ee\u9898</li> <li>\u539f\u56e0\uff1a\u6700\u5927\u503c\u7684\u671f\u671b\u5927\u4e8e\u671f\u671b\u7684\u6700\u5927\u503c\uff0c\u7b97\u6cd5\u603b\u662f\u9009\u62e9\u4ef7\u503c\u6700\u9ad8\u7684\u52a8\u4f5c\u4f5c\u4e3a\u76ee\u6807\u8fdb\u884c\u66f4\u65b0</li> </ul> </li> <li> <p>Double DQN\uff1a\u9009\u62e9\u52a8\u4f5c\u548c\u8ba1\u7b97\u4ef7\u503c\u4e0d\u4f7f\u7528\u540c\u4e00\u4e2a\u7f51\u7edc\uff0c\u4f7f\u7528\u4e24\u4e2a\u7f51\u7edc\u5206\u522b\u8fdb\u884c\u76ee\u6807\u503c\u8ba1\u7b97\u4e0e\u52a8\u4f5c\u9009\u62e9\uff0c\u5982\u679c\u4e24\u4e2a\u7f51\u7edc\u7684\u8bef\u5dee\u4e0d\u540c\uff0c\u5219\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u95ee\u9898</p> </li> </ul> \\[ Q_{\\omega_1}\\leftarrow r+\\gamma Q_{\\omega_2}(s',\\arg\\max_{a'}Q_{\\omega_1}(s',a')) \\] <ul> <li>Dueling DQN\uff1a\u5c06\u539f\u6765\u7684Q\u7f51\u7edc\u62c6\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff1aV\u7f51\u7edc\u548cA\u7f51\u7edc<ul> <li>V\u7f51\u7edc\uff1a\u4ee5\u72b6\u6001\u4e3a\u8f93\u5165\u3001\u4ee5\u5b9e\u6570\u4e3a\u8f93\u51fa\u7684\u8868\u793a\u72b6\u6001\u4ef7\u503c\u7684\u7f51\u7edc</li> <li>A\u7f51\u7edc\uff1a\u4f18\u52bf\u7f51\u7edc\uff0c\u5b83\u7528\u4e8e\u5ea6\u91cf\u5728\u67d0\u4e2a\u72b6\u6001\ud835\udc60\u4e0b\u9009\u53d6\u67d0\u4e2a\u5177\u4f53\u52a8\u4f5c\ud835\udc4e\u7684\u5408\u7406\u6027\uff0c\u5b83\u76f4\u63a5\u7ed9\u51fa\u52a8\u4f5c\ud835\udc4e\u7684\u6027\u80fd\u4e0e\u6240\u6709\u53ef\u80fd\u7684\u52a8\u4f5c\u7684\u6027\u80fd\u7684\u5747\u503c\u7684\u5dee\u503c\u3002\u5982\u679c\u8be5\u5dee\u503c(\u4f18\u52bf)\u5927\u4e8e0\uff0c\u8bf4\u660e\u52a8\u4f5c\ud835\udc4e\u4f18\u4e8e\u5e73\u5747\uff0c\u662f\u4e2a\u5408\u7406\u7684\u9009\u62e9\uff1b\u5982\u679c\u5dee\u503c(\u4f18\u52bf)\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u52a8\u4f5c\ud835\udc4e\u6b21\u4e8e\u5e73\u5747\uff0c\u4e0d\u662f\u597d\u7684\u9009\u62e9</li> <li>\u4e00\u822c\u6765\u8bf4\uff1a\\(Q(s,a)=V(s)+A(s,a)\\)</li> <li>\u5206\u8fa8\u5f53\u524d\u7684\u4ef7\u503c\u662f\u7531\u72b6\u6001\u4ef7\u503c\u63d0\u4f9b\u8fd8\u662f\u884c\u4e3a\u4ef7\u503c\u63d0\u4f9b\uff0c\u8fdb\u800c\u6709\u9488\u5bf9\u6027\u7684\u66f4\u65b0\uff0c\u589e\u52a0\u6837\u672c\u5229\u7528\u7387</li> </ul> </li> <li>\u4f18\u5148\u7ecf\u9a8c\u56de\u653e\u6c60PER\uff1a\u4e00\u822c\u6765\u8bf4\uff0c\u5177\u6709\u8f83\u5927TD\u8bef\u5dee\u7684\u6837\u672c\u5e94\u8be5\u7ed9\u4e88\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7<ul> <li>\u91c7\u6837\u7b2c\\(t\\)\u4e2a\u6837\u672c\u7684\u6982\u7387\\(p_t\\)\u6b63\u6bd4\u4e8eTD\u8bef\u5dee\\(\\delta_t\\),\u5373\\(p_t\\propto|\\delta_t|+\\epsilon\\)\uff0c\u5176\u4e2d\\(\\epsilon\\)\u4e3a\u5c0f\u6b63\u6570\uff0c\u9632\u6b62\u91c7\u6837\u6982\u7387\u4e3a0</li> <li>\u6216\u53cd\u6bd4\u4e8e\u8bef\u5dee\u6392\u4f4d\\(p_t\\propto\\dfrac{1}{rank(t)}\\)</li> <li>\u7b2c\u4e8c\u79cd\u66f4\u9c81\u68d2</li> <li>\u5f15\u5165\u53c2\u6570\\(\\beta\\in[0,1]\\)\u8c03\u6574\u5b66\u4e60\u7387 \\(\\alpha_t\\leftarrow\\alpha(np_t)^{-\\beta}\\)<ul> <li>\u5747\u5300\u91c7\u6837\u65f6\uff0c\\(p_i=\\dfrac{1}{n},(np_t)^{-\\beta}=1\\)\uff0c\u5b66\u4e60\u7387\u5747\u4e3a\\(\\alpha\\)\uff0c\u56de\u5f52\u666e\u901a\u7684\u7ecf\u9a8c\u56de\u653e\u6c60</li> <li>\u57fa\u4e8e\u4f18\u5148\u91c7\u6837\u65f6\uff0c\u5177\u6709\u9ad8\u4f18\u5148\u7ea7\u7684\u6837\u672c\u4f7f\u7528\u8f83\u4f4e\u7684\u5b66\u4e60\u7387</li> </ul> </li> </ul> </li> </ul>"},{"location":"MARL/Lec5/","title":"5 Policy Gradient","text":""},{"location":"MARL/Lec5/#recall","title":"Recall","text":"<p>\\(\\pi_\\theta(a|s)=P(a|s,\\theta)\\)</p> <ul> <li>\u7b56\u7565\u53c2\u6570\u5316<ul> <li>\u4f18\u70b9<ul> <li>\u6536\u655b\u6027\u8d28\u597d</li> <li>\u5728\u9ad8\u7ef4\u5ea6\u6216\u8fde\u7eed\u7684\u52a8\u4f5c\u7a7a\u95f4\u4e2d\u66f4\u6709\u6548</li> <li>\u80fd\u591f\u5b66\u4e60\u51fa\u968f\u673a\u7b56\u7565</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f18</li> <li>\u8bc4\u4f30\u4e00\u4e2a\u7b56\u7565\u901a\u5e38\u4e0d\u591f\u9ad8\u6548\u5e76\u5177\u6709\u8f83\u5927\u7684\u65b9\u5dee</li> </ul> </li> </ul> </li> </ul>"},{"location":"MARL/Lec5/#_1","title":"\u7b56\u7565\u68af\u5ea6","text":""},{"location":"MARL/Lec5/#_2","title":"\u57fa\u4e8e\u7b56\u7565\u7684\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5","text":"<ul> <li>\u4e0d\u9700\u8981\u4ef7\u503c\u51fd\u6570</li> <li>\u76f4\u63a5\u5b66\u4e60\u7b56\u7565</li> <li>\u9ad8\u7ef4\u6216\u8fde\u7eed\u52a8\u4f5c\u7a7a\u95f4\u573a\u666f\u4e2d\u66f4\u52a0\u9ad8\u6548</li> <li>\u9002\u7528\u4efb\u4f55\u52a8\u4f5c\u7c7b\u578b\u7684\u573a\u666f</li> <li> <p>\u5bb9\u6613\u6536\u655b\u5230\u6b21\u4f18\u89e3</p> </li> <li> <p>\u76f4\u63a5\u641c\u7d22\u6700\u4f18\u7b56\u7565\\(\\pi^*\\)</p> </li> </ul>"},{"location":"MARL/Lec5/#_3","title":"\u53c2\u6570\u5316\u7b56\u7565","text":"<ul> <li>\u53c2\u6570\u5316\u7b56\u7565\\(\\pi_\\theta\\)\u200b\uff0c\u5e76\u5229\u7528\u65e0\u68af\u5ea6\u6216\u57fa\u4e8e\u68af\u5ea6\u7684\u4f18\u5316\u65b9\u6cd5\u5bf9\u53c2\u6570\u8fdb\u884c\u66f4\u65b0<ul> <li>\u65e0\u68af\u5ea6\u4f18\u5316\u53ef\u4ee5\u6709\u6548\u8986\u76d6\u4f4e\u7ef4\u53c2\u6570\u7a7a\u95f4</li> <li>\u4f46\u57fa\u4e8e\u68af\u5ea6\u7684\u8bad\u7ec3\u4ecd\u7136\u662f\u9996\u9009\uff0c\u56e0\u4e3a\u5176\u5177\u6709\u66f4\u9ad8\u7684\u91c7\u6837\u6548\u7387</li> </ul> </li> <li> <p>\u53c2\u6570\u5316\u7b56\u7565\u548c\u8868\u683c\u578b\u7b56\u7565\u5bf9\u6bd4</p> <ul> <li>\u91c7\u53d6\u52a8\u4f5c\u7684\u6982\u7387\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u540c\uff1a\u524d\u8005\u901a\u8fc7\u7ed9\u5b9a\u7684\u51fd\u6570\u7ed3\u6784\u548c\u53c2\u6570\u8ba1\u7b97\\(\\pi_\\theta(a|s)\\)\uff0c\u540e\u8005\u76f4\u63a5\u67e5\u5bf9\u5e94s\u548ca\u8868</li> <li>\u7b56\u7565\u66f4\u65b0\u65b9\u5f0f\u4e0d\u540c\uff1a\u524d\u8005\u66f4\u65b0\\(\\theta\\)\uff0c\u540e\u8005\u76f4\u63a5\u4fee\u6539\u8868\u683c\u5bf9\u5e94\u6761\u76ee</li> <li>\u6700\u4f18\u7b56\u7565\u5b9a\u4e49\u4e0d\u540c\uff1a\u524d\u8005\u6700\u5927\u5316\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6807\u91cf\u6307\u6807\\(\u03c0^\\#(s) = \\arg\\max_\u03c0J(\u03c0(s))\uff0c\u03c0\u2208\u03a0\\) \uff0c\u540e\u8005\u6700\u5927\u5316\u6bcf\u4e2a\u72b6\u6001\u5bf9\u5e94\u503c\u51fd\u6570</li> </ul> </li> <li> <p>\u5c06\u53c2\u6570\u5316\u7b56\u7565\\(\u03c0_\u03b8\\)\u6240\u80fd\u8868\u793a\u7684\u6240\u6709\u7b56\u7565\u7ec4\u6210\u7684\u96c6\u5408\u8bb0\u4e3a\u7b56\u7565\u5bb9\u8bb8\u96c6\\(\u03a0={\u03c0_\u03b8:\u03b8\u2208\u0398}\\)\uff0c\\(\u0398\\)\u4e3a\u53c2\u6570\\(\u03b8\\)\u7684\u53d6\u503c\u8303\u56f4 </p> <ul> <li>\u82e5\\(\u03c0^*\u2208\u03a0\\)\uff0c\u5219\u6709\\(J(\u03c0^\\#) = J(\u03c0^*)\\) </li> <li>\u82e5\\(\u03c0^*\u2209\u03a0\\)\uff0c\u5219\u7b56\u7565\\(\u03c0^*\\)\u6bd4\\(\u03c0^\\#\\)\u66f4\u4f18</li> </ul> </li> </ul>"},{"location":"MARL/Lec5/#_4","title":"\u57fa\u672c\u601d\u60f3","text":"<ul> <li>\u5229\u7528\u76ee\u6807\u51fd\u6570\u5b9a\u4e49\u7b56\u7565\u4f18\u52a3\u6027:\\(J(\\theta)=J(\u03c0_\\theta)\\)</li> <li> <p>\u5bf9\u76ee\u6807\u51fd\u6570\u8fdb\u884c\u4f18\u5316\uff0c\u4ee5\u5bfb\u627e\u6700\u4f18\u7b56\u7565</p> </li> <li> <p>\u4f18\u5316\u65b9\u5411\uff1a\u53ef\u5fae\u5206\u7528\u57fa\u4e8e\u68af\u5ea6\uff0c\u5426\u5219\u65e0\u68af\u5ea6\u7b97\u6cd5\uff0c\u5982\u6709\u9650\u5dee\u5206\u3001\u4ea4\u53c9\u71b5\u3001GA</p> </li> </ul>"},{"location":"MARL/Lec5/#_5","title":"\u76ee\u6807\u51fd\u6570","text":"<ul> <li> <p>\u72b6\u6001\u5206\u5e03</p> <ul> <li>\u7b56\u7565\u65e0\u5173\uff1a\u4e00\u79cd\u7b80\u5355\u7684\u505a\u6cd5\u662f\u53d6\\(d(s)\\)\u4e3a\u5747\u5300\u5206\u5e03\uff0c\u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u628a\u6743\u91cd\u96c6\u4e2d\u5206\u914d\u7ed9\u4e00\u90e8\u5206\u72b6\u6001\u96c6\u5408\uff0c\u4f8b\u5982\u4e00\u4e9b\u4efb\u52a1\u53ea\u4ece\\(s_0\\)\u5f00\u59cb\uff0c\u5219\\(d(s_0)=1,d(s\\neq s_0)=0\\)</li> <li>\u7b56\u7565\u76f8\u5173\uff1a\u901a\u5e38\u91c7\u7528\u7a33\u6001\u72b6\u6001\u5206\u5e03\uff0c\u82e5\u5bf9\u72b6\u6001\u8f6c\u79fb\\(s\\rightarrow a\\rightarrow s'\\)\uff0c\u6ee1\u8db3</li> </ul> \\[ d(s')=\\sum_{s\\in\\mathcal{S}}\\sum_{a\\in\\mathcal{A}}p(s'|s,a)\\cdot\\pi_\\theta(a|s)\\cdot d(s) \\] </li> </ul>"},{"location":"MARL/Lec5/#_6","title":"\u8ba1\u7b97\u7b56\u7565\u68af\u5ea6","text":"<ul> <li>\u5982\u68af\u5ea6\u4e0b\u964d\u3001\u725b\u987f\u8fed\u4ee3</li> <li>\u4ee5\u6700\u5927\u5316\u5e73\u5747\u8f68\u8ff9\u56de\u62a5\u76ee\u6807\u51fd\u6570\u4e3a\u4f8b,\\(\\tau\\)\u4e3a\\(\\pi_\\theta\\)\u91c7\u6837\u5f97\u5230\u8f68\u8ff9\\(\\{s_1,a_1,r_1,s_2,a_2,r_2,\\cdots,s_T\\}\\)</li> </ul> \\[ \\max_\\theta J(\\theta)=\\max_\\theta \\mathbb{E}_{\\tau\\sim p_\\theta(\\tau)}[\\sum_t r(s_t,a_t)] \\] <ul> <li>\u8bb0\\(G(\\tau)=\\sum_t r(s_t,a_t)\\)\uff0c\u5e73\u5747\u8f68\u8ff9\u56de\u62a5\u76ee\u6807\u7684\u7b56\u7565\u68af\u5ea6\u4e3a</li> </ul> <ul> <li>\u4e0d\u540c\u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u5f97\u5230\u4e0a\u8ff0\u7b56\u7565\u68af\u5ea6\uff0c\u4ece\u800c\u5bf9\u7b56\u7565\u8fdb\u884c\u4f18\u5316\\(\\theta_{t+1}\\leftarrow\\theta_t+\\nabla_\\theta J(\\theta)\\)</li> </ul>"},{"location":"MARL/Lec5/#_7","title":"\u7b56\u7565\u68af\u5ea6\u7b97\u6cd5","text":""},{"location":"MARL/Lec5/#reinforce","title":"Reinforce","text":"<ol> <li> <p>\u6dfb\u52a0baseline</p> <ul> <li>\u8bad\u7ec3\u53ef\u80fd\u5b58\u5728\u504f\u5dee\uff1a\u8003\u8651\u53ea\u6709\u6b63\u5956\u52b1\uff0c\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\u8fdb\u884c\u4f18\u5316\uff0c\u6700\u7ec8\u80fd\u591f\u4f7f\u5f97\u5956\u52b1\u503c\u9ad8\u7684\u52a8\u4f5c\u5206\u914d\u8f83\u9ad8\u7684\u91c7\u6837\u6982\u7387\uff0c\u800c\u5956\u52b1\u503c\u4f4e\u7684\u52a8\u4f5c\u5206\u914d\u8f83\u4f4e\u7684\u91c7\u6837\u6982\u7387\uff0c\u4f46\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u6211\u4eec\u53ef\u80fd\u5e76\u4e0d\u80fd\u91c7\u6837\u5230\u6240\u6709\u7684\u52a8\u4f5c\uff0c\u5982\u53ea\u80fd\u91c7\u6837\u5230b\u548cc \uff0c\u8fd9\u5c31\u4f1a\u4f7f\u5f97\u6211\u4eec\u7684\u4f18\u5316\u6709\u6240\u504f\u5dee\uff1a</li> </ul> <p> </p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u5c06\u5956\u52b1\u51fd\u6570\u51cf\u53bb\u4e00\u4e2a\u57fa\u7ebf\ud835\udc4f\uff0c\u4f7f\u5f97\\(\ud835\udc45(\ud835\udf0f) \u2212 \ud835\udc4f\\) \u6709\u6b63\u6709\u8d1f<ul> <li>\u5982\u679c\\(\ud835\udc45(\ud835\udf0f) &gt; \ud835\udc4f\\)\uff0c\u5c31\u8ba9\u91c7\u53d6\u5bf9\u5e94\u52a8\u4f5c\u7684\u6982\u7387\u63d0\u5347</li> <li>\u5982\u679c\\(\ud835\udc45(\ud835\udf0f)&lt; \ud835\udc4f\\)\uff0c\u5c31\u8ba9\u91c7\u53d6\u5bf9\u5e94\u52a8\u4f5c\u7684\u6982\u7387\u964d\u4f4e</li> </ul> </li> <li>\u4e00\u822c\u53d6\\(b=\\dfrac{1}{N}\\sum\\limits_{i=1}^NR(\\tau)\\)\uff0c\u8bad\u7ec3\u65f6\u8bb0\u5f55\\(R(\\tau)\\)\u7684\u503c\u5e76\u7ef4\u62a4\u5e73\u5747\u503c</li> <li>\u51cf\u53bb\u4e00\u4e2a\u57fa\u7ebf\u5e76\u4e0d\u4f1a\u5f71\u54cd\u539f\u68af\u5ea6\u7684\u671f\u671b\u503c</li> </ul> <p> </p> </li> <li> <p>\u5b9e\u73b0\u7b56\u7565\u68af\u5ea6\uff1a\u5229\u7528\u81ea\u52a8\u6c42\u5bfc\u5de5\u5177\u5b9e\u73b0        </p> <ul> <li>\u5c06\u7b56\u7565\u68af\u5ea6\u7684\u76ee\u6807\u51fd\u6570\u89c6\u4e3a\u6781\u5927\u4f3c\u7136\u6cd5\u7684\u76ee\u6807\u51fd\u6570\u4e00\u4e2a\u5229\u7528\u7d2f\u79ef\u5956\u52b1\u8fdb\u884c\u52a0\u6743\u7684\u7248\u672c</li> </ul> </li> <li> <p>\u7b56\u7565\u68af\u5ea6\u5b58\u5728\u95ee\u9898</p> <ul> <li>\u4e3a\u540c\u7b56\u7565\u7b97\u6cd5\uff0c\u6837\u672c\u5229\u7528\u7387\u8f83\u4f4e</li> <li>\u8f83\u5927\u7684\u7b56\u7565\u66f4\u65b0\u6216\u4e0d\u9002\u5b9c\u7684\u66f4\u65b0\u6b65\u957f\u4f1a\u5bfc\u81f4\u8bad\u7ec3\u7684\u4e0d\u7a33\u5b9a<ul> <li>\u4e0d\u9002\u5b9c\u66f4\u65b0\u6b65\u957f \\(\\rightarrow\\) \u574f\u7b56\u7565 \\(\\rightarrow\\) \u4f4e\u8d28\u91cf\u7684\u6570\u636e</li> <li>\u53ef\u80fd\u96be\u4ee5\u4ece\u7cdf\u7cd5\u7b56\u7565\u4e2d\u6062\u590d\uff0c\u5bfc\u81f4\u6027\u80fd\u5d29\u6e83</li> </ul> </li> </ul> </li> <li>\u79bb\u7b56\u7565\u68af\u5ea6\uff1a\u6839\u636e\u91cd\u8981\u6027\u91c7\u6837\u5229\u7528\u5f02\u7b56\u7565\u6837\u672c</li> </ol> <ol> <li> <p>\u81ea\u7136\u7b56\u7565\u68af\u5ea6\uff1a \\(d^*=\\arg\\max\\limits_dJ(\\theta+d), s.t. KL(\\pi_\\theta||\\pi_{\\theta+d})=c\\)</p> <ul> <li> <p>KL\u6563\u5ea6\u7528\u4e8e\u8861\u91cf\u4e24\u4e2a\u5206\u5e03\u7684\u63a5\u8fd1\u7a0b\u5ea6</p> \\[KL(\\pi_\\theta||\\pi_{\\theta'})=\\mathbb{E}_{\\pi_\\theta}[\\log\\pi_\\theta]-\\mathbb{E}_{\\pi_{\\theta'}}[\\log\\pi_{\\theta'}]\\] </li> <li> <p>\u5c06\u66f4\u65b0\u524d\u540e\u7b56\u7565\u7684KL\u6563\u5ea6\u9650\u5b9a\u4e3a\u4e00\u4e2a\u5e38\u6570c\uff0c\u786e\u4fdd\u7b56\u7565\u5206\u5e03\u4ee5\u4e00\u4e2a\u5e38\u91cf\u901f\u5ea6\u66f4\u65b0\uff0c\u800c\u4e0d\u53d7\u7b56\u7565\u7684\u53c2\u6570\u5316\u5f62\u5f0f\u5f71\u54cd</p> </li> <li>\u5c06KL\u6563\u5ea6\u8fdb\u884c\u4e8c\u9636\u6cf0\u52d2\u5c55\u5f00\uff0c\\(KL(\\pi_\\theta||\\pi_{\\theta+d})\\approx \\dfrac{1}{2}d^TFd\\)\uff0c\u5176\u4e2dF\u4e3aFisher Information Matrix\uff0c\u5373</li> </ul> <p>$$   \\mathbb{E}{\\pi\\theta}[\\nabla\\log\\pi_\\theta\\nabla\\log\\pi_\\theta^T]   $$</p> <p> </p> <ul> <li>\u4ece\u800c\u5f97\u5230\\(\\theta_{t+1}=\\theta_t+\\alpha F^{-1}\\nabla_\\theta J (\\theta)\\)\uff0c\u5176\u66f4\u65b0\u6548\u679c\u4e0e\u6a21\u578b\u7684\u53c2\u6570\u5316\u65e0\u5173</li> </ul> </li> </ol>"},{"location":"MARL/Lec5/#actor-critic","title":"Actor-Critic\u7b97\u6cd5","text":"<ul> <li> <p>\u7b56\u7565\u68af\u5ea6\u5e76\u5229\u7528\u4f18\u52bf\u51fd\u6570\\(\\hat{A}^\\pi(s_t^i,a_t^i)=\\hat{Q}^\\pi(s_t^i,a_t^i)-\\hat{V}^\\pi(s_t^i)\\)   $$   \\nabla_\\theta J(\\theta)\\approx\\dfrac{1}{N}\\sum_{i=1}^N(\\sum_{t=1}^T\\nabla_\\theta\\log\\pi_\\theta(a_t^i|s_t^i)\\hat{A}^\\pi(s_t^i,a_t^i))   $$</p> </li> <li> <p>\u601d\u60f3\uff1a\u901a\u8fc7\u51cf\u53bb\u4e00\u4e2a\u57fa\u7ebf\u503c\u6765\u6807\u51c6\u5316\u8bc4\u8bba\u5bb6\u7684\u6253\u5206</p> <ul> <li>\u964d\u4f4e\u8f83\u5dee\u5de5\u4f5c\u6982\u7387\uff0c\u63d0\u9ad8\u8f83\u4f18\u52a8\u4f5c\u6982\u7387</li> <li>\u8fdb\u4e00\u6b65\u964d\u4f4e\u65b9\u5dee</li> </ul> </li> </ul> \\[\\nabla_\\theta J(\\theta)\\approx\\dfrac{1}{N}\\sum_{i=1}^N(\\sum_{t=1}^T\\nabla_\\theta\\log\\pi_\\theta(a_t^i|s_t^i)\\hat{A}^\\pi(s_t^i,a_t^i)) \\] \\[ \\approx\\dfrac{1}{N}\\sum_{i=1}^N(\\sum_{t=1}^T\\nabla_\\theta\\log\\pi_\\theta(a_t^i|s_t^i)[\\hat{Q}^\\pi(s_t^i,a_t^i)-\\hat{V}^\\pi(s_t^i)]) \\] \\[ \\approx\\dfrac{1}{N}\\sum_{i=1}^N(\\sum_{t=1}^T\\nabla_\\theta\\log\\pi_\\theta(a_t^i|s_t^i)[R(s_t^i,a_t^i)+\\gamma\\hat{V}^\\pi(s_{t+1}^i)-\\hat{V}^\\pi(s_t^i)]) \\] <ul> <li> <p>\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u62df\u5408\\(\\hat{V}^\\pi\\)</p> </li> <li> <p>\u6df1\u5ea6A2C\u7b97\u6cd5</p> </li> </ul> <ul> <li>\u6279\u91cf\u66f4\u65b0\uff1a\u83b7\u5f97\u4e00\u4e2abatch\u7684\u6570\u636e\u540e\u518d\u8fdb\u884c\u66f4\u65b0\uff0c\u540c\u6837\u548c\u4e0a\u4e00\u8282\u7c7b\u4f3c\u6709\u540c\u6b65\u548c\u5f02\u6b65</li> </ul>"},{"location":"MARL/Lec5/#a3c","title":"A3C\u7b97\u6cd5","text":"<p>Asynchronous A2C\uff0c\u6d89\u53ca\u6267\u884c\u4e00\u7ec4\u5f02\u6b65\u5e76\u884c\u7684\u73af\u5883\uff0c\u548cA2C\u4e00\u6837\u4f7f\u7528\u4f18\u52bf\u51fd\u6570\u3002\u5145\u5206\u5229\u7528GPU\u8d44\u6e90</p>"},{"location":"MARL/Lec6/","title":"Lec 6","text":""},{"location":"MARL/Lec6/#61","title":"6.1 \u7b56\u7565\u5b66\u4e60\u9ad8\u7ea7\u6280\u5de7","text":"<p>From \u300a\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u300b\u7b2c 9 \u7ae0</p>"},{"location":"MARL/Lec6/#trpo","title":"TRPO","text":"<p>\u7f6e\u4fe1\u57df\u7b56\u7565\u4f18\u5316 Trust Region Policy Optimization</p> <ul> <li>\u4f18\u52bf\uff1a\u8868\u73b0\u66f4\u7a33\u5b9a\uff0c\u5bf9\u5b66\u4e60\u7387\u4e0d\u654f\u611f\uff1b\u9700\u8981\u7ecf\u9a8c\u66f4\u5c11</li> </ul>"},{"location":"MARL/Lec6/#_1","title":"\u7f6e\u4fe1\u57df","text":"<p>\u6784\u9020\u51fd\u6570\\(L(\\theta|\\theta_{now})\\)\uff0c\u6ee1\u8db3\u5bf9\\(\\forall\\theta\\in\\mathcal{N}(\\theta_{now})\\)\uff0c\u6b64\u51fd\u6570\u5f88\u63a5\u8fd1\u76ee\u6807\u51fd\u6570\\(J(\\theta)\\)\uff0c\u5176\u4e2d\\(\\mathcal{N}(\\theta_{now})\\)\u4e3a\u90bb\u57df\u3002\u6b64\u65f6\u6211\u4eec\u79f0\u6b64\u90bb\u57df\u4e3a\u7f6e\u4fe1\u57df\uff0c\u5373\u5728\u6b64\u8303\u56f4\u6211\u4eec\u53ef\u4ee5\u4fe1\u4efb\\(L(\\theta|\\theta_{now})\\)\uff0c\u7528\u4ed6\u4ee3\u66ff\u76ee\u6807\u51fd\u6570</p> <ol> <li>\u7f6e\u4fe1\u57df\u65b9\u6cd5\uff1a<ul> <li>\u7b2c\u4e00\u6b65\uff1a\u505a\u8fd1\u4f3c\uff0c\u7ed9\u5b9a\\(\\theta_{now}\\)\uff0c\u6784\u9020\u51fd\u6570\\(L\\)\uff0c\u6ee1\u8db3\u5982\u4e0a\u5b9a\u4e49\u3002\u6bd4\u5982\u8499\u7279\u5361\u6d1b\u3001\u4e8c\u9636\u6cf0\u52d2</li> <li>\u7b2c\u4e8c\u6b65\uff1a\u6700\u5927\u5316\uff0c\u5728\u7f6e\u4fe1\u57df\u5185\u5bfb\u627e\u4f7f\u5f97\\(L\\)\u6700\u5927\u7684\\(\\theta\\)\uff0c\u5373\\(\\theta_{new}=\\arg\\max\\limits_{\\theta\\in\\mathcal{N}(\\theta_{now})}L(\\theta|\\theta_{now})\\)\uff0c\u9700\u8981\u89e3\u4e00\u4e2a\u5e26\u7ea6\u675f\u7684\u6700\u5927\u5316\u95ee\u9898\uff0c\u5229\u7528\u68af\u5ea6\u6295\u5f71\u7b97\u6cd5\u3001\u62c9\u683c\u6717\u65e5\u6cd5\u7b49</li> </ul> </li> </ol> <p>Example</p> <p> </p>"},{"location":"MARL/Lec6/#_2","title":"\u7b56\u7565\u5b66\u4e60","text":"<p>\u72b6\u6001\u4ef7\u503c\u7684\u7b49\u4ef7\u5f62\u5f0f</p> <p>\u76ee\u6807\u51fd\u6570\u7684\u7b49\u4ef7\u5f62\u5f0f</p>"},{"location":"MARL/Lec6/#trpo_1","title":"TRPO \u8bad\u7ec3\u6d41\u7a0b","text":"<ol> <li> <p>\u8fd1\u4f3c\uff1a</p> <ul> <li>\u5f53\u524d\u7b56\u7565\u7f51\u7edc\u53c2\u6570\\(\\theta_{now}\\)\uff0c\u7528\u7b56\u7565\u7f51\u7edc\\(\\pi(a|s;\\theta_{now})\\)\u63a7\u5236\u667a\u80fd\u4f53\u4e0e\u73af\u5883\u4ea4\u4e92\uff0c\u8bb0\u5f55\u8f68\u8ff9\uff1a</li> </ul> <p>$$   s_1, a_1, r_1, s_2, a_2, r_2, \\cdots, s_n, a_n, r_n   $$</p> <ul> <li>\u5bf9\u4e8e\u6240\u6709\\(t=1,2,\\cdots,n\\)\uff0c\u8ba1\u7b97\u6298\u6263\u56de\u62a5\\(u_t=\\sum_{k=t}^n\\gamma^{k-t}\\cdot r_k\\)</li> <li>\u5f97\u51fa\u8fd1\u4f3c\u51fd\u6570</li> </ul> <p>$$   \\tilde{L}(\\theta|\\theta_{now})=\\dfrac{1}{n}\\sum_{t=1}^n\\dfrac{\\pi(a_t|s_t;\\theta)}{\\pi(a_t|s_t;\\theta_{now})}\\cdot u_t   $$</p> </li> <li> <p>\u6700\u5927\u5316\uff1a\u7ea6\u675f\u6761\u4ef6\u53ef\u4ee5\u662f\u4e8c\u8303\u6570\u8ddd\u79bb\u3001KL \u6563\u5ea6\u7b49</p> </li> <li> <p>\u6709\u4e24\u4e2a\u9700\u8981\u8c03\u7684\u8d85\u53c2\uff0c\u4e00\u662f\u7f6e\u4fe1\u57df\u534a\u5f84\\(\\Delta\\)\uff0c\u53e6\u4e00\u4e2a\u662f\u6c42\u89e3\u6700\u5927\u5316\u95ee\u9898\u7684\u5b66\u4e60\u7387</p> </li> </ol>"},{"location":"MARL/Lec6/#_3","title":"\u71b5\u6b63\u5219","text":"<p>\u6211\u4eec\u5e0c\u671b\u7b56\u7565\u7f51\u7edc\u8f93\u51fa\u7684\u6982\u7387\u5206\u5e03\u7684\u71b5\u4e0d\u8981\u592a\u5c0f</p> \\[ H(s;\\theta)\\triangleq Entropy[\\pi(\\cdot|s;\\theta)]=-\\sum_{a\\in\\mathcal{A}}\\pi(a|s;\\theta)\\cdot\\ln\\pi(a|s;\\theta) \\] <p>\u53ea\u4f9d\u8d56\u4e8e\u72b6\u6001 s \u4e0e\u7b56\u7565\u7f51\u7edc\u53c2\u6570\\(\\theta\\)</p> <p>\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u9700\u8981\u6c42\u89e3\u7684\u6700\u5927\u5316\u51fd\u6570\uff0c\u5176\u4e2d\\(\\lambda\\)\u4e3a\u8d85\u53c2</p> \\[ \\max_\\theta J(\\theta)+\\lambda\\cdot\\mathbb{E}_S[H(S;\\theta)] \\] <p>\u8fd9\u91cc\u4f7f\u7528\u7b56\u7565\u68af\u5ea6\u6c42\u89e3</p> \\[ \\nabla_\\theta[J(\\theta)+\\lambda\\cdot\\mathbb{E}_S[H(S;\\theta)]]=\\mathbb{E}_S[\\mathbb{E}_{A\\sim\\pi(\\cdot|s;\\theta)}[\\tilde{g}(S,A;\\theta)]] \\]"},{"location":"MARL/Lec6/#62","title":"6.2 \u8fde\u7eed\u63a7\u5236","text":"<p>From \u300a\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u300b\u7b2c 10 \u7ae0</p>"},{"location":"MARL/Lec6/#_4","title":"\u786e\u5b9a\u7b56\u7565\u68af\u5ea6","text":"<p>\u786e\u5b9a\u7b56\u7565\u68af\u5ea6(Deterministic Policy Gradient, DPG)\uff0c\u7b56\u7565\u7f51\u7edc\u8f93\u51fa\u4e3a d \u7ef4\u7684\u5411\u91cf a\u3002\u5bf9\u4e8e\u786e\u5b9a\u7684\u72b6\u6001 s\uff0c\u7b56\u7565\u7f51\u7edc\\(\\mu\\)\u8f93\u51fa\u52a8\u4f5c a \u662f\u786e\u5b9a\u7684\uff0c\u800c\u975e\u968f\u673a\u62bd\u6837\u3002\u4ef7\u503c\u7f51\u7edc\u662f\u5bf9\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\u7684\u8fd1\u4f3c\uff0c\u4ec5\u7528\u6765\u5728\u8bad\u7ec3\u7684\u65f6\u5019\u8bc4\u4ef7\u7b56\u7565\u7f51\u7edc</p>"},{"location":"MARL/Lec6/#_5","title":"\u7b97\u6cd5\u63a8\u5bfc","text":"<ul> <li> <p>\u7528\u884c\u4e3a\u7b56\u7565\u6536\u96c6\u7ecf\u9a8c\uff1a\u8fd9\u91cc\u884c\u4e3a\u7b56\u7565\u53ef\u4ee5\u4e0d\u540c\u4e8e\u76ee\u6807\u7b56\u7565\uff0c\u884c\u4e3a\u7b56\u7565\u53ef\u4ee5\u662f\u4efb\u610f\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fc7\u65f6\u7684\u7b56\u7565\u7f51\u7edc\u53c2\u6570\uff0c\u800c\u4e14\u53ef\u4ee5\u5f80\u52a8\u4f5c\u4e2d\u52a0\u5165\u566a\u58f0\\(\\epsilon\\in\\mathbb{R}^d\\)\uff0c\u5982\\(a=\\mu(s;\\theta_{old})+\\epsilon\\)\u3002\u901a\u8fc7\u5f02\u7b56\u7565\u7684\u65b9\u5f0f\uff0c\u628a\u6536\u96c6\u7ecf\u9a8c\u548c\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u5206\u9694\u5f00\uff0c\u628a\u6536\u96c6\u5230\u7684\u7ecf\u9a8c\u5b58\u5165 replay buffer\u3002\u6211\u4eec\u628a\u667a\u80fd\u4f53\u7684\u8f68\u8ff9\u6574\u7406\u6210\\((s_t,a_t,r_t,s_{t+1})\\)\uff0c\u8bad\u7ec3\u7b56\u7565\u7f51\u7edc\u65f6\u53ea\u7528\u5230\\(s_t\\)\uff0c\u8bad\u7ec3\u4ef7\u503c\u7f51\u7edc\u90fd\u8981\u7528\u5230</p> </li> <li> <p>\u8bad\u7ec3\u7b56\u7565\u7f51\u7edc\uff1a\u6539\u8fdb\u53c2\u6570\\(\\theta\\)\uff0c\u4f7f\u5f97\u4ef7\u503c\u7f51\u7edc\u6253\u5206\\(\\hat{q}\\)\u66f4\u5927</p> </li> <li> <p>\u76ee\u6807\u51fd\u6570: \\(J(\\theta)=\\mathbb{E}_S[q(S,\\mu(S;\\theta);w)]\\)</p> </li> <li>\u68af\u5ea6\u4e0a\u5347: \\(g_j\\triangleq \\nabla_{\\theta }q(s_j,\\mu(s_j;\\theta);w)\\)\uff0c\u662f\\(\\nabla_\\theta J(\\theta)\\)\u7684\u65e0\u504f\u4f30\u8ba1</li> <li>\u5229\u7528\u94fe\u5f0f\u6cd5\u5219: \u5176\u4e2d\\(\\hat{a}_j=\\mu(s_j;\\theta)\\)</li> </ul> <p>$$   \\nabla_{\\theta }q(s_j,\\mu(s_j;\\theta);w)=\\nabla_\\theta\\mu(s_j;\\theta)\\cdot\\nabla_aq(s_j,\\hat{a}_j;w)   $$</p> <ul> <li>\u56e0\u6b64\u6211\u4eec\u5982\u4e0b\u66f4\u65b0\\(\\theta\\)</li> </ul> <p>$$   \\theta\\leftarrow\\theta+\\beta\\cdot\\nabla_\\theta\\mu(s_j;\\theta)\\cdot\\nabla_aq(s_j,\\hat{a}_j;w)   $$</p> <ul> <li> <p>\u8bad\u7ec3\u4ef7\u503c\u7f51\u7edc\uff1a\u8ba9\u4ef7\u503c\u7f51\u7edc q \u7684\u9884\u6d4b\u8d8a\u6765\u8d8a\u63a5\u8fd1\u771f\u5b9e\u4ef7\u503c\u51fd\u6570\uff0c\u5229\u7528\u5b9e\u9645\u89c2\u6d4b\u7684\u5956\u52b1\\(r\\)\u6765\u6821\u6b63</p> </li> <li> <p>\u9996\u5148\u8ba9\u4ef7\u503c\u7f51\u7edc\u9884\u6d4b\\(\\hat{q}_j,\\hat{q}_{j+1}\\),TD \u76ee\u6807\\(\\hat{y}_j=r_j+\\gamma\\cdot\\hat{q}_{j+1}\\)\uff0c\u5b9a\u4e49\u635f\u5931\u51fd\u6570\uff0c\u8ba1\u7b97\u68af\u5ea6\uff0c\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0</p> </li> <li> <p>\u8bad\u7ec3\u6d41\u7a0b\uff1a\u6bcf\u6b21\u4ece\u7ecf\u9a8c\u56de\u653e\u6570\u7ec4\u4e2d\u62bd\u53d6\u4e00\u4e2a\u56db\u5143\u7ec4\uff0c\u8fdb\u884c\u7b56\u7565\u7f51\u7edc\u9884\u6d4b\u3001\u4ef7\u503c\u7f51\u7edc\u9884\u6d4b\u3001\u8ba1\u7b97 TD \u76ee\u6807\u548c TD \u8bef\u5dee\u3001\u66f4\u65b0\u4ef7\u503c\u7f51\u7edc\u3001\u66f4\u65b0\u7b56\u7565\u7f51\u7edc</p> </li> </ul>"},{"location":"MARL/Lec6/#_6","title":"\u9ad8\u4f30\u95ee\u9898","text":"<ul> <li>TD \u76ee\u6807\u662f\u5bf9\u771f\u5b9e\u52a8\u4f5c\u4ef7\u503c\u7684\u9ad8\u4f30</li> <li>\u81ea\u4e3e\u5bfc\u81f4\u9ad8\u4f30\u7684\u4f20\u64ad</li> </ul>"},{"location":"MARL/Lec6/#td3","title":"\u53cc\u5ef6\u65f6\u786e\u5b9a\u7b56\u7565\u68af\u5ea6(TD3)","text":"<p>\u53ea\u6539\u8fdb DPG \u7684\u7b97\u6cd5\u800c\u4e0d\u6539\u53d8\u7ed3\u6784\u3002\u4f7f\u7528\u622a\u65ad\u53cc Q \u548c\u4e24\u4e2a\u6539\u8fdb</p>"},{"location":"MARL/Lec6/#_7","title":"\u89e3\u51b3\u9ad8\u4f30\u95ee\u9898","text":"<ul> <li>\u4f7f\u7528\u76ee\u6807\u7f51\u7edc\u8ba1\u7b97 TD \u76ee\u6807\\(\\hat{y}_j\\)\uff0c\u6709\u6240\u7f13\u89e3\u4f46\u9ad8\u4f30\u4ecd\u7136\u5f88\u4e25\u91cd</li> <li>\u66f4\u597d\u7684\u65b9\u6848\uff1a\u622a\u65ad\u53cc Q \u5b66\u4e60(clipped double Q-learning)\uff1a\u4f7f\u7528\u4e24\u4e2a\u4ef7\u503c\u7f51\u7edc\u548c\u4e00\u4e2a\u7b56\u7565\u7f51\u7edc\uff0c\u4e09\u4e2a\u795e\u7ecf\u7f51\u7edc\u5404\u5bf9\u5e94\u4e00\u4e2a\u76ee\u6807\u7f51\u7edc\uff0c\u7528\u76ee\u6807\u7b56\u7565\u7f51\u7edc\u8ba1\u7b97\u52a8\u4f5c\uff0c\u4e24\u4e2a\u76ee\u6807\u4ef7\u503c\u7f51\u7edc\u5206\u522b\u8ba1\u7b97\\(\\hat{y}_j\\)\uff0c\u7528\u8f83\u5c0f\u7684\u4f5c\u4e3a TD \u76ee\u6807</li> <li>\u8fdb\u4e00\u6b65\u6539\u8fdb\uff1a<ul> <li>\u5f80\u52a8\u4f5c\u4e2d\u52a0\u566a\u58f0\uff0c\u5373\u5728\u7528\u76ee\u6807\u7b56\u7565\u7f51\u7edc\u8ba1\u7b97\u52a8\u4f5c\u65f6\uff0c\u6539\u6210\\(\\overline{\\hat{a}_{j+1}}=\\mu(s_{j+1};\\theta^-)+\\xi\\)\uff0c\u5176\u4e2d\\(\\xi\\)\u4e3a\u968f\u673a\u5411\u91cf\uff0c\u6bcf\u4e2a\u5143\u7d20\u72ec\u7acb\u968f\u673a\u4ece\u622a\u65ad\u6b63\u6001\u5206\u5e03\u4e2d\u62bd\u53d6\u3002\u8fd9\u91cc\u8bb0\u622a\u65ad\u6b63\u6001\u5206\u5e03\u4e3a\\(\\mathcal{CN}(0,\\sigma^2,-c,c)\\)\uff0c\u53d8\u91cf\u843d\u5728\\([-c,c]\\)\u4e4b\u5916\u7684\u6982\u7387\u4e3a 0\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u566a\u58f0\u8fc7\u5927</li> <li>\u51cf\u5c0f\u66f4\u65b0\u7b56\u7565\u76ee\u6807\u548c\u7b56\u7565\u7f51\u7edc\u7684\u9891\u7387\uff1a\u6bcf\u9694 k \u8f6e\u66f4\u65b0\u4e00\u6b21\u7b56\u7565\u7f51\u7edc\u548c\u4e09\u4e2a\u76ee\u6807\u7f51\u7edc\u3002k \u4e3a\u8d85\u53c2</li> </ul> </li> </ul>"},{"location":"MARL/Lec6/#_8","title":"\u8bad\u7ec3\u6d41\u7a0b","text":"<p>\u6bcf\u6b21\u4ece\u6570\u7ec4\u4e2d\u968f\u673a\u62bd\u53d6\u4e00\u4e2a\u56db\u5143\u7ec4\uff0c\u8ba9\u76ee\u6807\u7b56\u7565\u7f51\u7edc\u9884\u6d4b\u3001\u4e24\u4e2a\u76ee\u6807\u4ef7\u503c\u7f51\u7edc\u9884\u6d4b\u3001\u8ba1\u7b97 TD \u76ee\u6807\u3001\u8ba9\u4e24\u4e2a\u4ef7\u503c\u7f51\u7edc\u505a\u9884\u6d4b\u3001\u8ba1\u7b97 TD \u8bef\u5dee\u3001\u66f4\u65b0\u4ef7\u503c\u7f51\u7edc\u3001\u6bcf\u9694 k \u8f6e\u66f4\u65b0\u7b56\u7565\u7f51\u7edc\u548c\u4e09\u4e2a\u76ee\u6807\u7f51\u7edc</p>"},{"location":"MARL/Lec6/#_9","title":"\u968f\u673a\u9ad8\u65af\u7b56\u7565","text":""},{"location":"MARL/Lec6/#_10","title":"\u7b56\u7565\u68af\u5ea6\u8bad\u7ec3\u6d41\u7a0b","text":"<ul> <li> <p>\u642d\u5efa\u5747\u503c\u7f51\u7edc\\(\\mu(s;\\theta)\\)\uff0c\u65b9\u5dee\u5bf9\u6570\u7f51\u7edc\\(\\rho(s;\\theta)\\)\uff0c\u8f85\u52a9\u7f51\u7edc\\(f(s,a;\\theta)\\)</p> </li> <li> <p>\u8ba9\u667a\u80fd\u4f53\u4e0e\u73af\u5883\u4ea4\u4e92\uff0c\u8ba1\u7b97\u6bcf\u4e00\u6b65\u7684\u72b6\u6001\u3001\u52a8\u4f5c\u3001\u5956\u52b1\uff0c\u5e76\u5bf9\u53c2\u6570\\(\\theta\\)\u66f4\u65b0</p> </li> <li> <p>\u89c2\u6d4b\u5f53\u524d\u72b6\u6001 s\uff0c\u8ba1\u7b97\u5747\u503c\u3001\u65b9\u5dee\u5bf9\u6570\u3001\u65b9\u5dee;\u6b64\u5904\u6307\u6570\u51fd\u6570\u5e94\u7528\u5230\u5411\u91cf\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20</p> \\[ \\hat{\\mu}=\\mu(s;\\theta), \\hat{\\rho}=\\rho(s;\\theta), \\hat{\\sigma}^2=\\exp(\\hat{\\rho}) \\] </li> <li> <p>\u8bbe\\(\\hat{\\mu}_i\\)\u548c\\(\\hat{\\sigma}_i\\)\u5206\u522b\u662f\u7b2c i \u4e2a\u5143\u7d20\uff0c\u4ece\u6b63\u6001\u5206\u5e03\u4e2d\u91c7\u6837\\(a_i\\sim\\mathcal{N}(\\hat{\\mu}_i,\\hat{\\sigma}_i^2)\\)\uff0c\u5f97\u5230\u52a8\u4f5c\\(\\mathcal{a}=[a_1,a_2,\\cdots,a_d]\\)</p> </li> <li> <p>\u8fd1\u4f3c\u8ba1\u7b97\u52a8\u4f5c\u4ef7\u503c \\(\\hat{q}\\approx Q_\\pi(s,a)\\)</p> </li> <li> <p>\u7528\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u51fa\u8f85\u52a9\u7f51\u7edc\u5173\u4e8e\u53c2\u6570\\(\\theta\\)\u7684\u68af\u5ea6 \\(\\nabla_\\theta f(s,a;\\theta)\\)</p> </li> <li> <p>\u7528\u7b56\u7565\u68af\u5ea6\u4e0a\u5347\u66f4\u65b0\u53c2\u6570 \\(\\theta\\leftarrow\\theta+\\beta\\cdot\\hat{q}\\cdot\\nabla_\\theta f(s,a;\\theta)\\)</p> </li> </ul>"},{"location":"MARL/Lec6/#reinforce","title":"REINFORCE","text":"<p>\u7528\u5b9e\u9645\u89c2\u6d4b\u7684\u6298\u6263\u56de\u62a5\\(u_t=\\sum_{k=t}^n\\gamma^{k-t}r_k\\)\u4ee3\u66ff\u52a8\u4f5c\u4ef7\u503c\uff0c\u53ef\u4ee5\u5c06\u7b56\u7565\u68af\u5ea6\u8fd1\u4f3c\u6210\\(g\\approx u_t\\nabla_\\theta f(s,a;\\theta)\\)\uff0c\u91cd\u590d\u4e00\u4ee5\u4e0b\u6b65\u9aa4\u76f4\u5230\u6536\u655b\uff1a</p> <p>\u6548\u679c\u4e0d\u5982\u4f7f\u7528\u57fa\u7ebf\u7684 REINFORCE</p>"},{"location":"MARL/Lec6/#ac","title":"\u7528 AC \u5b66\u4e60\u53c2\u6570","text":"<p>\u7565</p>"},{"location":"MARL/Lec7/","title":"7 MARL with Factored Value Functions","text":""},{"location":"MARL/Lec7/#_1","title":"\u535a\u5f08\u8bba\u6982\u5ff5","text":"<ol> <li>\u56de\u62a5payoff, utility \\(u=(u_1,u_2,\\dots,u_n)\\rightarrow\\mathbb{R}\\)<ul> <li>\\(u_1: A_1\\times A_2\\rightarrow\\mathbb{R}\\)</li> </ul> </li> <li>\u56de\u62a5\u77e9\u9635</li> </ol> <ol> <li> <p>\u5171\u8bc6\uff1aA\u548cB\u540c\u65f6\u88ab\u544a\u77e5\u6e38\u620f\u89c4\u5219</p> </li> <li> <p>\u7eaf\u7b56\u7565\u4e0e\u6df7\u5408\u7b56\u7565</p> </li> </ol> <ol> <li>\u6700\u4f73\u7b56\u7565\u535a\u5f08<ul> <li>\u7ed9\u5b9a\\(a_{-i}\\in A_1\\times A_2\\times\\cdots\\times A_{i-1}\\times A_{i+1}\\times\\cdots\\times A_n\\)</li> <li>\u5982\u679c\\(\\forall a_i'\\in A_i,u_i(a_i,a_{-i})\\geq u_i(a_i',a_{-i})\\)\uff0c\u5219\\(a_i\\)\u662f\u9488\u5bf9\\(a_{-i}\\)\u7684\u6700\u4f73\u7b56\u7565</li> </ul> </li> <li>\u5360\u4f18\u7b56\u7565(dominant strategy)<ul> <li>\u7ed9\u5b9a\\(\\forall a_{-i},a_i\\)\u90fd\u662f\u6700\u4f73\u7b56\u7565\u535a\u5f08\uff0c\u5219\u4e3a\u5360\u4f18\u7b56\u7565</li> </ul> </li> <li>\u7eb3\u4ec0\u5747\u8861/\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\uff1a\u8054\u5408\u7b56\u7565\u4e3a\u7eb3\u4ec0\u5747\u8861\u89e3\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u6bcf\u4e2a\u73a9\u5bb6\uff0c\u7b56\u7565\\(a_i\\)\u90fd\u662f\u6700\u4f73\u535a\u5f08</li> </ol>"},{"location":"MARL/Lec7/#_2","title":"\u591a\u667a\u80fd\u4f53\u4fe1\u7528\u5206\u914d","text":"<ol> <li>MA-MDP\u6a21\u578b\u5047\u8bbe\uff1a\u6bcf\u4e2a\u667a\u80fd\u4f53\u90fd\u53ef\u4ee5\u83b7\u53d6\u5168\u5c40\u72b6\u6001</li> <li> <p>Dec-POMDP\uff1a\u667a\u80fd\u4f53\u65e0\u6cd5\u83b7\u5f97\u5168\u5c40\u72b6\u6001\uff0c\u53ea\u80fd\u770b\u5230\u5168\u5c40\u72b6\u6001\u7684\u6295\u5f71</p> <ul> <li>\u89c2\u6d4b\uff1a\\(o_i\\in\\Omega\\)</li> <li>\u89c2\u6d4b\u51fd\u6570\uff1a\\(o_i\\in\\Omega\\sim O(s,i)\\)</li> <li>\u667a\u80fd\u4f53i\u7684\u5206\u5e03\u5f0f\u7b56\u7565\uff1a\\(\\pi_i(\\tau_i):T\\rightarrow A\\)<ul> <li>\u884c\u4e3a\u89c2\u6d4b\u5386\u53f2\uff1a\\(\\tau_i\\in T=(\\Omega\\times A)^*\\)</li> </ul> </li> <li>\u96c6\u4e2d\u8bad\u7ec3\u5206\u5e03\u5f0f\u6267\u884c(CTDE)<ul> <li>\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u4ee5\u83b7\u53d6\u5168\u5c40\u72b6\u6001</li> <li>\u6d4b\u8bd5\u8fc7\u7a0b\u53ea\u80fd\u770b\u5230\u5c40\u90e8\u89c2\u6d4b</li> </ul> </li> </ul> </li> <li> <p>MARL\u6311\u6218</p> <ul> <li>\u53ef\u6269\u5c55\u6027\uff1a\u7ef4\u5ea6\u8bc5\u5492</li> <li>\u591a\u667a\u80fd\u4f53\u4fe1\u7528\u5206\u914d\uff1a\u6bcf\u4e2a\u667a\u80fd\u4f53\u5bf9\u6574\u4f53\u535a\u5f08\u7684\u8d21\u732e</li> <li>\u6837\u672c\u5229\u7528\u7387\uff1a\u9700\u8981\u5927\u91cf\u7684\u4ea4\u4e92\u6570\u636e</li> <li>\u53d7\u9650\u7684\u89c2\u6d4b\uff1a\u53d7\u9650\u4f20\u611f\u5668\uff0c\u65e0\u6cd5\u83b7\u53d6\u5168\u5c40\u4fe1\u606f</li> <li>\u63a2\u7d22\uff1a\u6307\u6570\u7ea7\u522b\u7684\u8054\u5408\u7b56\u7565\u7a7a\u95f4</li> </ul> </li> </ol> <p>MARL\u8303\u4f8b</p> <p> </p> <ol> <li>\u7ebf\u6027\u503c\u5206\u89e3\uff1a\u5373\\(Q_{tot}(\\tau,a)=\\sum_iQ_i(\\tau_i,a_i)\\), VDN\u7b97\u6cd5<ul> <li>\u6ee1\u8db3IGM</li> <li>\u6df7\u5408\u7f51\u7edc\u65e0\u53c2\u6570\uff0cQ\u76f4\u63a5\u76f8\u52a0</li> <li>\u5bf9\u6bcf\u4e2a\u667a\u80fd\u4f53\u6ca1\u6709\u76f4\u63a5\u7684\u72ec\u7279\u7684\u5956\u52b1\u5206\u914d</li> <li>\u5728\u795e\u7ecf\u7f51\u7edc\u68af\u5ea6\u56de\u4f20\u65f6\u5b8c\u6210\u9690\u5f0f\u5956\u52b1\u5206\u914d</li> <li>\u7406\u8bba\u4fdd\u8bc1\uff0c\u53c2\u8003Multi-Agent Fitted Q-Iteration\u6846\u67b6</li> </ul> </li> </ol> <ol> <li>DOP\u7b97\u6cd5\uff1a\u5f15\u5165\u7ebf\u6027\u53ef\u5206\u89e3\u7684critic\u7f51\u7edc\uff0c\u5373\\(Q_{tot}^\\pi(\\tau,.)=\\sum_ik_i(\\tau)Q_i(\\tau,.)+b(\\tau)\\)\uff0c\u5176\u4e2d\\(\\tau\\)\u4e3a\u8054\u5408\u5386\u53f2\u6570\u636e<ul> <li>\u7b80\u5355\u5b9e\u7528</li> <li>\u652f\u6301\u79bb\u7ebfMARL\uff0c\u5e76\u80fd\u51cf\u5c0f\u65b9\u5dee</li> <li>\u5728\u7b56\u7565\u5355\u8c03\u63d0\u5347\u7684\u524d\u63d0\u4e0b\u6536\u655b\u6709\u7406\u8bba\u4fdd\u8bc1</li> <li>\u9002\u5408\u79bb\u6563\u548c\u8fde\u7eed\u884c\u4e3a\u7a7a\u95f4</li> </ul> </li> </ol> <ol> <li> <p>\u7ebf\u6027\u5206\u89e3\u5c40\u9650\u6027\uff1a\u6709\u9650\u7684\u8868\u5f81\u80fd\u529b\uff0c\u6ca1\u6709\u5168\u5c40\u6536\u655b\u4fdd\u8bc1</p> </li> <li> <p>QMIX\uff1a\u5f15\u5165\u5355\u8c03\u6df7\u5408\u7f51\u7edc\u51fd\u6570\uff0c\u5373\\(\\dfrac{\\partial Q_{tot}}{\\partial Q_i}\\geq0\\)(baseline)</p> <ul> <li>\u5f15\u5165\u8d85\u7f51\u7edc\uff0c\u4f7f\u5f97\u6df7\u5408\u7f51\u7edc\u7684\u7f51\u7edc\u53c2\u6570\u88ab\u9650\u5b9a\u4e3a\u975e\u8d1f\u3002\u5373\u6bcf\u4e2a\u667a\u80fd\u4f53\u81f3\u5c11\u5bf9\u7fa4\u4f53\u7684\u8d21\u732e\u4e3a\u6b63</li> </ul> </li> <li> <p>QPLEX\uff1aQ-Learning with IGM Factorization</p> </li> </ol>"},{"location":"MARL/Lec7/#marl","title":"\u5176\u4ed6MARL\u65b9\u6cd5","text":""},{"location":"MARL/Lec7/#_3","title":"\u52a8\u6001\u5171\u4eab\u5b66\u4e60\u76ee\u6807","text":"<ul> <li>\u591a\u667a\u80fd\u4f53\u5f3a\u5316\u5b66\u4e60\u9700\u8981\u66f4\u5927\u7684\u6837\u672c\u91cf\uff0c\u6240\u4ee5\u53c2\u6570\u5171\u4eab\u4f5c\u4e3a\u51cf\u5c11\u6837\u672c\u91cf\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u591a\u667a\u80fd\u4f53\u5f3a\u5316\u5b66\u4e60\u975e\u5e38\u91cd\u8981\u3002</li> <li>\u5728\u667a\u80fd\u4f53\u5b66\u4e60\u4e2d\uff0c\u667a\u80fd\u4f53\u503e\u5411\u4e8e\u5b66\u4e60\u5230\u5747\u8d28\u884c\u4e3a\u7b56\u7565\uff0c\u800c\u5b9e\u9645\u4e0a\uff0c\u4e0d\u540c\u7684\u667a\u80fd\u4f53\u5728\u73af\u5883\u4ea4\u4e92\u4e2d\u5f80\u5f80\u9700\u8981\u5f02\u8d28\u6027\u7b56\u7565</li> <li>\u56e0\u6b64\u52a8\u6001\u76ee\u6807\u5b66\u4e60\u53ef\u4ee5\u4f7f\u667a\u80fd\u4f53\u6839\u636e\u5176\u76ee\u6807\u6700\u5927\u5316\u4e2a\u4f53\u5dee\u5f02</li> </ul>"},{"location":"MARL/Lec7/#roma","title":"ROMA","text":"<ul> <li>\u76f8\u4f3c\u89d2\u8272\u7684\u667a\u80fd\u4f53\u5206\u4eab\u76f8\u4f3c\u7684\u5b66\u4e60\u76ee\u6807\u548c\u5206\u4eab\u76f8\u4f3c\u7684\u884c\u4e3a\u7b56\u7565\u3002<ul> <li>\u76f8\u4f3c\u89d2\u8272\\(\\leftrightarrow\\)\u76f8\u4f3c\u5b50\u4efb\u52a1\\(\\leftrightarrow\\)\u76f8\u4f3c\u884c\u4e3a\u7b56\u7565</li> </ul> </li> <li>\u89d2\u8272\u53ef\u4ee5\u4f5c\u4e3a\u77ed\u671f\u535a\u5f08\u8f68\u8ff9\u7684\u7f16\u7801\u5e76\u5d4c\u5165\u5230\u8f93\u5165\u3002</li> <li>\u667a\u80fd\u4f53\u4ee5\u5bf9\u5e94\u7684\u89d2\u8272\u4f5c\u4e3a\u6761\u4ef6\u8fdb\u884c\u7b56\u7565\u5b66\u4e60\u3002</li> <li>\u667a\u80fd\u4f53\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u52a8\u6001\u66f4\u6362\u5176\u89d2\u8272</li> </ul>"},{"location":"MARL/Lec7/#_4","title":"\u4ef7\u503c\u5206\u89e3\u5c40\u9650\u6027","text":"<ul> <li>\u4e0d\u786e\u5b9a\u6027<ul> <li>\u4ef7\u503c\u5206\u89e3\u53ef\u4ee5\u5bfc\u81f4\u5408\u4f5c\u5931\u8c03\uff1b</li> <li>\u5728\u5206\u5e03\u5f0f\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u5bfc\u81f4\u884c\u4e3a\u6d6a\u8d39\uff1b</li> </ul> </li> <li>\u56e0\u6b64\u53ef\u4ee5\u5f15\u5165\u667a\u80fd\u4f53\u4e4b\u95f4\u7684\u4ea4\u6d41</li> </ul>"},{"location":"MARL/Lec7/#ndq-nearly-decomposable-q-value-learning","title":"NDQ Nearly Decomposable Q-Value Learning","text":"<ul> <li>\u5141\u8bb8\u667a\u80fd\u4f53\u95f4\u4ea4\u6d41\uff0c\u4f46\u662f\u9700\u8981\u6700\u5c0f\u5316\u4ea4\u6d41\u4fe1\u9053</li> <li>\u667a\u80fd\u4f53\u5b66\u4e60\u4ec0\u4e48\u65f6\u5019\u3001\u5411\u8c01\u3001\u4ea4\u6d41\u4ec0\u4e48\u5185\u5bb9</li> </ul>"},{"location":"MARL/Lec7/#w-qmix","title":"W-QMIX","text":"<ul> <li>QMIX\u95ee\u9898<ul> <li>QMIX\u7b97\u6cd5\u7684\u5355\u8c03\u6027\u7ea6\u675f\u662f\u5145\u5206\u4e0d\u5fc5\u8981\u6761\u4ef6\uff0c\u5373\u6709\u4e9b\u573a\u666f\u7684\u503c\u51fd\u6570\u662fQMIX\u65e0\u6cd5\u7cbe\u786e\u62df\u5408\u7684\u3002\u4f8b\u5982\u4e00\u4e2a\u667a\u80fd\u4f53\u7684\u884c\u4e3a\u53d6\u51b3\u4e8e\u53e6\u4e00\u4e2a\u540c\u961f\u667a\u80fd\u4f53\u65f6\uff0cQMIX\u662f\u6ca1\u6709\u8003\u8651\u7684\uff0c\u540c\u65f6IGM\u539f\u5219\u4e5f\u88ab\u8fdd\u53cd\u4e86\u3002</li> <li>\\(\\mathcal{J}^*_{Qmix}\\)\u7b97\u5b50\u4e0d\u662f\u6536\u7f29\u6620\u5c04\uff0c\u5373QMIX\u7b97\u6cd5\u627e\u4e0d\u5230\\(\\mathcal{J}^*\\)\u5bf9\u5e94\u7684\u4e0d\u52a8\u70b9\uff0c\u800c\u53ea\u80fd\u627e\u5230\u5176\u6700\u63a5\u8fd1\u4e0d\u52a8\u70b9\u7684\u6b21\u4f18\u70b9\uff0c\u6240\u4ee5QMIX\u7684\u4f18\u5316\u7ed3\u679c\u53ef\u80fd\u4e0d\u662f\u552f\u4e00\u7684\u3002</li> <li>QMIX\u53ef\u80fd\u4f1a\u4f4e\u4f30\u67d0\u4e9b\u8054\u5408\u52a8\u4f5c\u7684\u4ef7\u503c\u3002\u8fd9\u662fQMIX\u81ea\u8eab\u7f3a\u9677\u5bfc\u81f4\u7684\uff0c\u4e0e\u8ba1\u7b97\u6027\u80fd\u3001\u63a2\u7d22\u673a\u5236\u3001\u53ca\u7f51\u7edc\u53c2\u6570\u6ca1\u6709\u5173\u7cfb</li> </ul> </li> <li>\u4f18\u5316\uff1a\u589e\u52a0\u6743\u91cd\u51fd\u6570 \\(\\pi_\\omega Q=\\arg\\min\\limits_{q\\in Q^{mix}}\\sum\\limits_{a\\in A}\\omega(s,a)(Q(s,a)-y)^2\\)</li> <li>\\(\\omega(s,a)=1\\)\uff0c\u5373QMIX</li> </ul>"},{"location":"MARL/Lec9/","title":"9 MARL with A-C","text":""},{"location":"MARL/Lec9/#maddpg","title":"MADDPG","text":"<ol> <li> <p>\u4f20\u7edf\u7b97\u6cd5\u5728\u591a\u667a\u80fd\u4f53\u73af\u5883\u4e2d\uff1a\u5bf9\u5355\u4e2a\u667a\u80fd\u4f53\uff0c\u73af\u5883\u4e0d\u7a33\u5b9a\uff0c\u72b6\u6001\u8f6c\u79fb\u77e9\u9635\u4e0d\u540c\uff0c\u4e0d\u80fd\u76f4\u63a5\u7ecf\u9a8c\u56de\u653e\uff0c\u65b9\u5dee\u95ee\u9898\u52a0\u5267\u3002</p> </li> <li> <p>MADDPG:</p> <ul> <li>\u5b66\u4e60\u5230\u7684\u7b56\u7565\u53ef\u4ee5\u5206\u5e03\u5f0f\u6267\u884c\uff0c\u5373\u667a\u80fd\u4f53\u6839\u636e\u81ea\u5df1\u7684\u89c2\u5bdf\u7ed3\u679c\u6765\u51b3\u7b56\uff1b</li> <li>\u4e0d\u9700\u8981\u5047\u5b9a\u73af\u5883\u52a8\u6001\u7cfb\u7edf\u662f\u53ef\u5fae\u7684\uff0c\u4e5f\u4e0d\u9700\u8981\u5047\u8bbe\u667a\u80fd\u4f53\u4e4b\u95f4\u7684\u901a\u8baf\u65b9\u5f0f\u6709\u4efb\u4f55\u7279\u6027\u7ed3\u6784\uff0c\u5373\u4e16\u754c\u6a21\u578b\u548c\u901a\u4fe1\u6a21\u578b\u90fd\u4e0d\u8981\u6c42\u662f\u53ef\u5fae\u7684\uff1b</li> <li>\u56e0\u4e3a\u6bcf\u4e2a\u667a\u80fd\u4f53\u6700\u5927\u5316\u5404\u81ea\u7684\u7d2f\u79ef\u5956\u52b1\uff0cMADDPG\u4e0d\u4ec5\u53ef\u5e94\u7528\u4e8e\u5177\u6709\u660e\u786e\u901a\u4fe1\u6e20\u9053\u7684\u5408\u4f5c\u535a\u5f08\uff0c\u8fd8\u53ef\u4ee5\u5e94\u7528\u4e8e\u7ade\u4e89\u535a\u5f08\u3002</li> </ul> </li> <li> <p>MAAC\u67b6\u6784</p> <ul> <li> <p>\u9488\u5bf9\u667a\u80fd\u4f53i\u7684\u7b56\u7565\u68af\u5ea6\u516c\u5f0f</p> \\[ \\nabla_{\\theta_i}J(\\theta_i)=\\mathbb{E}_{s\\sim p^\\pi,a\\sim\\pi_\\theta}[\\nabla_{\\theta_i}log\\pi_i(a_i|o_i)Q_i^\\pi(x,a_1,...a_N)] \\] </li> <li> <p>\\(Q^\\pi_i(x,a_1,\\dots,a_N)\\)\u662f\u4e00\u4e2a\u96c6\u4e2d\u7684\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\uff0c\u8f93\u5165\u4e3a\u6240\u6709\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u548c\u4e00\u4e9b\u72b6\u6001\u4fe1\u606f\uff0c\u8f93\u51fa\u6bcf\u4e2a\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u4ef7\u503c</p> </li> <li> <p>x\u5305\u542b\u6240\u6709\u667a\u80fd\u4f53\u7684\u89c2\u6d4b\u4fe1\u606f\u4ee5\u53ca\u901a\u4fe1\u4fe1\u606f\u7b49\u989d\u5916\u4fe1\u606f</p> </li> </ul> </li> <li> <p>MADDPG\u7b97\u6cd5\u57fa\u4e8e\u4ee5\u4e0b\u539f\u7406\uff1a</p> <ul> <li> <p>\u6bcf\u4e2a\u667a\u80fd\u4f53\u8f93\u51fa\u786e\u5b9a\u6027\u52a8\u4f5c\uff0c\u5373</p> \\[ P(s'|a_1,...a_N,\\pi_1,...\\pi_N)=P(s'|a_1,...a_N)=P(s'|a_1,...a_N,\\pi_1',...\\pi_N'),\\quad\\pi_i'\\neq\\pi_i \\] </li> <li> <p>\u5373\u4e0d\u8bba\u7b56\u7565\u662f\u5426\u76f8\u540c\uff0c\u53ea\u8981\u4ea7\u751f\u7684\u52a8\u4f5c\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u72b6\u6001\u8f6c\u79fb\u4e0d\u53d8</p> </li> <li> <p>\u8fd9\u6837\u53ea\u8981\u5df2\u77e5\u5404\u4e2a\u667a\u80fd\u4f53\u7684\u52a8\u4f5c\uff0c\u5373\u4fbf\u751f\u6210\u7684\u7b56\u7565\u4e0d\u540c\uff0c\u73af\u5883\u4f9d\u65e7\u662f\u7a33\u5b9a\u7684</p> </li> </ul> </li> <li> <p>\u7b97\u6cd5\uff1a</p> <ul> <li> <p>\u7ecf\u9a8c\u56de\u653e\u7f13\u5b58\uff0c\u4ea4\u4e92\u6570\u636e\u5b58\u5165\\(\\mathcal{D}\\)\uff0c\u5982\u4e0b\u8bad\u7ec3</p> \\[       \\begin{gathered}       \\nabla_{\\theta_i}J(\\mu_i)=\\mathbb{E}_{x,a\\sim D}[\\nabla_{\\theta_i}\\mu_i(a_i|o_i)\\nabla_{a_i}Q_i^\\mu(x,a_1,...a_N)| a_i=\\mu_i(o_i)]       \\end{gathered} \\] </li> <li> <p>\u5176\u4e2d\u5168\u5c40\u4e2d\u5fc3\u5316\u7684\\(Q_i^\\mu\\)\u5982\u4e0b\u66f4\u65b0\uff1a</p> \\[       \\begin{gathered}       L(\\theta_{i})=\\mathbb{E}_{x,a,r,x^{\\prime}}[(Q_{i}^{\\mu}(x,a_{1},...,a_{N})-y)^{2}]\\\\y=r_{i}+\\gamma Q_{i}^{\\mu^{\\prime}}(x^{\\prime},a_{1}^{\\prime},...a_{N}^{\\prime})|a_{j}^{\\prime}=\\mu_{j}^{\\prime}(o_{j})       \\end{gathered} \\] </li> <li> <p>\u6bcf\u4e2a\u667a\u80fd\u4f53i\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u667a\u80fd\u4f53j\u7b56\u7565\u7684\u8fd1\u4f3c\\(\\hat{\\mu}_{\\phi_i^j}\\)\u200b\u7684\u5bf9\u624b\u7f51\u7edc\u667a\u80fd\u4f53\ud835\udc57\u7684\u771f\u5b9e\u7b56\u7565\u4e3a\\(\\mu_j\\)\uff0c\u8be5\u7b56\u7565\u53ef\u4ee5\u901a\u8fc7\u667a\u80fd\u4f53\ud835\udc57\u884c\u4e3a\u5bf9\u6570\u6982\u7387\u4ee5\u53ca\u71b5\u6b63\u5219\u7684\u65b9\u5f0f\u8fdb\u884c\u5b66\u4e60</p> \\[ \\begin{gathered} L(\\phi_{i}^{j})=-\\mathbb{E}_{o_{j},a_{j}}[log\\hat{\\mu}_{i}^{j}(a_{j}|o_{j})+\\lambda H(\\hat{\\mu}_{i}^{j})]\\\\\\hat{y}=r_{i}+\\gamma Q_{i}^{\\mu^{\\prime}}(x^{\\prime},\\hat{\\mu}_{i}^{\\prime1}(o_{1}),...,\\hat{\\mu}_{i}^{\\prime N}(o_{N})) \\end{gathered} \\] </li> <li> <p>\u5176\u4e2dH\u4e3a\u71b5\uff0c\\(\\hat{\\mu}_i^{'j}\\)\u4e3a\u76ee\u6807\u7f51\u7edc</p> </li> </ul> </li> </ol>"},{"location":"MARL/Lec9/#coma","title":"COMA","text":"<ol> <li>\u7528\u4e8e\u5b66\u4e60\u975e\u4e2d\u5fc3\u5f0f\u7684\u3001\u90e8\u5206\u53ef\u89c2\u6d4b\u7684\u591a\u667a\u80fd\u4f53\u534f\u540c\u7684\u63a7\u5236\u7b56\u7565</li> <li> <p>\u91c7\u7528\u53cd\u4e8b\u5b9e\u57fa\u7ebf\uff08counterfactual baseline\uff09\u6765\u89e3\u51b3\u4fe1\u7528\u5206\u914d\u7684\u95ee\u9898\uff1b\u4e3a\u4e86\u5e94\u5bf9\u591a\u667a\u80fd\u4f53\u4fe1\u7528\u5206\u914d\u7684\u6311\u6218\uff0cCOMA\u4f7f\u7528\u4e86\u4e00\u4e2a\u53cd\u4e8b\u5b9e\u57fa\u7ebf\u5c06\u5355\u4e2a\u667a\u80fd\u4f53\u7684\u884c\u52a8\u8fb9\u7f18\u5316\uff0c\u800c\u5176\u4ed6\u667a\u80fd\u4f53\u7684\u884c\u52a8\u4fdd\u6301\u4e0d\u53d8\u3002\u201c\u5982\u679c\u667a\u80fd\u4f53\u4e0d\u91c7\u7528\u5f53\u524d\u7684\u884c\u4e3a\uff0c\u90a3\u4f1a\u4e0d\u4f1a\u6709\u66f4\u591a\u7684\u6536\u76ca\u201d\uff1b</p> </li> <li> <p>\u53cd\u4e8b\u5b9e\u57fa\u7ebf\u53ef\u7531:\\(D_i=r(s,a)-r(s,(a_{-i},c_i))\\)\uff0c\u5176\u4e2d\\(D_i\\)\u4e3a\u667a\u80fd\u4f53i\u7684\u72ec\u7acb\u884c\u4e3a\u56de\u62a5\uff0c\\(c_i\\)\u4e3a\u57fa\u7ebf\u9ed8\u8ba4\u884c\u4e3a</p> </li> <li> <p>\u4f7f\u7528Critic\u7f51\u7edc\u8ba1\u7b97\\(D_i\\)\u7684\u503c\uff0c\u53d6\u6240\u6709\u884c\u4e3a\u7684\u5747\u503c\u4f5c\u4e3a\u9ed8\u8ba4\u884c\u4e3a\u7684\u6548\u7528\u503c</p> </li> </ol> \\[ \\begin{gathered}Q(s,c_{i})=\\sum_{a_{i}'}\\pi_{i}(a_{i}'|\\tau_{i})Q(s,(a_{-i},a_{i}'))\\\\A_{i}(s,a)=Q(s,a)-\\sum_{a_{i}'}\\pi_{i}(a_{i}'|\\tau_{i})Q(s,(a_{-i},a_{i}')) \\end{gathered} \\] <ol> <li>\u7ef4\u5ea6\u8bc5\u5492\uff1a\\(A^N\\)\u8ba1\u7b97\u6d88\u8017\u592a\u5927</li> </ol> <ol> <li> <p>V.S. MADDPG\uff1a</p> <ul> <li>COMA\u9488\u5bf9\u79bb\u6563\u52a8\u4f5c\uff0c\u5b66\u4e60\u7684\u662f\u968f\u673a\u7b56\u7565\u3002\u800cMADDPG\u9488\u5bf9\u8fde\u7eed\u52a8\u4f5c\uff0c\u5b66\u4e60\u7684\u662f\u786e\u5b9a\u6027\u7b56\u7565\u3002\u8fd9\u5728\u5b83\u4eec\u7b56\u7565\u68af\u5ea6\u51fd\u6570\u7684\u8868\u8fbe\u5f0f\u4e0a\u80fd\u591f\u4f53\u73b0\u51fa\u533a\u522b\u3002</li> <li>COMA\u4e3b\u8981\u9488\u5bf9\u591a\u667a\u80fd\u4f53\u534f\u4f5c\u4efb\u52a1\uff0c\u56e0\u6b64\u53ea\u6709\u4e00\u4e2acritic\u8bc4\u4ef7\u56e2\u961f\u6574\u4f53\u7684\u56de\u62a5\u3002MADDPG\u65e2\u53ef\u4ee5\u505a\u534f\u4f5c\u4efb\u52a1\uff0c\u4e5f\u53ef\u4ee5\u505a\u7ade\u4e89\u4efb\u52a1\uff0c\u6bcf\u4e2a\u667a\u80fd\u4f53\u90fd\u5bf9\u5e94\u4e00\u4e2a\u5956\u52b1\u51fd\u6570\uff0c\u56e0\u6b64\u6bcf\u4e2a\u667a\u80fd\u4f53\u5bf9\u5e94\u4e00\u4e2acritic\u3002</li> <li>COMA\u4f7f\u7528\u4e86\u5386\u53f2\u89c2\u6d4b\u3001\u52a8\u4f5c\u5e8f\u5217\u4f5c\u4e3a\u7f51\u7edc\u7684\u8f93\u5165\uff0c\u800cMADDPG\u6ca1\u6709\u4f7f\u7528\u5386\u53f2\u5e8f\u5217\u3002\u56e0\u6b64COMA\u7684\u7f51\u7edc\u7ed3\u6784\u4e2d\u5305\u542b\u4e86GRU\u5c42\uff0c\u800cMADDPG\u7684\u7f51\u7edc\u5747\u4e3a2-3\u4e2a\u9690\u5c42\u7684MLP\u3002</li> <li>COMA\u4e2d\u6240\u6709\u667a\u80fd\u4f53\u7684actor\u7f51\u7edc\u5171\u4eab\u53c2\u6570\uff0c\u8f93\u5165\u7aef\u52a0\u4e0a\u667a\u80fd\u4f53ID\u4ee5\u793a\u533a\u522b\u3002\u800cMADDPG\u5219\u6ca1\u6709\u5171\u4eab\u53c2\u6570\uff1b</li> <li>COMA\u4f7f\u7528\u53cd\u4e8b\u5b9e\u57fa\u7ebf\u4f5c\u4e3aactor\u7f51\u7edc\u7684\u4f18\u5316\u76ee\u6807\uff0c\u800cMADDPG\u76f4\u63a5\u4f7f\u7528Q\u51fd\u6570\u4f5c\u4e3a\u6bcf\u4e2a\u667a\u80fd\u4f53actor\u7f51\u8def\u7684\u4f18\u5316\u76ee\u6807\u3002</li> </ul> </li> <li> <p>\u4f18\u7f3a\u70b9\uff1a</p> <ul> <li>\u91c7\u7528AC\u67b6\u6784\uff0c\u6613\u4e8e\u5e76\u884c\u5316\uff0c\u8bad\u7ec3\u8d77\u65f6\u95f4\u6bd4\u8f83\u5feb\uff1b</li> <li>\u771f\u5b9e\u8868\u73b0\u76f8\u5bf9\u4f4e\u8ff7\uff0c\u662fAC\u9886\u57df\u7b97\u6cd5\u7684baseline\uff1b</li> <li>\u4f7f\u7528\u65f6\u6613\u4e8e\u5b9e\u73b0\uff0c\u589e\u52a0\u5b9e\u73b0\u6280\u5de7\u53ef\u4ee5\u6709\u8868\u73b0\u63d0\u5347</li> </ul> </li> </ol>"},{"location":"MARL/Lec9/#lica","title":"LICA","text":"<ol> <li>LICA\u503c\u5206\u89e3\u7b97\u6cd5\u65e0\u9700\u6ee1\u8db3IGM\u7ea6\u675f\uff0cLICA\u5c06\u503c\u5206\u89e3\u8fc1\u79fb\u5230AC\u7b97\u6cd5\u6846\u67b6\u540e\uff0c\u56e0\u4e3aActor\u662f\u4f7f\u7528\u6765\u81eaCritic\u7684\u68af\u5ea6\u66f4\u65b0\u7684\uff0c\u6240\u4ee5\u57fa\u4e8e\u5c40\u90e8Actor\u9009\u51fa\u6765\u7684\u6700\u4f18\u52a8\u4f5c\u4e5f\u5fc5\u7136\u662f\u5168\u5c40Critic\u7684\u6700\u4f18\u52a8\u4f5c</li> <li>LICA\u7684Critic\u4f7f\u7528\u4e86\u8d85\u7f51\u7edc\uff0c\u5c06\u52a8\u4f5c\u8f93\u5165\u5230Critic\u7f51\u7edc\uff0c\u5176MLP \u7684\u6743\u91cd\u5219\u7531\u57fa\u4e8e\u5f53\u524d\u5168\u5c40\u72b6\u6001\u7684\u8d85\u7f51\u7edc\u786e\u5b9a\uff0c\u6b64\u65f6\u5168\u5c40\u72b6\u6001\u548c\u52a8\u4f5c\u5b9e\u9645\u4e0a\u5c5e\u4e8e\u76f8\u4e58\u5173\u7cfb\uff0c\u6c42\u52a8\u4f5c\u7684\u504f\u5bfc\u65f6\u68af\u5ea6\u4e2d\u4f1a\u5305\u542b\u5f53\u524d\u5168\u5c40\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u66f4\u51c6\u786e\u5730\u8ba1\u7b97\u5404\u667a\u80fd\u4f53\u5177\u4f53\u4fe1\u7528\u3002</li> </ol> \\[ \\frac{\\partial Q_\\phi^\\pi}{\\partial u}=\\frac{\\partial Q_\\phi^\\pi}{\\partial v}\\frac{\\partial v}{\\partial u} ,with v=\\begin{cases}\\\\f_s(s)+f_u(u)\\\\f_s(s)f_u(u)\\end{cases},and \\frac{\\partial v}{\\partial u}=\\frac{\\partial v}{\\partial f_u}\\frac{\\partial f_u}{\\partial u}=\\begin{cases}\\frac{\\partial f_u}{\\partial u},&amp;\\quad for MLP\\\\f_s(s)\\frac{\\partial f_u}{\\partial u},&amp;\\quad for MIX\\end{cases} \\] <ol> <li>\u5bf9\u4e8eCritic\u90e8\u5206\uff0cLICA\u91c7\u7528\u4e86GAE\u548c\\(TD(\\lambda)\\)\u7684\u53d8\u4f53\uff0c\u5176\u66f4\u65b0\u4e3a\uff1a</li> </ol> \\[ \\begin{gathered} \\mathcal{L}(\\phi)=\\min_{\\phi}\\mathbb{E}_{\\tau\\sim\\pi_{\\theta}(\\tau)}\\left[\\left(y_{t}^{(\\lambda)}-Q_{\\phi}^{\\pi}(s_{t},u_{t})\\right)^{2}\\right]\\\\y_{t}^{(\\lambda)}=r_{t}+\\gamma(\\lambda y_{t+1}^{(\\lambda)}+(1-\\lambda)Q_{\\phi}^{\\pi}(s_{t+1},u_{t+1})) \\end{gathered} \\] <ol> <li>\u66f4\u65b0Actor\u5f15\u5165\u4e86\u71b5\u9879</li> </ol> \\[ \\begin{gathered} J(\\theta)=\\mathbb{E}_{\\tau\\sim\\pi_{\\theta}(\\tau)}\\left[Q_{\\phi}^{\\pi}(s_{t},u_{t})+\\mathbb{E}_{a}\\left[\\mathcal{H}\\left(\\pi_{\\theta_{a}}^{a}(.|z_{t}^{a})\\right)\\right]\\right] \\\\ \\frac{\\partial J(\\theta_a)}{\\partial\\theta_a}\\approx\\mathbb{E}_{\\tau\\sim\\pi_\\theta(\\tau)}\\left[\\frac{\\partial Q_\\phi^\\pi(s_t,\\pi_t^1,...\\pi_t^n)}{\\partial\\pi_t^a}\\frac{\\partial\\pi_t^a}{\\partial\\theta_a}+\\frac{\\partial\\mathcal{H}(\\pi_t^a)}{\\partial\\theta_a}\\right] \\\\ \\mathcal{H}\\big(\\pi^{a}(.|z^{a})\\big)=\\beta H\\big(\\pi^{a}(.|z^{a})\\big)=\\beta\\mathbb{E}_{u^{a}\\thicksim\\pi^{a}}[-log\\pi^{a}(u^{a}|z^{a})]  \\end{gathered} \\] <ol> <li> <p>\u5f15\u5165\u8d85\u53c2\u6570\\(\\beta\\)\uff0c\u5047\u8bbe\u667a\u80fd\u4f53a\u7684\u67d0\u4e2a\u52a8\u4f5c\u6982\u7387\u4e3ap\uff0c\u5bf9\u71b5\u6c42\u5bfc    $$    \\begin{gathered}    p^a=\\pi^a(.|z^a)\\    d\\mathcal{H}=\\left[\\frac{\\partial\\mathcal{H}}{\\partial p_1^a},...,\\frac{\\partial\\mathcal{H}}{\\partial p_k^a}\\right]=[-\\beta(logp_1^a+1),...,-\\beta(logp_k^a+1)]    \\end{gathered}    $$</p> </li> <li> <p>\u5f53\u9009\u62e9\u67d0\u4e2a\u52a8\u4f5c\u6982\u7387\u8f83\u5927\u65f6\uff0c\u71b5\u9879\u7684\u7ea6\u675f\u8f83\u5c0f\uff1b\u800c\u5f53\u9009\u62e9\u67d0\u4e2a\u52a8\u4f5c\u6982\u7387\u8f83\u5c0f\u65f6\uff0c\u71b5\u9879\u7684\u7ea6\u675f\u53cd\u800c\u8f83\u5927\u3002</p> </li> </ol> \\[ d\\mathcal{H}_i:=-\\xi.\\frac{logp_i^a+1}{H(p_a)} \\]"},{"location":"MARL/Lec9/#mappo","title":"MAPPO","text":"<ol> <li> <p>\u53d1\u73b0\u4f7f\u7528\u4ef7\u503c\u5f52\u4e00\u5316\u4ece\u4e0d\u4f1a\u5bf9\u8bad\u7ec3\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\uff0c\u5e76\u4e14\u901a\u5e38\u80fd\u663e\u8457\u63d0\u5347MAPPO \u7684\u6700\u7ec8\u6027\u80fd</p> </li> <li> <p>MAPPO\u4ef7\u503c\u51fd\u6570\u7684\u8f93\u5165</p> <ul> <li>CL\uff1a\u6240\u6709\u672c\u5730\u89c2\u6d4b\u7684\u4e32\u8054(concatenation of local observations, CL)\u5f62\u6210\u7684\u5168\u5c40\u72b6\u6001\u3002</li> <li>EP\uff1a\u91c7\u7528\u4e86\u4e00\u4e2a\u5305\u542b\u73af\u5883\u72b6\u6001\u6982\u51b5\u4fe1\u606f\u7684\u73af\u5883\u63d0\u4f9b\u7684\u5168\u5c40\u72b6\u6001(Environment-Provided global state, EP)</li> <li>AS(EP+\u7279\u5b9aagent\u7684\u89c2\u6d4b)\uff1a\u7279\u5b9a\u667a\u80fd\u4f53\u7684\u5168\u5c40\u72b6\u6001(Agent-Specific Global State, AS)\uff0c\u5b83\u901a\u8fc7\u8fde\u63a5EP\u72b6\u6001\u548c\\(o_i\\)\u4e3a\u667a\u80fd\u4f53\\(i\\)\u521b\u5efa\u5168\u5c40\u72b6\u6001\u3002\u8fd9\u4e3a\u4ef7\u503c\u51fd\u6570\u63d0\u4f9b\u4e86\u5bf9\u73af\u5883\u72b6\u6001\u7684\u66f4\u5168\u9762\u63cf\u8ff0\u3002</li> <li>FP\uff1a\u4e3a\u4e86\u8bc4\u4f30\u8fd9\u79cd\u589e\u52a0\u7684\u7ef4\u5ea6\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\uff0cMAPPO\u901a\u8fc7\u79fb\u9664AS\u72b6\u6001\u4e2d\u91cd\u590d\u7684\u7279\u5f81\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u7279\u5f81\u526a\u679d\u7684\u7279\u5b9a\u667a\u80fd\u4f53\u5168\u5c40\u72b6\u6001(Featured-Pruned Agent-Specific Global State, FP)\u3002</li> </ul> </li> <li> <p>\u8bad\u7ec3\u6570\u636e\u5229\u7528</p> <ul> <li>PPO \u7684\u4e00\u4e2a\u91cd\u70b9\u7279\u6027\u662f\u4f7f\u7528\u91cd\u8981\u6027\u91c7\u6837\uff08importance sampling\uff09\u8fdb\u884c\u975e\u7b56\u7565\uff08off-policy\uff09\u6821\u6b63\uff0c\u8fd9\u5141\u8bb8\u91cd\u590d\u4f7f\u7528\u6837\u672c\u6570\u636e\u3002\u4e5f\u5c31\u662f\u5c06\u6536\u96c6\u7684\u5927\u91cf\u6837\u672c\u5206\u6210\u5c0f\u6279\u6b21\uff0c\u5e76\u8fdb\u884c\u591a\u4e2a\u8bad\u7ec3\u5468\u671f\uff08epochs\uff09\u7684\u8bad\u7ec3\u3002</li> <li>\u5728\u5355\u667a\u80fd\u4f53\u8fde\u7eed\u63a7\u5236\u9886\u57df\uff0c\u5e38\u89c1\u505a\u6cd5\u662f\u5c06\u5927\u91cf\u6837\u672c\u5206\u6210\u5927\u7ea632\u621664\u4e2a\u5c0f\u6279\u6b21\uff0c\u5e76\u8fdb\u884c\u6570\u5341\u4e2a\u8bad\u7ec3\u5468\u671f\u3002\u7136\u800c\uff0c\u5728\u591a\u667a\u80fd\u4f53\u9886\u57df\uff0c\u6211\u4eec\u53d1\u73b0\u5f53\u6837\u672c\u88ab\u8fc7\u5ea6\u91cd\u7528\u65f6\uff0cMAPPO \u7684\u6027\u80fd\u4f1a\u964d\u4f4e\uff08\u4e5f\u5c31\u662f\u4e0d\u80fd\u91cd\u590d\u4f7f\u7528\u6b21\u6570\u592a\u591a\uff09\u3002</li> <li>\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u591a\u667a\u80fd\u4f53\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u975e\u5e73\u7a33\u6027\uff08non-stationarity\uff09\uff1a\u51cf\u5c11\u6bcf\u6b21\u66f4\u65b0\u7684\u8bad\u7ec3\u5468\u671f\u6570\u53ef\u4ee5\u9650\u5236\u667a\u80fd\u4f53\u7b56\u7565\u7684\u53d8\u5316\uff0c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u63d0\u9ad8\u7b56\u7565\u548c\u4ef7\u503c\u5b66\u4e60\u7684\u7a33\u5b9a\u6027\u3002</li> </ul> </li> <li> <p>MAPPO-Clip</p> <ul> <li>PPO \u7684\u53e6\u4e00\u4e2a\u6838\u5fc3\u7279\u5f81\u662f\u5229\u7528\u526a\u5207\u7684\u91cd\u8981\u6027\u6bd4\u4f8b\uff08clipped importanceratio\uff09\u548c\u4ef7\u503c\u635f\u5931\uff08value loss\uff09\uff0c\u4ee5\u9632\u6b62\u7b56\u7565\u548c\u4ef7\u503c\u51fd\u6570\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u53d1\u751f\u5267\u70c8\u53d8\u5316\u3002\u526a\u5207\u7684\u5f3a\u5ea6\u7531\u8d85\u53c2\u6570\u03f5\u63a7\u5236\uff1a\u8f83\u5927\u7684\u03f5\u503c\u5141\u8bb8\u5bf9\u7b56\u7565\u548c\u4ef7\u503c\u51fd\u6570\u8fdb\u884c\u66f4\u5927\u7684\u66f4\u65b0\u3002</li> <li>\u4e0e\u8bad\u7ec3\u5468\u671f\u6570\u7c7b\u4f3c\uff0c\u5047\u8bbe\u7b56\u7565\u548c\u4ef7\u503c\u7684\u526a\u5207\u53ef\u4ee5\u9650\u5236\u7531\u4e8e\u667a\u80fd\u4f53\u7b56\u7565\u5728\u8bad\u7ec3\u4e2d\u7684\u53d8\u5316\u800c\u5f15\u8d77\u7684\u975e\u5e73\u7a33\u6027\u3002\u5bf9\u4e8e\u8f83\u5c0f\u7684\u03f5\uff0c\u667a\u80fd\u4f53\u7684\u7b56\u7565\u5728\u6bcf\u6b21\u66f4\u65b0\u4e2d\u7684\u53d8\u5316\u53ef\u80fd\u4f1a\u66f4\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u53ef\u80fd\u727a\u7272\u5b66\u4e60\u901f\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u63d0\u9ad8\u6574\u4f53\u5b66\u4e60\u7684\u7a33\u5b9a\u6027\u3002</li> </ul> </li> <li> <p>Batchsize\uff1a\u4e3a\u4e86\u83b7\u5f97MAPPO \u7684\u6700\u4f73\u4efb\u52a1\u6027\u80fd\uff0c\u8bf7\u4f7f\u7528\u8f83\u5927\u7684\u6279\u6b21\u5927\u5c0f\u3002\u7136\u540e\uff0c\u8c03\u6574\u6279\u6b21\u5927\u5c0f\u4ee5\u4f18\u5316\u6837\u672c\u6548\u7387</p> </li> </ol>"},{"location":"ML/","title":"Machine Learning","text":"<p>Abstract</p> <ul> <li>2024fall</li> <li>Teacher: \u8d75\u4fca\u535a</li> </ul>"},{"location":"ML/ml1/","title":"Introduction","text":"<ol> <li> <p>Basic concepts of supervised learning</p> <ul> <li>Sample, example, pattern</li> <li>Features, predictors, independent variables</li> <li>State of the nature, labels, pattern class, class, responses, dependent variables<ul> <li>\\(\\omega_1,\\omega_2,\\dots,\\omega_c\\) or \\(y_1,y_2,\\dots,y_c\\) or \\(z_1,z_2,\\dots,z_c\\)</li> </ul> </li> <li> <p>Training data</p> <ul> <li>\\((x_1,\\omega_1),(x_2,\\omega_2),\\dots,(x_n,\\omega_n)\\)</li> </ul> </li> <li> <p>Model, statistical model, pattern class model, classifier</p> </li> <li>Test data</li> <li>Training error &amp; test error</li> </ul> </li> <li> <p>classification(categorization, decision, making...): \\(y\\) is a categorical variable</p> </li> <li>regression: \\(y\\) is real-valued</li> <li>Good representation: low intra-class variability and low inter-class similarity</li> <li>cumulative distribution function(CDF): \u7d2f\u8ba1\u5206\u5e03\u51fd\u6570</li> <li>probability density function(PID): \u6982\u7387\u5bc6\u5ea6\u51fd\u6570</li> </ol>"},{"location":"ML/ml10/","title":"10 kNN &amp; Metric","text":""},{"location":"ML/ml10/#k-nearest-neighbor-classifier","title":"k Nearest Neighbor Classifier","text":"<ol> <li>requires three things<ul> <li>the set of stored records</li> <li>distance metric to compute distance between records</li> <li>the value of \\(k\\)</li> </ul> </li> <li> <p>To classify an unknown record:</p> <ul> <li>Compute distance to other training records</li> <li>Identify \\(k\\) nearest neighbors </li> <li>Use class labels of nearest neighbors to determine the class label of unknown record (e.g., by taking majority vote)</li> </ul> </li> <li> <p>Metric Learning: \u5728\u8ddd\u79bb\u8861\u91cf\u4e2d\u52a0\u5165\u6743\u91cd\uff0c\u8003\u8651\u4e0d\u540cfeature\u7684\u91cd\u8981\u6027</p> \\[ \\rho_M(x,y)=\\sqrt{(x-y)^TM(x-y)} \\] <ul> <li>\u6211\u4eec\u5e0c\u671b\u5bf9\u540c\u7c7b\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5c0f\uff0c\u5f02\u7c7b\u5c3d\u53ef\u80fd\u5927</li> <li>Create cost/energy function and minimize with respect to M $$ \\mathcal{L}(M)=\\sum_{(x,x^{\\prime})\\in S}\\rho_{M}^{2}(x,x^{\\prime})-\\lambda\\sum_{(x,x^{\\prime})\\in D}\\rho_{M}^{2}(x,x^{\\prime}) $$</li> </ul> </li> <li> <p>MMC (Mahalanobis Metric for Clustering)</p> <p> </p> <ul> <li>\u53d6\u5bf9\u6570</li> </ul> <p></p> </li> </ol>"},{"location":"ML/ml10/#aknn-search","title":"AKNN Search","text":"<ul> <li>Given a dataset D contains n d-dim data points, find nearest neighbor: \\(O(nd+n)\\)<ul> <li>find k: \\(O(nd+kn)\\) or \\(O(nd+k\\log n )\\) or \\(O(nd+n\\log k)\\)</li> </ul> </li> <li> <p>\\(\\epsilon\\)-approximate nearest neighbor search</p> </li> <li> <p>method for ANNS: </p> <ul> <li>partition the space<ul> <li>tree based</li> <li>graph based</li> </ul> </li> <li>approximation<ul> <li>hashing based</li> <li>Quantization based</li> </ul> </li> </ul> </li> <li> <p>K-D Tree</p> <ul> <li>\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 k \u7ef4\u7a7a\u95f4\u5185\u7684 n\u4e2a\u4e0d\u540c\u7684\u70b9\u7684\u5750\u6807\uff0c\u8981\u5c06\u5176\u6784\u5efa\u6210\u4e00\u68f5 k-D Tree\uff0c\u6b65\u9aa4\u5982\u4e0b\uff1a<ol> <li>\u82e5\u5f53\u524d\u8d85\u957f\u65b9\u4f53\u4e2d\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u8fd4\u56de\u8fd9\u4e2a\u70b9\u3002</li> <li>\u9009\u62e9\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u5c06\u5f53\u524d\u8d85\u957f\u65b9\u4f53\u6309\u7167\u8fd9\u4e2a\u7ef4\u5ea6\u5206\u6210\u4e24\u4e2a\u8d85\u957f\u65b9\u4f53\u3002</li> <li>\u9009\u62e9\u5207\u5272\u70b9\uff1a\u5728\u9009\u62e9\u7684\u7ef4\u5ea6\u4e0a\u9009\u62e9\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e00\u7ef4\u5ea6\u4e0a\u7684\u503c\u5c0f\u4e8e\u8fd9\u4e2a\u70b9\u7684\u5f52\u5165\u4e00\u4e2a\u8d85\u957f\u65b9\u4f53\uff08\u5de6\u5b50\u6811\uff09\uff0c\u5176\u4f59\u7684\u5f52\u5165\u53e6\u4e00\u4e2a\u8d85\u957f\u65b9\u4f53\uff08\u53f3\u5b50\u6811\uff09\u3002</li> <li>\u5c06\u9009\u62e9\u7684\u70b9\u4f5c\u4e3a\u8fd9\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u9012\u5f52\u5bf9\u5206\u51fa\u7684\u4e24\u4e2a\u8d85\u957f\u65b9\u4f53\u6784\u5efa\u5de6\u53f3\u5b50\u6811\uff0c\u7ef4\u62a4\u5b50\u6811\u7684\u4fe1\u606f\u3002</li> </ol> </li> <li>\u63d0\u51fa\u4e24\u4e2a\u4f18\u5316\uff1a<ol> <li>\u8f6e\u6d41\u9009\u62e9 k \u4e2a\u7ef4\u5ea6\uff0c\u4ee5\u4fdd\u8bc1\u5728\u4efb\u610f\u8fde\u7eed k \u5c42\u91cc\u6bcf\u4e2a\u7ef4\u5ea6\u90fd\u88ab\u5207\u5272\u5230\u3002</li> <li>\u6bcf\u6b21\u5728\u7ef4\u5ea6\u4e0a\u9009\u62e9\u5207\u5272\u70b9\u65f6\u9009\u62e9\u8be5\u7ef4\u5ea6\u4e0a\u7684 \u4e2d\u4f4d\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6b21\u5206\u6210\u7684\u5de6\u53f3\u5b50\u6811\u5927\u5c0f\u5c3d\u91cf\u76f8\u7b49\u3002</li> </ol> </li> <li>\u4f18\u5316\u540e\u9ad8\u5ea6\u6700\u591a \\(\\log n+O(1)\\)</li> </ul> </li> <li>Locality Sensitive Hashing (LSH)<ul> <li>Basic assumption: Similar data (in certain dimensions) is likely to be thrown into the same bucket.</li> <li>While querying, the same set of hashing functions will be used.</li> <li>The hashing functions can be randomized or designed.</li> <li>Often times, built upon extracted features.</li> <li>LSH generates bunch of candidate points, followed by other post-processing mechanisms. </li> </ul> </li> </ul> <ul> <li>Graph based ANNS algorithms<ul> <li>Motivation: Neighbor\u2019s neighbor is also likely the neighbor.</li> <li>Appealing theoretical properties on search but huge indexing time complexity (at least \\(O(n^2)\\))</li> </ul> </li> </ul>"},{"location":"ML/ml11/","title":"12 Dimensionality Reduction","text":"<ul> <li> <p>Linear Methods</p> <ul> <li>Principal Component Analysis (PCA) unsupervised</li> <li>Linear Discriminant Analysis (LDA) supervised</li> <li>Locality Preserving Projections (LPP)</li> <li>The framework of graph based dimensionality reduction.</li> </ul> </li> <li> <p>Non-linear Methods</p> <ul> <li>Kernel Extensions for nonlinear algorithms.</li> <li>Manifold Learning</li> <li>ISOMAP</li> <li>Locally Linear Embedding</li> <li>Laplacian Eigenmap</li> </ul> </li> </ul>"},{"location":"ML/ml11/#principal-component-analysis","title":"Principal Component Analysis","text":"<ul> <li> <p>The new variables, called principal components (PCs), are uncorrelated, and are ordered by the fraction of the total information each retains.</p> </li> <li> <p>main steps for computing PCs</p> <ul> <li>Form the covariance matrix \\(S=\\frac{1}{n}\\sum_{i=1}^n(x_i-\\overline{x})(x_i-\\overline{x})^T\\).</li> <li>Compute its eigenvectors: \\(\\{a_i\\}^p_{i=1}\\)</li> <li>Use the first d eigenvectors \\(\\{a_i\\}^d_{i=1}\\) to form the d PCs.</li> <li>The transformation A is given by \\(A=[a_1,\\dots,a_d]\\)</li> </ul> </li> <li> <p>Pre-Processing of PCA</p> <ul> <li>standardization: \\(x'=\\dfrac{x-\\overline{x}}{\\sigma}\\)</li> </ul> </li> <li> <p>PCA\u7684\u6700\u4f18\u6027\u8d28\uff1aPCA\u7684projection\u5728\u6240\u6709d\u89c4\u6a21\u7684\u7ebf\u6027projection\u4e2d\u6700\u5c0f\u5316\u4ee5\u4e0b\u8bef\u5dee\uff0c\u5373PCA\u4fdd\u7559\u4e86\u6700\u591a\u7684\u4fe1\u606f\u3002\u4ee5\u4e0b\u505a\u7684\u5c31\u662f\u7528A\u6295\u5f71\u540e\u518d\u53cd\u6295\u5f71\u56de\u53bb\u5f97\u5230\u91cd\u6784\u7684\u6570\u636e\uff0c\u6bd4\u8f83\u548c\u539f\u6570\u636e\u7684\u8ddd\u79bb</p> <ul> <li>X is centered data matrix</li> </ul> </li> </ul> <p>$$   \\min_{A\\in\\mathcal{R}^{p\\times d}}|X-AA^TX|_F^2 s.t. A^TA=I_d   $$</p>"},{"location":"ML/ml11/#linear-discriminant-analysis-fisher-linear-discriminant","title":"Linear Discriminant Analysis (Fisher Linear Discriminant)","text":"<ul> <li>\u6700\u5927\u5316\u7c7b\u95f4\u8ddd\u79bb\uff0c\u6700\u5c0f\u5316\u7c7b\u5185\u8ddd\u79bb</li> <li>\\(S_i\\) \u6563\u5ea6\u77e9\u9635</li> </ul> <ul> <li> <p>Main steps:</p> <ul> <li> <p>Form the scatter matrices \\(S_B\\) and \\(S_W\\)</p> </li> <li> <p>Compute the eigenvectors \\(\\{a_i\\}_{i=1}^{c-1}\\) corresponding to the non-zero eigenvalue of the generalized eigenproblem:   $$   S_Ba=\\lambda S_Wa \\newline    or \\newline    S_Ba=\\lambda S_T a   $$</p> </li> <li> <p>The transformation A is given by \\(A=[a_1,\\dots,a_{c-1}]\\)</p> </li> </ul> </li> </ul>"},{"location":"ML/ml11/#locality-preserving-projections-lpp","title":"Locality Preserving Projections (LPP)","text":"<p>\u4e0d\u8003</p> <ul> <li>LPP is equivalent to LDA when a specifically designed supervised graph is used</li> <li>LPP is similar to PCA when an inner product graph is used</li> </ul>"},{"location":"ML/ml11/#manifold-learning","title":"Manifold Learning","text":""},{"location":"ML/ml11/#manifold","title":"Manifold","text":"<ul> <li>In mathematics, a manifold is a topological space that locally resembles Euclidean space near each point <ul> <li>Each point has a neighborhood that is homeomorphic to the Euclidean space. </li> </ul> </li> <li>a square and a circle are homeomorphic to each other, but a sphere and a torus are not. </li> </ul>"},{"location":"ML/ml11/#multi-dimensional-scaling-mds","title":"Multi-Dimensional Scaling (MDS)","text":"<ul> <li>\u5e0c\u671b\u964d\u7ef4\u540e\u7a7a\u95f4\u6570\u636e\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u539f\u59cb\u7a7a\u95f4\u5c3d\u53ef\u80fd\u4e00\u81f4</li> <li>\u9996\u5148\u8ba1\u7b97\u539f\u6765\u7684\u6570\u636e\u70b9\u5bf9\u5e94\u7684pair-wise\u8ddd\u79bb\u77e9\u9635\\(D=(d_{ij})\\in\\mathbb{R}^{n\\times n}\\)\uff0c\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2ak\u7ef4\u7684\u8868\u793a\uff0c\u4f7f\u5f97\\(\\|z_i-z_j\\|=d_{ij}\\)</li> <li>suppose \\(Z=[z_1,z_2,\\dots,z_n]\\), let \\(B=Z^TZ\\)<ul> <li>\\(b_{ij}=z_i^Tz_j\\)</li> <li>\\(d^2_{ij}=\\|\\mathbf{z}_i\\|^2+\\left\\|\\mathbf{z}_j\\right\\|^2-2z_i^Tz_j=b_{ii}+b_{jj}-2b_{ij}\\)</li> <li>One possible Z can be obtained through eigen-decomposition of B</li> <li>\u5047\u8bbeZ\u7684\u5747\u503c\u4e3a0</li> <li>main idea: D-&gt;B-&gt;Z</li> <li>\u901a\u8fc7\u4e00\u7cfb\u5217\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u77e9\u9635B\u6bcf\u4e2a\u5143\u7d20\u7528D\u7684\u8868\u793a\uff0c\u4e4b\u540e\u4f7f\u7528\u5947\u5f02\u503c\u5206\u89e3\u5373\u53ef\u5f97\u5230Z</li> </ul> </li> </ul> <ul> <li>summarize:<ul> <li>Input: Distance matrix \\(D\\)</li> <li>Algorithm:         - compute \\(d_{i:}^2=\\frac1n\\sum_{j=1}^{n}d_{ij}^2,d_{:j}^2=\\frac1n\\sum_{i=1}^{n}d_{ij}^2,d_{::}^2= \\frac1{n^2}\\sum_{i=1}^{n}\\sum_{j=1}^{n}d_{ij}^2\\)         - compute inner product B \\(b_{ij}=-\\frac12(d_{ij}^2-d_{i:}^2-d_{:j}^2+d_{::}^2)\\)         - apply eigen-decomposition on \\(B\\)         - Select first \\(k\\) biggest non-zero eigenvalues and corresponding eigenvectors, the target low-dimensional data matrix can be obtained from \\(Z=\\Lambda_{*}^{\\frac12}U_{*}^{T}\\)</li> <li>Output: the k-dimensional data matrix \\(Z\\)</li> </ul> </li> </ul>"},{"location":"ML/ml11/#isomap","title":"ISOMAP","text":"<ul> <li> <p>Step 1:</p> <ul> <li> <p>Define the graph G over all data points</p> </li> <li> <p>Connect neighbor points and define the edge length equals to Euclidean distance </p> </li> <li> <p>For point \\(x_i\\) and \\(x_j\\), if they are:         - closer than \\(\\epsilon\\) (\\(\\epsilon\\)-ISOMAP)         - \\(x_i\\) is one of the k nearest neighbors of \\(x_j\\) (k-ISOMAP)</p> </li> </ul> </li> <li> <p>Step 2:</p> <ul> <li>Compute shortest paths \\(d(x_i,x_j)\\) in G Floyd-Warshall or Dijkstra</li> </ul> </li> <li> <p>Step 3:</p> <ul> <li>Apply MDS on \\(d(x_i,x_j)\\) to find lower-dimensional embedding</li> </ul> </li> </ul>"},{"location":"ML/ml11/#locally-linear-embedding","title":"Locally Linear Embedding","text":"<ul> <li> <p>only focus on the local </p> </li> <li> <p>for a data point \\(x\\), and its neighbors \\(x_1,x_2,\\dots,x_k\\), we assume  \\(x=w_1x_1+w_2x_2+\\dots+w_kx_k\\) ,and \\(\\sum w_i=1\\)</p> </li> <li> <p>and for projected data points \\(y\\), and its neighbors \\(y_1, y_2, \\dots, y_k\\), we hope \\(y\\approx w_1y_1+w_2y_2+\\cdots+w_ky_k\\)</p> </li> </ul> <ul> <li>Step 3</li> </ul>"},{"location":"ML/ml11/#other-interesting-dr-algorithms","title":"Other Interesting DR Algorithms","text":""},{"location":"ML/ml11/#robust-pca","title":"Robust PCA","text":"<ol> <li> <p>suppose we have a high-dimension matrix \\(X\\): \\(X=L_0+S_0\\)</p> <ul> <li>\\(L_0\\), meaningful part, low-rank</li> <li>\\(S_0\\), noisy part, sparse</li> </ul> <p></p> </li> <li> <p>target:</p> </li> </ol> <p>\\(\\(\\begin{aligned}minimize\\ \\ \\ &amp;rank(L)+\\lambda\\|S\\|_0 \\newline subject\\ to\\ \\ \\ &amp;L+S=X\\end{aligned}\\)\\)</p> <p>\u4f46\u662f\u8fd9\u4e2a\u4f18\u5316\u76ee\u6807\u975e\u51f8\u4e14NP-hard\uff0c\u56e0\u6b64\u4f7f\u7528\u4ee5\u4e0bPCP(Principle Component Pursuit) surrogate error</p> <p>$$    \\begin{aligned}    minimize   &amp;|L|_*+\\lambda|S|_1 \\newline     subject to   &amp;L+S=X    \\end{aligned}    $$</p> <pre><code>- $\\|L\\|_*$ is the nuclear norm, i.e. the sum of the singular values of L, will lead to low rank for L\n\n- $\\|S\\|_1$ will lead to sparsity for $S$ like Lasso decay\n\n&lt;div align=\"center\"&gt;&lt;img src=\"https://pixe1ran9e.oss-cn-hangzhou.aliyuncs.com/image-20241125143843343.png\" alt=\"image-20241125143843343\" style=\"zoom: 50%;\" /&gt;&lt;/div&gt;\n</code></pre> <ol> <li> <p>Pros: The noise \\(S_0\\) can be arbitrarily large as long as it is sparse enough</p> </li> <li> <p>constraints</p> <ul> <li>The low-rank part \\(L_0\\) can not be sparse;</li> <li>The sparse part \\(S_0\\) can not be low-rank.</li> </ul> </li> </ol>"},{"location":"ML/ml11/#autoencoder","title":"AutoEncoder","text":"<ol> <li>An unsupervised neural network based framework for dimensionality reduction.</li> <li>\u5229\u7528\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u4f7f\u5f97\u8f93\u51fa\u503c\u7b49\u4e8e\u8f93\u5165\u503c\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u5148\u5c06\u8f93\u5165\u538b\u7f29\u6210\u6f5c\u5728\u7a7a\u95f4\u8868\u5f81\uff0c\u7136\u540e\u5c06\u8fd9\u79cd\u538b\u7f29\u540e\u7684\u7a7a\u95f4\u8868\u5f81\u91cd\u6784\u4e3a\u8f93\u51fa\u3002\u5b83\u7684\u9690\u85cf\u6210\u5c42\u7684\u5411\u91cf\u5177\u6709\u964d\u7ef4\u7684\u4f5c\u7528\u3002</li> <li>\u8bad\u7ec3<ol> <li>\u52a0\u5165\u566a\u58f0\u5c1d\u8bd5\u53bb\u566a</li> <li>Feature Disentanglement:\u83b7\u53d6embedding\u8f93\u51fa\u6bcf\u4e00\u7ef4\u5206\u522b\u5bf9\u5e94\u4ec0\u4e48\u4fe1\u606f</li> </ol> </li> </ol> <ol> <li>Embedding is using a low-dimensional vector to represent an \u201cobject\u201d</li> </ol>"},{"location":"ML/ml11/#word2vec","title":"Word2vec","text":"<ol> <li> <p>A word\u2019s meaning is given by the words that frequently appear close-by</p> </li> <li> <p>context: When a word w appears in a text, its context is the set of words that appear nearby (within a fixed-size window).</p> </li> <li> <p>Key ideas:</p> <ul> <li> <p>We have a large corpus of text</p> </li> <li> <p>Every word in a fixed vocabulary is represented by a vector</p> </li> <li> <p>Go through each position t in the text, which has a center word c and context (\u201coutside\u201d) words o</p> </li> <li> <p>Use the similarity of the word vectors for c and o to calculate the probability of o given c (or vice versa)</p> </li> <li> <p>Keep adjusting the word vectors to maximize this probability</p> </li> </ul> </li> <li> <p>two tasks</p> <ul> <li>Skip-grams: predict context (\u201doutside\u201d) words (position independent) given center word</li> <li>Continuous Bag of Words (CBOW): predict center word from (bag of) context words</li> </ul> </li> <li> <p>objective function: loglikelihood</p> \\[ Likelihood=L(\\theta)=\\frac{1}{T}\\prod_{t=1}^T\\prod_{-m\\leq j\\leq m,j\\neq0}P(w_{t+j}|w_t;\\theta) \\] <ul> <li> <p>use two vectors per word w</p> </li> <li> <p>\\(v_w\\) when w is a center word </p> </li> <li> <p>\\(u_w\\) when w is a context(outside) word</p> </li> <li> <p>then $$ P(o|c)=\\frac{\\exp(u_0^Tv_c)}{\\sum_{w\\in V}\\exp(u_w^Tv_c)} $$</p> </li> <li> <p>\u63d0\u9ad8\u6548\u7387, negative sampling</p> </li> </ul> \\[ P(o|c)=\\frac{\\exp(u_0^Tv_c)}{\\frac{|V|}{|V^{\\prime}|}\\Sigma_{w\\in V^{\\prime}}\\exp(u_w^Tv_c)} \\] <ul> <li>Or we can take the probability of each word into account</li> </ul> </li> <li> <p>after training, we get outside embedding U and center embedding V for each word. Just average them or sum them to get the final embedding for each word.</p> </li> </ol>"},{"location":"ML/ml12/","title":"12 Clustering","text":""},{"location":"ML/ml12/#gaussian-mixture-model","title":"Gaussian Mixture Model","text":"<p>\u53ef\u80fd\u6709\u7f3a\u6f0f</p> <ol> <li> <p>Gaussian Mixture Model (GMM) is one of the most popular clustering methods which can be viewed as a linear combination of different Gaussian components.</p> <p></p> <ul> <li>The log-likelihood function</li> </ul> \\[ \\log\\prod\\limits_{i=1}^Np(x^{(i)};\\Theta)=\\sum_{i=1}^N\\log(\\sum_{k=1}^K\\pi_k\\mathcal{N}(x^{(i)};\\mu_k,\\Sigma_k)) \\] <p></p> <ul> <li> <p>parameters estimation for GMM</p> <p></p> </li> </ul> </li> </ol>"},{"location":"ML/ml12/#density-based-clustering-methods","title":"Density-Based Clustering Methods","text":"<ol> <li> <p>two parameters</p> <ul> <li>Eps: Maximum radius of the neighborhood</li> <li>MinPts: Minimum number of points in an Eps-neighborhood of that point</li> </ul> </li> <li> <p>\\(N_{Eps}(p)\\):{q belongs to D | \\(dist(p,q)\\leq Eps\\)}</p> </li> <li> <p>Directly density-reachable: A point p is directly density-reachable from a point q if p belongs to \\(N_{Eps}(q)\\) and \\(|N_{Eps}(q)|\\geq MinPts\\)</p> <p> </p> </li> <li> <p>DBSCAN</p> <ul> <li>Arbitrary select a point p</li> <li>Retrieve all points density-reachable from p w.r.t. Eps and MinPts</li> <li>If p is a core point, a cluster is formed</li> <li>If p is a border point, no points are density-reachable from p and DBSCAN visits the next point of the database</li> <li>Continue the process until all of the points have been processed</li> </ul> </li> </ol>"},{"location":"ML/ml12/#spectral-clustering","title":"Spectral Clustering","text":"<ol> <li> <p>Represent data points as the vertices V of a graph G, clustering can be viewed as partitioning a similarity graph. Large weights mean that the adjacent vertices are very similar; small weights imply dissimilarity.</p> <ul> <li>Na\u00efve Idea: make the weight of those cut edges as small as possible</li> </ul> </li> <li> <p>Cut: Set of edges with only one vertex in a group. </p> </li> </ol> <p>$$    cut(A,B)=\\sum_{i\\in A.j\\in B}w_{ij}    $$</p> <ol> <li>Association: Set of edges with two vertexes in the same group.</li> </ol> <p>$$    assoc(A,A)=\\sum_{i\\in A,j\\in A}w_{ij}    $$</p> <ol> <li>Normalized Cut Criteria</li> </ol> <p>$$    Ncut(A,B)=\\frac{cut(A,B)}{assoc(A,V)}+\\frac{cut(A,B)}{assoc(B,V)} \\newline     assoc(A,V)=\\sum_{i\\in A, j\\in V}w_{ij} \\newline     \\text{goal:}  \\min Ncut(A,B)    $$</p> <ol> <li>matrix representation: symmetric matrix \u5f97\u5230\\(W\\),\u540c\u65f6\u5bf9\u89d2\u9635D\uff0c\u6709\\(d_i=\\sum\\limits_jw_{ij}\\)</li> </ol> <ol> <li> <p>objective function</p> \\[ x\\in[1,-1]^n,x_i=\\begin{cases}1&amp;i\\in A\\newline -1&amp;i\\in B&amp;\\end{cases}\\newline  y=(1+x)-b(1-x) \\newline  \\min_y \\frac{y^T(D-W)y}{y^TDy}, y\\in\\mathcal{R}^n,y^TD1=0 \\] <ul> <li>make \\(L=D-W\\), then \\(\\min\\limits_y y^TLy\\ \\ \\ s.t.\\ y^TDy=1\\)</li> <li>by Lagrangian Function \\(Ly=-\\lambda Dy\\), which is a generalized Eigen-problem</li> <li>change it to \\(D^{-1}Ly=\\lambda y\\)</li> </ul> </li> <li> <p>K&gt;2</p> <ul> <li> <p>perform Ncut recursively</p> </li> <li> <p>use more than one eigenvectors</p> <ul> <li>suppose \\(y_1,y_2,\\cdots,y_k\\) are the first k eigenvectors corresponding to the smallest eigenvalues, let</li> </ul> <p>\\(Y=[y_1,y_2,\\dots,y_k]\\in R^{n\\times k}\\)</p> <ul> <li> <p>each row vector of \\(Y\\) is a k dimensional representation of the original data point</p> </li> <li> <p>performing Kmeans</p> </li> </ul> </li> </ul> </li> <li> <p>Spectral Clustering Algorithm</p> <ol> <li>Graph construction<ul> <li>Heat kernel \\(w_{ij}=\\exp\\{-\\dfrac{\\|x_i-x_j\\|}{2\\sigma^2}\\}\\)</li> <li>k-nearest neighbor graph</li> </ul> </li> <li>Eigen-problem<ul> <li>Compute eigenvalues and eigenvectors of the matrix L</li> <li>Map each point to a lower-dimensional representation based on one or more eigenvectors.</li> </ul> </li> <li>Conventional clustering schemes, e.g. K-Means<ul> <li>Assign points to two or more clusters, based on the new representation.</li> </ul> </li> </ol> </li> </ol>"},{"location":"ML/ml12/#lvq","title":"LVQ","text":""},{"location":"ML/ml13/","title":"13 Reinforcement Learning","text":""},{"location":"ML/ml13/#introduction","title":"Introduction","text":"<ul> <li>agent: the learner and decision-maker</li> <li>environment: the thing agent interacts with, comprising everything outside the agent</li> <li>reward: special numerical values that the agent tries to maximize over time</li> <li>state and action: in general, actions can be any decisions we want to learn how to make, and the states can be anything we can know that might be useful in making them</li> <li> <p>\u6700\u7ec8\u8981\u5f97\u5230\u7684\u662fpolicy \\(\\pi\\)\uff0c\u8f93\u5165\u662fstate\u6216\u5176\u4ed6\u5305\u62ecreward\u7b49\u7684\u5185\u5bb9\uff0c\u8f93\u51fa\u4e3a\u5bf9\u5e94\u7684action</p> </li> <li> <p>data: (State, Action, Reward)</p> </li> <li>An RL agent must learn by trial-and-error \u53cd\u590d\u8bd5\u9519\uff0c\u7b56\u7565\u4e00\u521d\u59cb\u5316\u5c31\u8981\u5f00\u59cb\u8dd1\uff0c\u7b97reward</li> <li> <p>Actions may affect not only the immediate reward but also subsequent rewards(Delayed effect)  \u4e00\u4e2a\u884c\u52a8\u4f1a\u5bf9\u957f\u671f\u8bb8\u591a\u6b65\u7684reward\u90fd\u6709\u5f71\u54cd</p> </li> <li> <p>elements of RL</p> <ul> <li>policy: a map from state space to action space \u53ef\u80fd\u662fstochastic(\u968f\u673a)\u7684</li> <li>reward function: map each state or state-action pair to a real number, called reward</li> <li>value function: value of a state or state-action pair is the total expected reward, starting from the state or state-action pair \u4ece\u5f53\u524d\u72b6\u6001\u8dd1\u5230\u6b63\u65e0\u7a77\u6216\u7ed3\u675f\u7684\u603breward</li> </ul> </li> </ul>"},{"location":"ML/ml13/#goal","title":"Goal","text":"<ol> <li> <p>maximize the Value function</p> </li> <li> <p>Value iteration and Policy iteration are two classic approached to this problem. But essentially both are dynamic programming.</p> </li> <li> <p>Q-learning\u662f\u6700\u65b0\u7684\u4e00\u4e2a\u7b97\u6cd5\uff0c\u662f\u4e00\u79cd\u65f6\u5e8f\u5dee\u5206\u7684\u65b9\u6cd5</p> </li> <li> <p>Algorithm</p> <ul> <li> <p>Goal</p> <ul> <li>policy \\(\\pi(a|s)\\) </li> <li>reward hypothesis: maximization of the expected value of the cumulative sum of reward</li> </ul> </li> <li> <p>Return</p> <ul> <li> <p>return G is the formally defined cumulative sum of reward</p> </li> <li> <p>episodic task(\u56de\u5408\u5f0f\u4efb\u52a1): episode means there are some special states, after which agent-environment interaction should restart or stop     \\(G_t = R_{t+1}+R_{t+2}+\\cdots+R_T\\), T is the time of final state</p> </li> <li> <p>continuing task: the agent-environment interaction does not break naturally into identifiable episodes, but goes on continually without limit     \\(G_t=\\sum_{k=0}^\\infty\\gamma^kR_{t+k+1},0\\leq\\gamma&lt;1\\), \\(\\gamma\\) is called discount rate</p> </li> <li> <p>unified Notation for Episodic and Continuing Tasks</p> <p>\\(G_t=\\sum_{k=0}^\\infty\\gamma^kR_{t+k+1},0\\leq\\gamma\\leq1\\)</p> <ul> <li>if continuing tasks, \\(\\gamma\\neq1\\)</li> <li>if episodic task, adding an absorbing state after the final state(called terminal state) that transitions only to itself and that generates only zero reward, so we get \\(R_{T+1}=R_{T+2}=\\cdots=0\\) \u5373final state\u4e4b\u540e\u7684reward\u90fd\u89c6\u4e3a0\u5373\u53ef</li> <li>\u4f46episodic\u4e5f\u53ef\u4ee5\\(\\gamma&lt;1\\)</li> </ul> </li> </ul> </li> </ul> </li> </ol>"},{"location":"ML/ml13/#finite-mdp","title":"Finite MDP","text":"<ol> <li> <p>\u9a6c\u5c14\u53ef\u592b\u6027</p> \\[ Pr\\{S_{t+1}=s',R_{t+1}=r|S_0,A_0,R_1,\\dots,S_{t-1},A_{t-1},R_t,S_t,A_t\\}=\\newline  Pr\\{S_{t+1}=s',R_{t+1}=r|S_t,A_t\\} \\] <ul> <li> <p>MDP: \u6ee1\u8db3\u9a6c\u5c14\u53ef\u592b\u6027\u7684\u5f3a\u5316\u5b66\u4e60\u4efb\u52a1\uff0c\u72b6\u6001\u7a7a\u95f4\u548c\u884c\u4e3a\u7a7a\u95f4\u6709\u9650\u5219\u4e3a\u6709\u9650MDP</p> </li> <li> <p>the dynamic of a finite MDP</p> </li> </ul> \\[ p(s',r|s,a)=Pr\\{S_{t+1}=s',R_{t+1}=r|S_t=s,A_t=a\\} \\] <ul> <li> <p>\u4ecedynamic\u6211\u4eec\u53ef\u4ee5\u5f97\u5230</p> </li> <li> <p>the expected rewards for state\u2013action pairs     $$     r(s,a)=\\mathbb{E}[R_{t+1}|S_t=s,A_t=a]=\\sum_rr\\sum_{s'}p(s',r|s,a)     $$</p> </li> <li> <p>state-transition probabilities     $$     p(s'|s,a)=Pr{S_{t+1}=s'|S_t=s,A_t=a}=\\sum_rp(s',r|s,a)     $$</p> </li> </ul> </li> <li> <p>value function</p> <ul> <li>the state-value function for policy \\(\\pi\\)</li> </ul> <p>\\(\\(v_\\pi(s)=\\mathbb{E}_\\pi[G_t|S_t=s]=\\mathbb{E}_\\pi[\\sum_{k=1}^\\infty R_{t+k+1}|S_t=s]\\)\\)</p> <ul> <li>the action-value function for policy \\(\\pi\\)</li> </ul> <p>\\(\\(q_\\pi(s,a)=\\mathbb{E}_\\pi[G_t|S_t=s,A_t=a]=\\mathbb{E}_\\pi[\\sum_{k=1}^\\infty\\gamma^k R_{t+k+1}|S_t=s,A_t=a]\\)\\)</p> <ul> <li> <p>\u5982\u679c\u6ca1\u6709dynamic\uff0cv\u548cq\u4e0d\u80fd\u4e92\u8f6c</p> </li> <li> <p>relation between the two value functions</p> </li> </ul> <p>$$     \\begin{aligned}      &amp; v_{\\pi}(s)=\\mathbb{E}{\\pi}[q(s,A_{t})|S_{t}=s]=\\sum_{a}\\pi(a,s)q_{\\pi}(s,a) \\newline       &amp; q_{\\pi}(s,a)=\\mathbb{E}{\\pi}[R+\\gamma v_{\\pi}(S_{t+1})|S_{t}=s,A_{t}=a] \\newline       &amp; =\\sum_{s^{\\prime},r}p(s^{\\prime},r|s,a)(r+\\gamma v_{\\pi}(s^{\\prime}))     \\end{aligned}   $$</p> </li> <li> <p>Bellman equation for \\(v_\\pi\\)</p> <ul> <li> <p>for every state \\(s\\), we have the unique solution as follows </p> \\[v_\\pi(s)=\\sum_a\\pi(a,s)q_\\pi(s,a)=\\sum_a\\pi(a,s)\\sum_{s',r}p(s',r|s,a)(r+\\gamma v_\\pi(s'))\\] </li> </ul> </li> <li> <p>Optimal Value Functions</p> <ul> <li>\u6700\u4f18\u7b56\u7565\u662f\u5b58\u5728\u7684\uff0c\u8bb0\u4e3a\\(\\pi_*\\)\uff0c\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\uff0c\u4ed6\u4eecshare\u540c\u6837\u7684state-value function\uff0c\u540c\u65f6\u6709\u4ee5\u4e0b\uff1a</li> </ul> <p>\\(\\(v_*(s)=\\max_\\pi v_\\pi(s)\\newline q_*(s,a)=\\max_\\pi q_\\pi(s,a)\\)\\)</p> <ul> <li> <p>\u6700\u4f18\u7b56\u7565\u5728\u4efb\u4f55\u72b6\u6001\u4e0b\u90fd\u662f\u6700\u4f18\u7684\uff0c\u4e0d\u7ba1MDP\u7684\u521d\u59cb\u72b6\u6001\u5982\u4f55</p> </li> <li> <p>Bellman optimality equation</p> </li> </ul> <p>\\(\\(v_*(s)=\\max_aq_*(s,a)=\\max_a\\sum_{s',r}p(s',r|s,a)(r+\\gamma v_*(s'))\\)\\)</p> </li> <li> <p>DP: \u7ed9\u5b9a\u7b26\u5408MDP\u7684perfect model\u73af\u5883\uff0c\u4f7f\u7528DP\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230optimal policies</p> <ul> <li> <p>\u7b56\u7565\u8bc4\u4f30\uff0c\u4f7f\u7528iterative policy evaluation\uff0c\u5176\u4e2dk\u4e3a\u8fed\u4ee3\u6b21\u6570     $$     v_{k+1}(s)=\\sum_a\\pi(a,s)\\sum_{s^{\\prime}r}p(s^{\\prime},r|s,a)(r+\\gamma v_k(s^{\\prime}))     $$</p> </li> <li> <p>policy improvement theorem</p> <ul> <li> <p>deterministic policy: if policy \\(\\pi\\) is deterministic then only one action has non-zero probability under any state \\(s\\), note that action \\(\\pi(s)\\) </p> </li> <li> <p>\u5982\u679c\\(\\pi\\)\u548c\\(\\pi'\\)\u662f\u4e00\u5bf9deterministic policy\uff0c\u4f7f\u5f97\u5bf9\u6240\u6709s\uff0c\\(q_\\pi(s,\\pi'(s))\\geq v_\\pi(s)\\)\uff0c\u5219\u663e\u7136\\(v_{\\pi'}(s)\\geq v_{\\pi}(s)\\)</p> </li> <li> <p>proof</p> </li> </ul> <p></p> <ul> <li>\u56e0\u6b64</li> </ul> <p>$$   \\begin{aligned}   \\pi^{\\prime}(s) &amp; =\\arg\\max_aq_\\pi(s,a) \\newline     &amp; =\\arg\\max_{a}\\sum_{s^{\\prime},r}p(s^{\\prime},r|s,a)\\left[r+\\gamma v_{\\pi}(s^{\\prime})\\right]   \\end{aligned}   $$</p> </li> <li> <p>\u6574\u4f53\u7b97\u6cd5\uff1a</p> <ul> <li>\u6bcf\u6b21\u7b56\u7565\u8bc4\u4f30\u76f4\u5230\u6536\u655b\uff0c\u4e4b\u540e\u63d0\u53d6\u6700\u4f18\u7b56\u7565</li> </ul> <p></p> </li> </ul> </li> </ol>"},{"location":"ML/ml13/#monte-carlo-methods","title":"Monte Carlo Methods","text":"<ul> <li> <p>treat the unknown as an expectation, and estimate it by sampling and averaging</p> </li> <li> <p>sufficient exploration</p> <ul> <li>\u9700\u8981\u5f97\u5230\u65e0\u9650\u7684episodes</li> <li>exploring starts: the first state-action pair \\((S_0,A_0)\\) of each episode is sampled from a distribution that every state-action has a non-zero probability</li> </ul> </li> </ul> <p>\u5f53\u8499\u7279\u5361\u6d1b\u8bc4\u4f30\u6536\u655b\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u6b21\u7b56\u7565\u63d0\u5347\u3002\u4f46\u662f\u5b9e\u9645\u4e2d\u8bad\u7ec3\u96be\u5ea6\u5f88\u5927</p> <ul> <li> <p>\u4e0b\u4e00\u6b21\u7b56\u7565\u8bc4\u4f30\u65f6</p> <ul> <li> <p>\u82e5\u4fdd\u7559\u524d\u4e00\u6b21\u7684returns\uff0c\u7531\u4e8e\u4e4b\u524d\u7684\u5e76\u4e0d\u662f\u7531\u65b0\u7b56\u7565\u751f\u6210\u7684\uff0c\u56e0\u6b64\u4f1a\u4ea7\u751fbias\uff0c\u540c\u65f6\u5f88\u8017\u5185\u5b58</p> </li> <li> <p>\u4f46\u5982\u679c\u4e0d\u4fdd\u5b58\uff0c\u53c8\u9700\u8981\u5f88\u591a\u6b21\u6570\u6765\u91cd\u65b0\u751f\u6210\u6536\u655b\u7684Q</p> </li> <li> <p>constant-\\(\\alpha\\) MC</p> </li> </ul> <p></p> <ul> <li>\u4e00\u822c\\(\\alpha\\)\u53d60.1</li> </ul> </li> </ul>"},{"location":"ML/ml13/#td-learning","title":"TD Learning","text":"<p>update the value function when simulate only one step $$ V(S_t)\\leftarrow V(S_t)+\\alpha[R_{t+1}+\\gamma V(S_{t+1})-V(S_t)] $$ \u4f18\u70b9\u662f\u5feb</p> <ul> <li>\u5bf9\u6bd4DP\uff0c\u4e0d\u9700\u8981\u73af\u5883\u6a21\u578b</li> <li>\u5bf9\u6bd4MC\uff0conline fashion\u4e0a\u8fd0\u884c\uff0c\u5bf9continuing task\u4e5f\u9002\u7528</li> </ul> <p>TD error $$ \\delta_t\\doteq R_{t+1}+\\gamma V(S_{t+1})-V(S_t) $$</p> <ol> <li> <p>Sarsa</p> <ul> <li> <p>\\(\\epsilon\\)-greedy</p> <p>\u968f\u5c1d\u8bd5\u6b21\u6570\u589e\u52a0\uff0c\\(\\epsilon=\\dfrac{1}{\\sqrt{t}}\\)\u51cf\u5c11</p> </li> <li> <p>since \\(p(s',r|s,a)\\) is unclear, we have to estimate action-value \\(Q\\) rather than state-value \\(V\\)</p> </li> <li> <p>algorithm</p> <p></p> </li> <li> <p>in Sarsa, \\(Q(s,a)\\) has theoretical guarantee for convergence</p> </li> </ul> </li> <li> <p>Q-learning</p> <p></p> <ol> <li>on-policy and off-policy<ul> <li>like Sarsa, if the policy to optimize is the same as the policy to generate training data, these control methods called on-policy</li> <li>like Q-learning, if the policy to optimize is different from the policy to generate training data, these control methods called off-policy</li> </ul> </li> </ol> </li> </ol> <ol> <li>Double Q-Learning<ul> <li>Essentially, we use one policy model for taking actions, and update it on-the-fly, while for the other value model, we use it to estimate the q-value for each action-state pair.</li> <li>The architecture for policy model and value model can be the same. In this case, we update the weight for value model with the weight of policy model several(say 500) iterations.</li> </ul> </li> </ol>"},{"location":"ML/ml13/#exploration-vs-exploitation","title":"Exploration VS Exploitation","text":"<ol> <li>Connected to: bias vs. variance, tradeoff.</li> <li> <p>Extremes: greedy vs. random acting</p> </li> <li> <p>At the beginning of learning, we may want more exploration to know the environment</p> </li> <li>As time goes by, we may want more exploitation</li> <li>Q-learning converges to optimal Q-values if<ul> <li>Every state is visited infinitely often (due to exploration)</li> <li>The action selection becomes greedy as time approaches infinity</li> <li>The learning rate a is decreased fast enough but not too fast</li> </ul> </li> </ol>"},{"location":"ML/ml13/#policy-gradient-methods","title":"Policy Gradient Methods","text":"<p>in real world, we often can not get enough state information about the environment. At these time, the Markov property does not hold</p> <p>the optimal policy may not be deterministic policy</p> <p>example: Short corridor with switched actions</p> <p></p> <ul> <li>REINFORCE</li> </ul>"},{"location":"ML/ml14/","title":"\u7279\u5f81\u9009\u62e9\u548c\u7a00\u758f\u5b66\u4e60","text":""},{"location":"ML/ml14/#_2","title":"\u5b50\u96c6\u641c\u7d22\u4e0e\u5b50\u96c6\u8bc4\u4ef7","text":"<ol> <li> <p>\u5b50\u96c6\u641c\u7d22</p> <ul> <li>\u524d\u5411\u641c\u7d22\uff1a\u9010\u6e10\u589e\u52a0\u76f8\u5173\u7279\u5f81</li> <li>\u540e\u5411\u641c\u7d22\uff1a\u4ece\u5b8c\u6574\u7684\u7279\u5f81\u96c6\u5408\u5f00\u59cb\uff0c\u9010\u6e10\u51cf\u5c11\u7279\u5f81</li> <li>\u53cc\u5411\u641c\u7d22\uff1a\u6bcf\u4e00\u8f6e\u9010\u6e10\u589e\u52a0\u76f8\u5173\u7279\u5f81\uff0c\u540c\u65f6\u51cf\u5c11\u65e0\u5173\u7279\u5f81</li> </ul> </li> <li> <p>\u8bc4\u4ef7\u7279\u5f81\u5b50\u96c6\u5bf9\u6570\u636e\u96c6\u5212\u5206\u548c\u6837\u672c\u6807\u8bb0\u5212\u5206\u7684\u5dee\u5f02\uff0c\u5dee\u5f02\u8d8a\u5c0f\u5219\u8bf4\u660e\u5f53\u524d\u7279\u5f81\u5b50\u96c6\u8d8a\u597d</p> <ul> <li>\u4fe1\u606f\u589e\u76ca</li> </ul> </li> </ol>"},{"location":"ML/ml14/#_3","title":"\u7279\u5f81\u9009\u62e9","text":"<ol> <li> <p>\u8fc7\u6ee4\u5f0f\u9009\u62e9\uff1a\u5148\u7528\u7279\u5f81\u9009\u62e9\u8fc7\u7a0b\u8fc7\u6ee4\u539f\u59cb\u6570\u636e\uff0c\u518d\u7528\u8fc7\u6ee4\u540e\u7684\u7279\u5f81\u6765\u8bad\u7ec3\u6a21\u578b\uff1b\u7279\u5f81\u9009\u62e9\u8fc7\u7a0b\u4e0e\u540e\u7eed\u5b66\u4e60\u5668\u65e0\u5173</p> <ul> <li> <p>Relief\u65b9\u6cd5</p> <p></p> </li> <li> <p>\u76f8\u5173\u7edf\u8ba1\u91cf\u8d8a\u5927\uff0c\u5c5e\u6027j\u4e0a\uff0c\u731c\u5bf9\u8fd1\u90bb\u6bd4\u731c\u9519\u8fd1\u90bb\u8d8a\u8fd1\uff0c\u5373\u5c5e\u6027j\u5bf9\u533a\u5206\u5bf9\u9519\u8d8a\u6709\u7528</p> </li> </ul> </li> <li> <p>\u5305\u88f9\u5f0f\u9009\u62e9\uff1a\u76f4\u63a5\u628a\u6700\u7ec8\u5c06\u8981\u4f7f\u7528\u7684\u5b66\u4e60\u5668\u7684\u6027\u80fd\u4f5c\u4e3a\u7279\u5f81\u5b50\u96c6\u7684\u8bc4\u4ef7\u51c6\u5219</p> <ul> <li>LVW\uff08Las Vegas Wrapper\uff09<ul> <li>\u5728\u5faa\u73af\u7684\u6bcf\u4e00\u8f6e\u968f\u673a\u4ea7\u751f\u4e00\u4e2a\u7279\u5f81\u5b50\u96c6</li> <li>\u5728\u968f\u673a\u4ea7\u751f\u7684\u7279\u5f81\u5b50\u96c6\u4e0a\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u63a8\u65ad\u5f53\u524d\u7279\u5f81\u5b50\u96c6\u7684\u8bef\u5dee</li> <li>\u8fdb\u884c\u591a\u6b21\u5faa\u73af\uff0c\u5728\u591a\u4e2a\u968f\u673a\u4ea7\u751f\u7684\u7279\u5f81\u5b50\u96c6\u4e2d\u9009\u62e9\u8bef\u5dee\u6700\u5c0f\u7684\u7279\u5f81\u5b50\u96c6\u4f5c\u4e3a\u6700\u7ec8\u89e3</li> <li>\u82e5\u6709\u8fd0\u884c\u65f6\u95f4\u9650\u5236\uff0c\u5219\u8be5\u7b97\u6cd5\u6709\u53ef\u80fd\u7ed9\u4e0d\u51fa\u89e3</li> </ul> </li> </ul> </li> <li> <p>\u5d4c\u5165\u5f0f\u9009\u62e9\uff1a\u5c06\u7279\u5f81\u9009\u62e9\u8fc7\u7a0b\u4e0e\u5b66\u4e60\u5668\u8bad\u7ec3\u8fc7\u7a0b\u878d\u4e3a\u4e00\u4f53\uff0c\u4e24\u8005\u5728\u540c\u4e00\u4e2a\u4f18\u5316\u8fc7\u7a0b\u4e2d\u5b8c\u6210\uff0c\u5728\u5b66\u4e60\u5668\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u5730\u8fdb\u884c\u7279\u5f81\u9009\u62e9</p> </li> </ol>"},{"location":"ML/ml14/#_4","title":"\u7a00\u758f\u8868\u793a","text":"<ol> <li>\u5b57\u5178\u5b66\u4e60\uff1a\u4e3a\u666e\u901a\u7a20\u5bc6\u8868\u8fbe\u7684\u6837\u672c\u627e\u5230\u5408\u9002\u7684\u5b57\u5178\uff0c\u5c06\u6837\u672c\u8f6c\u5316\u4e3a\u7a00\u758f\u8868\u793a</li> </ol>"},{"location":"ML/ml14/#_5","title":"\u538b\u7f29\u611f\u77e5","text":"<ol> <li> <p>\u9650\u5b9a\u7b49\u8ddd\u6027\uff1a\u82e5\u5b58\u5728\u5e38\u6570\\(\\delta_k\\in(0,1)\\)\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f\u5411\u91cf\\(s\\)\u548c\\(A\\)\u7684\u6240\u6709\u5b50\u77e9\u9635\\(A_k\\in\\mathbb{R}^{n\\times k}\\)\u6709\uff1a    $$    (1-\\delta_k)|s|^2_2\\leq|A_k s|^2_2\\leq(1+\\delta_k)|s|^2_2    $$    \u5219\u79f0\\(A\\)\u6ee1\u8db3\\(k\\)\u9650\u5b9a\u7b49\u8ddd\u6027 (k-RIP)\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4f18\u5316\u95ee\u9898\u8fd1\u4e4e\u5b8c\u7f8e\u5730\u4ecey\u6062\u590d\u51fa\u7a00\u758f\u4fe1\u53f7s\uff0c\u8fdb\u800c\u6062\u590d\u51fax\u3002\u82e5\u4e0b\u5f0f\u4f7f\u7528\\(L_0\\)\u8303\u6570\u5219\u662fNP hard    $$    \\min_s|s|_1 \\newline     s.t.   y=As    $$</p> </li> <li> <p>\u77e9\u9635\u8865\u5168    $$    \\min_X rank(X) \\newline     s.t.   (X){ij}=(A),(i,j)\\in\\Omega    $$</p> </li> </ol>"},{"location":"ML/ml2/","title":"2 Linear Regression","text":"<ol> <li> <p>mean-squared error(MSE): \\(J_n=\\dfrac{1}{n}\\sum\\limits_{i=1}^n(y_i-f(x_i))^2\\)</p> </li> <li> <p>residual sum of squares: \\(RSS(f)=\\sum\\limits_{i=1}^n(y_i-f(x_i))^2\\)</p> </li> <li> <p>for matrix: \\(J_n(w)=(y-X^Tw)^T(y-X^Tw)\\)</p> </li> <li> <p>Maximum Likelihood Estimation: </p> <ul> <li>Likelihood of predictions: The probability of observing outputs \\(y\\) in \\(D\\) given \\(w,X,\\) and \\(\\sigma\\)</li> <li> <p>\\(L(D,w,\\sigma)=\\prod\\limits_{i=1}^np(y_i|x_i,w,\\sigma)\\)</p> </li> <li> <p>\\(w^*=\\operatorname{argmax}\\prod\\limits_{i=1}^np(y_i|x_i,w,\\sigma)\\)</p> </li> </ul> </li> <li> <p>Over-fitting</p> <ul> <li>\u89e3 \\(w=(XX^T)^{-1}Xy\\)</li> <li>\u82e5 \\(XX^T\\) \u975e\u5947\u5f02(\u6ee1\u79e9)\uff0c\u5219\u6709\u552f\u4e00\u89e3\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u8fc7\u62df\u5408</li> </ul> </li> <li> <p>Ridge Regression \u4e8c\u9636\u6b63\u5219\u9879</p> <ul> <li>control the size of the coefficients in Regression<ul> <li>local smoothness</li> <li>weight decay</li> </ul> </li> </ul> <p>$$   w^*=\\operatorname{argmin}\\sum_{i=1}^n\\left(y_i-x_i^Tw\\right)^2+\\lambda\\sum_{j=1}^pw_j^2   $$</p> <ul> <li>equivalent formulation</li> </ul> <p>$$   \\boldsymbol{a}^*=\\operatorname{argmin}\\sum_{i=1}^n\\left(y_i-x_i^T\\boldsymbol{w}\\right)^2 \\   \\text{Subject to} \\Sigma_{j=1}^pw_j^2\\leq t   $$</p> <p>\u63a8\u5bfc</p> <p></p> </li> <li> <p>subject to \\(\\sum\\limits_{j=1}^p|w_j|^q\\leq t\\)</p> <p></p> </li> <li> <p>LASSO(Least Absolute Selection and Shrinkage Operator)</p> \\[ \\widehat{\\boldsymbol{w}}=\\operatorname{argmin}\\frac{1}{2n}\\sum_{i=1}^{n}\\left(y_{i}-x_{i}^{T}w\\right)^{2}  \\ \\ \\ \\ \\ \\  \\text{subject to}\\sum_{j=1}^p|w_j|\\leq t\\\\ or \\ \\ \\ \\ \\ \\ \\ \\ \\widehat{\\boldsymbol{w}}=\\operatorname{argmin}\\frac{1}{2n}\\sum_{i=1}^{n}\\left(y_{i}-x_{i}^{T}w\\right)^{2}+\\lambda\\|w\\|_{1} \\] <ul> <li> <p>sparse model: \u5982\u4e0a\u56feq=1\u6240\u793a\uff0c\u66f4\u5bb9\u6613\u53d6\u5230\u5750\u6807\u8f74\u4e0a\u7684\u89d2\uff0c\u5bf9\u5e94\u7684\u662f\u6709\u67d0\u4e00\u5750\u6807\u5206\u91cf\u4e3a0\uff0c\u56e0\u6b64\u66f4\u80fd\u63d0\u53d6\u5230\u91cd\u8981\u7684\u7279\u5f81</p> </li> <li> <p>solution</p> <p></p> </li> </ul> </li> <li> <p>Bias &amp; Variance Decomposition</p> <ul> <li>Given training set D, so \\(f(x)\\rightarrow f(x;D)\\), and \\(E_D(f(x;D))\\)</li> </ul> <p></p> <ul> <li> <p>expected prediction error = \\((\\text{bias})^2+\\text{variance}+\\text{noise}\\)</p> <ul> <li> <p>(bias\\()^2:\\) \u76f8\u5f53\u4e8e\u62df\u5408\u51fa\u6765\u7684\u51fd\u6570\u548cy\u7684\u504f\u5dee   $$   \\int{E_D(f(x;D))-E(y|x)}^2p(x)dx   $$</p> </li> <li> <p>variance: \u62df\u5408\u51fa\u7684\u51fd\u6570\u672c\u8eab\u7684\u65b9\u5dee</p> </li> </ul> \\[ \\int E_D\\left\\{\\left[f(\\boldsymbol{x};D)-E_D(f(\\boldsymbol{x};D))\\right]^2\\right\\}p(\\boldsymbol{x})d\\boldsymbol{x} \\] <ul> <li>noise:</li> </ul> \\[ \\int\\mathrm{var}(y|x)p(x)dx \\] </li> </ul> <p></p> </li> <li> <p>Cross-Validation:</p> <ul> <li>K-Fold Cross-Validation</li> <li>leave-one-out cross-validation</li> </ul> </li> </ol>"},{"location":"ML/ml3/","title":"4 Linear Classifier","text":"<ol> <li> <p>Binary classifier to multi-class classifier</p> <ul> <li>one vs. one: \u5c06\u7c7b\u522b\u4e24\u4e24\u914d\u5bf9\uff0c\u4ea7\u751f\\(N(N-1)/2\\)\u4e2a\u4e8c\u5206\u7c7b\u4efb\u52a1\uff0c\u8bad\u7ec3\u8fd9\u4e9b\u5206\u7c7b\u5668\u3002\u9884\u6d4b\u65f6\u5c06\u6837\u672c\u63d0\u4ea4\u7ed9\u6240\u6709\u5206\u7c7b\u5668\uff0c\u7ed3\u679c\u4e2d\u88ab\u9884\u6d4b\u7684\u6700\u591a\u7684\u5373\u4e3a\u6700\u7ec8\u5206\u7c7b\u7ed3\u679c</li> <li>one vs. rest\uff1a\u6bcf\u6b21\u5c06\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u6b63\u4f8b\uff0c\u5176\u4f59\u53cd\u4f8b\uff0c\u8bad\u7ec3N\u4e2a\u5206\u7c7b\u5668\uff0c\u9884\u6d4b\u65f6\u5c06\u8f93\u51fa\u6b63\u4f8b\u7684\u89c6\u4e3a\u9884\u6d4b\u7ed3\u679c\u3002</li> </ul> <p></p> <ul> <li>Error Correcting Output Codes(ECOC)\uff0c\u5c5e\u4e8eMvM<ul> <li>\u7f16\u7801\uff1a\u5bf9N\u4e2a\u7c7b\u522b\u505aM\u6b21\u5212\u5206,\u6bcf\u6b21\u5212\u5206\u5c06\u4e00\u90e8\u5206\u7c7b\u522b\u5212\u4e3a\u6b63\u7c7b\uff0c\u4e00\u90e8\u5206\u5212\u4e3a\u53cd\u7c7b,\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u4e8c\u5206\u7c7b\u8bad\u7ec3\u96c6;\u8fd9\u6837\u4e00\u5171\u4ea7\u751fM\u4e2a\u8bad\u7ec3\u96c6,\u53ef\u8bad\u7ec3\u51faM\u4e2a\u5206\u7c7b\u5668</li> <li>\u89e3\u7801\uff1aM\u4e2a\u5206\u7c7b\u5668\u5206\u522b\u5bf9\u6d4b\u8bd5\u6837\u672c\u8fdb\u884c\u9884\u6d4b\uff0c\u8fd9\u4e9b\u9884\u6d4b\u6807\u8bb0\u7ec4\u6210\u4e00\u4e2a\u7f16\u7801.\u5c06\u8fd9\u4e2a\u9884\u6d4b\u7f16\u7801\u4e0e\u6bcf\u4e2a\u7c7b\u522b\u5404\u81ea\u7684\u7f16\u7801\u8fdb\u884c\u6bd4\u8f83,\u8fd4\u56de\u5176\u4e2d\u8ddd\u79bb\u6700\u5c0f\u7684\u7c7b\u522b\u4f5c\u4e3a\u6700\u7ec8\u9884\u6d4b\u7ed3\u679c</li> <li>\u7f16\u7801\u8d8a\u957f\uff0c\u7ea0\u9519\u80fd\u529b\u8d8a\u5f3a</li> </ul> </li> </ul> </li> </ol> <ol> <li> <p>sigmoid function: \\(\\sigma(t)=\\dfrac{1}{1+e^{-t}}, \\sigma:R\\rightarrow(0,1)\\)</p> </li> <li> <p>Maximum likelihood estimation for logistic regression: </p> \\[ P(D)=\\prod_{i\\in I}\\sigma(y_{i}\\boldsymbol{a}^{T}\\boldsymbol{x}_{i})\\newline l\\big(P(D)\\big)=\\sum_{i\\in I}\\log\\bigl(\\sigma(y_{i}\\boldsymbol{a}^{T}\\boldsymbol{x}_{i})\\big)=-\\sum_{i\\in I}\\log\\bigl(1+e^{-y_{i}\\boldsymbol{a}^{T}\\boldsymbol{x}_{i}}\\bigr) \\newline  E(\\boldsymbol{a})=\\sum_{i\\in I}\\log\\left(1+e^{-y_i\\boldsymbol{a}^T\\boldsymbol{x}_i}\\right) \\] </li> <li> <p>gradient descent algorithm</p> <p></p> </li> <li> <p>minimize a differentiable function:</p> \\[ E(a+\\Delta a)=E(a)+E'(a)\\Delta a+E''(a)\\frac{\\Delta a^2}{2!}+E'''(a)\\frac{\\Delta a^3}{3!}+\\cdots \\] <ul> <li> <p>linear approximation: \\(\\Delta a=-\\eta E^{\\prime}(a)\\)</p> </li> <li> <p>quadratic approximation:</p> <ul> <li>Newton's Method: Choose \\(\\Delta a\\) that \\(E^{\\prime }( a) \\Delta a+ E^{\\prime \\prime }( a) \\frac {\\Delta a^{2}}{2! }\\)is minimum   $$   E^{\\prime}(a)+E^{\\prime\\prime}(a)\\Delta a=0\\quad\\newline \\Delta\\boldsymbol{a}=-\\eta[\\mathbf{H}E(\\boldsymbol{a})]^{-1}E^{\\prime}(\\boldsymbol{a}) \\newline    \\Delta a=-\\frac{E'(a)}{E''(a)}   $$</li> </ul> </li> </ul> </li> <li> <p>Support Vector Machine: hyperplane, decision surface</p> <p></p> <ul> <li> <p>\u5bf9\u79bb\u7fa4\u70b9\u654f\u611f\u5ea6</p> </li> <li> <p>geometrical margin\u51e0\u4f55\u8ddd\u79bb: \\(\\gamma=y\\dfrac{w^Tx+b}{\\|w\\|}\\) y\u4fdd\u8bc1\u975e\u8d1f</p> </li> </ul> <p></p> <ul> <li> <p>If the hyperplane moves a little, points with small \\(\\gamma\\) will be affected, but points with large \\(\\gamma\\) won\u2019t</p> </li> <li> <p>Maximum Margin Classifier: find the hyperplane with the largest margin, maximize the confidence of classifying the dataset</p> </li> <li> <p>We know \\(y(w^Tx+b)\\) can be made arbitrarily large without changing the hyperplane, so we simply fix it at \\(y(w^Tx+b)=1\\)</p> </li> <li>so \\(\\min\\limits_{w,b}\\dfrac{1}{2}||w||^2\\) and \\(y_i(w^Tx_i+b)\\geq1\\)</li> </ul> <p></p> <ul> <li> <p>weakness: When an outlier appear, the optimal hyperplane may be pushed far away from its original /correct place. The resultant margin will also be smaller than before.</p> </li> <li> <p>slack variables: Assign a slack variable \\(\\xi\\) to each data point. That means we allow the point to deviate from the correct margin by a distance of \\(\\xi\\) (Actually \\(\\|w\\|\\xi\\) when considering geometrical margin).</p> </li> <li> <p>Unconstrained Optimization Problem of SVM</p> </li> </ul> \\[         \\min_{w,b}\\frac12\\|w\\|^2+C\\sum_{i=1}^n\\xi_i\\newline y(\\boldsymbol{w}^T\\boldsymbol{x}_i+b)\\geq1-\\xi_i\\newline \\xi_i\\geq0 \\newline          \\xi_{i}\\geq1-y(w^{T}x_{i}+b)\\quad\\xi_{i}=\\max[1-y(w^{T}x_{i}+b),0]\\newline \\min_{w,b}\\left\\{\\sum^{n}_{i=1}\\max[1-y(w^{T}x_{i}+b),0]+\\frac{1}{2C}\\|w\\|^{2}\\right\\} \\newline          \\ell(f)=\\max[1-yf,0]\\ \\ \\ \\text{Hingeloss} \\] </li> <li> <p>A General formulation of classifiers</p> <p></p> <ul> <li> <p>Square loss: \\(\\ell(f)=(1-yf)^2\\) Ordinary regression</p> </li> <li> <p>Logistic loss: \\(\\ell ( f) = \\log ( 1+ e^{- yf})\\)  Logistic regression</p> </li> <li> <p>Hinge loss: \\(\\ell ( f) = \\max [ 1- yf, 0]\\)  SVM</p> </li> </ul> </li> <li> <p>Lagrange Multipliers and the Karush-Kuhn-Tucker conditions</p> <ul> <li>equality constraints</li> </ul> <p></p> <ul> <li>inequality constraints</li> </ul> <p></p> <ul> <li>equality and inequality constraints</li> </ul> <p></p> </li> </ol>"},{"location":"ML/ml4/","title":"5 Kernel Methods","text":"<ol> <li>generalized linear discriminant function</li> </ol> <ol> <li> <p>\u6838\u65b9\u6cd5\uff1a\u5bf9\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u628a\u6837\u672c\u4ece\u539f\u59cb\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ef4\u7684\u7279\u5f81\u7a7a\u95f4\uff0c\u4f7f\u5f97\u6837\u672c\u5728\u8fd9\u4e2a\u7279\u5f81\u7a7a\u95f4\u5185\u7ebf\u6027\u53ef\u5206\u3002</p> <ul> <li>\u6620\u5c04\u51fd\u6570 phi-function: \\(x\\rightarrow\\phi(x)\\)</li> <li>\u5bf9\u5e94\u6a21\u578b\u53ef\u8868\u793a\u4e3a: \\(f(x)=w^\\mathrm{T}\\phi(x)+b\\)</li> <li>\u7c7b\u4f3c\u6709\uff1a</li> </ul> <p>$$   \\begin{aligned}&amp;\\min_{\\boldsymbol{w},b} \\frac{1}{2} |\\boldsymbol{w}|^{2}\\newline &amp;\\mathrm{s.t.} y_{i}(\\boldsymbol{w}^{\\mathrm{T}}\\phi(\\boldsymbol{x}_{i})+b)\\geqslant1,\\quad i=1,2,\\ldots,m.\\end{aligned}   $$</p> <ul> <li>\u5bf9\u5076\u95ee\u9898\u662f</li> </ul> <p>$$   \\max_{\\alpha}\\quad\\sum_{i=1}^{m}\\alpha_{i}-\\frac{1}{2} \\sum_{i=1}^{m}\\sum_{j=1}^{m}\\alpha_{i}\\alpha_{j}y_{i}y_{j}\\phi(\\boldsymbol{x}{i})^{\\mathrm{T}}\\phi(\\boldsymbol{x}) \\newline    \\begin{aligned}\\mathrm{s.t.}&amp;\\sum_{i=1}^{m}\\alpha_{i}y_{i}=0 ,\\newline &amp;\\alpha_{i}\\geqslant0 ,\\quad i=1,2,\\ldots,m .\\end{aligned}   $$</p> <ul> <li>\u6c42\u89e3\u4e0a\u5f0f\u53ef\u80fd\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u8bbe\u60f3</li> </ul> <p>$$   \\kappa(\\boldsymbol{x}_i,\\boldsymbol{x}_j)=\\langle\\phi(\\boldsymbol{x}_i),\\phi(\\boldsymbol{x}_j)\\rangle=\\phi(\\boldsymbol{x}_i)^\\mathrm{T}\\phi(\\boldsymbol{x}_j)   $$</p> <ul> <li> <p>\u5373\\(x_i\\)\u4e0e\\(x_j\\)\u5728\u7279\u5f81\u7a7a\u95f4\u7684\u5185\u79ef\u7b49\u4e8e\u5b83\u4eec\u5728\u539f\u59cb\u6837\u672c\u7a7a\u95f4\u4e2d\u901a\u8fc7\u51fd\u6570\\(\\kappa(\\cdot,\\cdot)\\)\u8ba1\u7b97\u7684\u7ed3\u679c(\u79f0\u4e3akernel trick)\uff0c\u6709\u4e86\u8fd9\u6837\u7684\u51fd\u6570\u3002\u6211\u4eec\u5c31\u4e0d\u5fc5\u76f4\u63a5\u53bb\u8ba1\u7b97\u9ad8\u7ef4\u5176\u81f3\u65e0\u7a77\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u5185\u79ef\uff0c\u91cd\u5199\u4e3a     $$     \\begin{aligned}&amp;\\max_{\\alpha}&amp;&amp;\\sum_{i=1}^{m}\\alpha_{i}-\\frac{1}{2} \\sum_{i=1}^{m}\\sum_{j=1}^{m}\\alpha_{i}\\alpha_{j}y_{i}y_{j}\\kappa(\\boldsymbol{x}{i},\\boldsymbol{x})\\newline &amp;\\mathrm{s.t.}&amp;&amp;\\sum_{i=1}^{m}\\alpha_{i}y_{i}=0 ,\\newline &amp;&amp;&amp;\\alpha_{i}\\geqslant0 ,\\quad i=1,2,\\ldots,m .\\end{aligned}     $$</p> </li> <li> <p>\u6c42\u89e3\u540e\u5373\u53ef\u5f97\u5230</p> </li> </ul> <p>$$   \\begin{aligned}   f(\\boldsymbol{x})&amp; =\\boldsymbol{w}^{\\mathrm{T}}\\phi(\\boldsymbol{x})+b \\newline    &amp;=\\sum_{i=1}^{m}\\alpha_{i}y_{i}\\phi(x_{i})^{\\mathrm{T}}\\phi(x)+b \\newline    &amp;=\\sum_{i=1}^{m}\\alpha_{i}y_{i}\\kappa(\\boldsymbol{x},\\boldsymbol{x}_{i})+b .   \\end{aligned}   $$</p> </li> <li> <p>\u6838\u51fd\u6570\uff1a\u4ee4\\(\\mathcal{X}\\)\u4e3a\u8f93\u5165\u7a7a\u95f4\uff0c\\(\\kappa(\\cdot,\\cdot)\\)\u662f\u5b9a\u4e49\u5728\\(\\mathcal{X}\\times\\mathcal{X}\\)\u4e0a\u7684\u5bf9\u79f0\u51fd\u6570\uff0c\u5219\\(\\kappa\\)\u662f\u6838\u51fd\u6570\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u4efb\u610f\u6570\u636e\\(D=\\{\\boldsymbol{x}_1,\\boldsymbol{x}_2,\\ldots,\\boldsymbol{x}_m\\}\\),\u201c\u6838\u77e9\u9635\u201d(kernel matrix) K \u603b\u662f\u534a\u6b63\u5b9a\u7684\uff1a</p> </li> </ol> <p>$$    \\begin{gathered}\\mathbf{K}=\\begin{bmatrix}\\kappa(\\boldsymbol{x}_1,\\boldsymbol{x}_1)&amp;\\cdots&amp;\\kappa(\\boldsymbol{x}_1,\\boldsymbol{x}_j)&amp;\\cdots&amp;\\kappa(\\boldsymbol{x}_1,\\boldsymbol{x}_m)\\newline \\vdots&amp;\\ddots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\newline \\kappa(\\boldsymbol{x}_i,\\boldsymbol{x}_1)&amp;\\cdots&amp;\\kappa(\\boldsymbol{x}_i,\\boldsymbol{x}_j)&amp;\\cdots&amp;\\kappa(\\boldsymbol{x}_i,\\boldsymbol{x}_m)\\newline \\vdots&amp;\\ddots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\newline \\kappa(\\boldsymbol{x}_m,\\boldsymbol{x}_1)&amp;\\cdots&amp;\\kappa(\\boldsymbol{x}_m,\\boldsymbol{x}_j)&amp;\\cdots&amp;\\kappa(\\boldsymbol{x}_m,\\boldsymbol{x}_m)\\end{bmatrix}.\\end{gathered}    $$</p> <ol> <li>dual representations: Ridge Regression</li> </ol> <p>$$    \\text{Define Gram matrix}  K=\\Phi\\Phi^T \\newline     \\Phi^{T}={\\phi(x_1),\\cdots,\\phi(x_N)}\\newline     K_{nm}=\\phi(x_n)^T\\phi(x_m)=k(x_n,x_m)\\newline     k(x,x^{\\prime})\\to\\phi(x)^T\\phi(x^{\\prime})    $$</p> <ol> <li>Maximum Margin Classifier</li> </ol> <p>$$    \\mathcal{L}(\\boldsymbol{a})=-\\frac{1}{2}\\sum_{i=1}^{N}\\sum_{j=1}^{N}a_{i}a_{j}y_{i}y_{j}\\phi^{T}(\\boldsymbol{x}{i})\\phi(\\boldsymbol{x})+\\sum_{i=1}^{N}a_{i}\\newline    \\mathcal{L}(\\boldsymbol{a})=-\\frac{1}{2}\\sum_{i=1}^{N}\\sum_{j=1}^{N}a_{i}a_{j}y_{i}y_{j}k(\\boldsymbol{x}{i},\\boldsymbol{x})+\\sum_{i=1}^{N}a_{i}\\newline     a_{i}\\geq0\\sum_{i=1}^{N}a_{i}y_{i}=0 \\newline     f(\\boldsymbol{x})=\\boldsymbol{w}^T\\phi(\\boldsymbol{x})+b    \\boldsymbol{w}=\\sum_{i=1}^Na_iy_i\\phi(\\boldsymbol{x}i)\\newline     f(\\boldsymbol{x})=\\sum^Na_iy_i\\phi(\\boldsymbol{x}i)^T\\phi(\\boldsymbol{x})+b=\\sum^Na_iy_ik(\\boldsymbol{x}_i,\\boldsymbol{x})+b    $$</p> <ol> <li> <p>\u5e38\u7528\u6838\u51fd\u6570</p> <ul> <li>Polynomial kernels     $$     k(x,x')=(x^Tx'+1)^d     $$</li> </ul> <p></p> <ul> <li>\u6838\u51fd\u6570\u4e4b\u95f4\u4e5f\u53ef\u4ee5\u7ebf\u6027\u7ec4\u5408\u3001\u76f4\u79ef\u7b49\u7b49</li> </ul> </li> <li> <p>\u5f53\u8bad\u7ec3\u5b9e\u4f8b\u7684\u6570\u91cf\u5c0f\u4e8e\u7279\u5f81\u6570\u91cf\u65f6\uff0c\u89e3\u51b3\u5bf9\u5076\u95ee\u9898\u6bd4\u539f\u59cb\u95ee\u9898\u66f4\u8fc5\u901f</p> </li> </ol>"},{"location":"ML/ml5/","title":"6 Decision Tree","text":"<ol> <li>classifiers for instances represented as features vectors</li> <li>nodes are tests for feature values</li> <li> <p>leaves specify the labels</p> </li> <li> <p>basic decision tree learning algorithm</p> </li> </ol> <ol> <li> <p>Finding the minimal decision tree consistent with the data is NP-hard</p> </li> <li> <p>Entropy: \\(Entropy(S)=-P_{+}\\log P_{+}-P_{-}\\log P_{-}\\)</p> <ul> <li>all the examples belong to the same category, \\(Entropy=0\\)</li> <li>the examples are equally mixed \\((0.5,0.5), Entropy=1\\)</li> <li>in general, \\(Entropy(S)=-\\sum\\limits_{i=1}^cP_i\\log P_i\\)</li> </ul> </li> <li> <p>information gain: \\(Gain(S,a)=Entropy(S)-\\sum\\limits_{v\\in values(a)}\\dfrac{|S_v|}{|S|}Entropy(S_v)\\),where \\(S_v\\) is the subset of \\(S\\) for which attribute \\(a\\) has value \\(v\\)</p> <ul> <li>partitions of low entropy lead to high gain</li> </ul> </li> <li> <p>ID3(Examples, Attributes, Label)</p> <p></p> </li> <li> <p>Avoid overfitting</p> <ul> <li>Prepruning: \u5728\u51b3\u7b56\u6811\u751f\u6210\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u5728\u5212\u5206\u524d\u5148\u8fdb\u884c\u4f30\u8ba1\uff0c\u82e5\u5f53\u524d\u7ed3\u70b9\u7684\u5212\u5206\u4e0d\u80fd\u5e26\u6765\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u63d0\u5347\uff0c\u5219\u505c\u6b62\u5212\u5206\u3002<ul> <li>\u6cdb\u5316\u6027\u80fd\uff1a\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e00\u90e8\u5206\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\uff0c\u6bd4\u8f83\u5212\u5206\u524d\u540e\u9a8c\u8bc1\u96c6\u7684\u6b63\u786e\u7387</li> </ul> </li> <li>Postpruning\uff1a\u5148\u751f\u6210\u4e00\u68f5\u5b8c\u6574\u7684\u51b3\u7b56\u6811\uff0c\u81ea\u5e95\u5411\u4e0a\u8003\u5bdf\u975e\u53f6\u7ed3\u70b9\uff0c\u82e5\u8be5\u7ed3\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u66ff\u6362\u4e3a\u53f6\u7ed3\u70b9\u80fd\u5e26\u6765\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u63d0\u5347\uff0c\u5219\u66ff\u6362\u3002</li> </ul> </li> <li> <p>ID3: only for classification, the features must be discrete</p> </li> <li> <p>CART(Classification and Regression Trees)</p> <ul> <li>pick feature \\(x^{(j)}\\) as splitting variable and \\(s\\) as the splitting point, we have two regions: \\(\\mathcal{R}_1(j,s)=\\{x|x^{(j)}\\leq s\\},\\mathcal{R}_2(j,s)=\\{x|x^{(j)}&gt;s\\}\\)</li> <li>calculate</li> </ul> <p>\\(\\(\\min_{j,s}[\\min_{c_1}\\sum_{x_i\\in\\mathcal{R}_1(j,s)}(y_i-c_1)^2+\\min_{c_2}\\sum_{x_i\\in\\mathcal{R}_2(j,s)}(y_i-c_2)^2]\\)\\)</p> <ul> <li>find the best \\((j,s)\\) pair and then have two regions</li> <li>finally we have \\(M\\) regions, and the tree can be represented as \\(f(x)=\\sum\\limits_{\\tau=1}^M c_\\tau I(x\\in\\mathcal{R}_\\tau)\\)</li> <li>prune</li> </ul> <p></p> <ul> <li>for classification, just use Entropy or Gini index instead of residual sum-of-squares         - the entropy: \\(Q_\\tau(T)=-\\sum\\limits_{k=1}^Kp_{\\tau k}\\log p_{\\tau k}\\)         - the Gini index: \\(Q_\\tau(T)=\\sum\\limits_{k=1}^K p_{\\tau k}(1-p_{\\tau k})=1-\\sum p_{\\tau k}^2\\)</li> </ul> </li> </ol>"},{"location":"ML/ml6/","title":"7 Neural Networks","text":""},{"location":"ML/ml6/#deep-learning","title":"Deep Learning","text":"<ol> <li> <p>Linear model</p> \\[ f(x)=w^Tx+b=0 \\ \\ \\ \\text{Hyperplane} \\newline  r=\\frac{f(x)}{\\|w\\|}\\ \\ \\ \\text{distance} \\] </li> <li> <p>Perceptron</p> <p></p> <ul> <li> <p>\u5355\u5c42\uff1a \u9884\u6d4b\u67d0\u4e2ax\u9519\u8bef\uff0c\u5219\\(w_t=w_{t-1}+xy\\)</p> </li> <li> <p>\u591a\u5c42</p> <ul> <li>If an example can be correctly predicted, No penalty.</li> </ul> \\[ J(w)=-\\sum_{i\\in I_M}w^Tx_iy_i \\newline  \\nabla J=\\sum_{i\\in I_M}-x_iy_i \\newline  \\text{gradient descent}\\ \\ \\ w(k+1)=w(k)+\\eta(k)\\sum_{i\\in I^k_M}x_iy_i \\] <p>batch learning\uff1a\u6240\u6709sample\u90fdavailable</p> </li> <li> <p>online learning/mini-batch learning: \u5b66\u4e60\u7b97\u6cd5\u53ea\u80fdone by one\u7684\u770b\u8bad\u7ec3\u6570\u636e</p> <ul> <li>\u8bad\u7ec3\u901f\u5ea6\u5feb\uff0cmemory\u6d88\u8017\u5c0f</li> <li>\u5177\u6709\u5b9e\u65f6\u6027\uff0c\u53ef\u4ee5\u5feb\u901f\u9002\u5e94\u65b0\u6570\u636e\u7684\u7279\u5f81\u53d8\u5316</li> <li>\u9700\u8981\u8fdb\u884c\u4e00\u5b9a\u7684\u6a21\u578b\u8bbe\u8ba1\u548c\u4f18\u5316\uff0c\u4ee5\u63d0\u9ad8\u7b97\u6cd5\u7684\u6548\u7387\u548c\u51c6\u786e\u6027</li> </ul> </li> <li> <p>mistake bound theorem</p> </li> </ul> <p></p> </li> <li> <p>Bias-variance Decomposition</p> <p></p> </li> <li> <p>Any continuous function from input to output can be implemented in a three-layer net, given sufficient number of hidden units \\(n_H\\), proper nonlinearities, and weights.</p> </li> <li> <p>\u5bf9\u6fc0\u6d3b\u51fd\u6570\u8981\u6c42\uff1a\u975e\u7ebf\u6027\uff0c\u6709\u4e0a\u4e0b\u754c\uff0c\u672c\u8eab\u548c\u5bfc\u6570\u8fde\u7eed\u4e14smooth</p> </li> </ol> <p>\u5bf9\u53c2\u6570\uff1a\u4ee50\u4e3a\u4e2d\u5fc3\uff0c\u5947\u51fd\u6570lead to faster learning</p> <ol> <li> <p>Dropout\uff1a\u6bcf\u6b21\u8bad\u7ec3\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6309\u4e00\u5b9a\u6982\u7387\u53ef\u80fd\u88ab\u6fc0\u6d3b\uff0c\u9632\u6b62\u8fc7\u62df\u5408\u3002\u6d4b\u8bd5\u65f6\uff0c\u6240\u6709node\u90fd\u88ab\u6fc0\u6d3b</p> </li> <li> <p>CNN: \u5377\u79ef\u3001\u6c60\u5316\uff1b\u8d8a\u63a5\u8fd1\u8f93\u51fa\u7684\u5c42\u53ef\u4ee5\u8868\u793a\u8d8a\u590d\u6742\u7684\u7279\u5f81\uff0c\u56e0\u4e3a\u4ed6\u4eec\u611f\u53d7\u91ce\u66f4\u5927</p> <ul> <li>Totally, big stride makes us harvest a big receptive field faster, but it also discards some information.</li> </ul> </li> <li> <p>ResNet: \u7531\u591a\u4e2aresidual block\u7ec4\u6210\uff0c\u6bcf\u4e2ablock\u8f93\u51faoutput=\\(ReLU(x)+x\\)</p> </li> <li> <p>Language Modeling: \u7ed9\u51fa\u4e00\u7cfb\u5217\u8bcd\uff0c\u8ba1\u7b97\u4e0b\u4e2aword\u5206\u5e03\u7684\u6982\u7387</p> </li> </ol> <p>$$    P(x^{(t+1)}|x^{(t)},\\dots,x^{(1)})    $$</p> <ol> <li> <p>RNN</p> <p></p> <ul> <li> <p>softmax\u628a\u5411\u91cf\u8f6c\u5316\u6210\u6982\u7387(\u5f52\u4e00\u5316)</p> </li> <li> <p>\u6a21\u578b\u5927\u5c0f\u4e0d\u4f1a\u968finput\u957f\u5ea6\u589e\u52a0\u800c\u589e\u52a0\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2atimestep\u6240\u7528\u7684\u6743\u91cd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u5bf9\u8f93\u5165\u987a\u5e8f\u662fsymmetry\u7684</p> </li> <li>\u7f3a\u70b9\u5728\u4e8e\u8ba1\u7b97recurrent process\u5f88\u6162\uff0c\u540c\u65f6\u7531\u4e8e\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u5728\u5b9e\u9645\u4e2d\u6211\u4eec\u5f88\u96be\u83b7\u5f97\u5f88\u591a\u4e2a\u65f6\u95f4\u6b65\u4e4b\u524d\u7684\u4fe1\u606f</li> </ul> </li> <li> <p>Vanishing Gradient Problem: Gradient contributions from \u201cfar away\u201d steps become zero, and the state at those steps doesn\u2019t contribute to what you are learning   \u83b7\u5f97\u4e0d\u4e86\u5f88\u8fdc\u7684\u4fe1\u606f</p> <ul> <li>\u5bf9\u6743\u91cd\u77e9\u9635\u8fdb\u884c\u597d\u7684\u521d\u59cb\u5316\u4f1a\u964d\u4f4e\u68af\u5ea6\u6d88\u5931\u7684\u5f71\u54cd</li> <li>\u4f7f\u7528ReLU \u8fd9\u6837\u68af\u5ea6\u66f4\u53ef\u80fd\u5b58\u4e0b\u6765</li> <li>\u4f7f\u7528LSTM\u6216GRU\uff0c\u73b0\u5728\u76f4\u63a5LLaMa\uff1f</li> </ul> </li> <li> <p>LSTM: If the forget gate is set to 1 for a cell dimension and the input gate set to 0, then the information of that cell is preserved indefinitely.</p> <p>LSTM doesn\u2019t guarantee that there is no vanishing/exploding gradient, but it does provide an easier way for the model to learn long-distance dependencies</p> <p></p> </li> </ol>"},{"location":"ML/ml7/","title":"7 Practical Topics in Deep Learning","text":""},{"location":"ML/ml7/#batch-normalization","title":"Batch Normalization","text":"<ol> <li>\u8ba9\u6bcf\u4e00\u4e2abatch\u5e73\u5747\u503c0\uff0c\u65b9\u5dee1\uff0c\u8ba9\u6570\u503c\u66f4\u7a33\u5b9a\uff0c\u907f\u514d\u68af\u5ea6\u7206\u70b8\u548c\u68af\u5ea6\u6d88\u5931</li> </ol> \\[ \\hat{x}^{(k)}=\\frac{x^{(k)}-E[x^{(k)}]}{\\sqrt{Var[x^{(k)}]}} \\] <ol> <li>\u4f1a\u964d\u4f4eDNN\u7684\u8868\u8fbe\u80fd\u529b</li> </ol> <ul> <li> <p>\u89e3\u51b3\u529e\u6cd5\uff1a\u52a0\u5165\u6b63\u5219\u9879</p> <p>$$  \\hat{x}^{(k)}=\\gamma\\times\\frac{x^{(k)}-E[x^{(k)}]}{\\sqrt{Var[x^{(k)}]}}+\\beta  $$</p> </li> <li> <p>\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0cE\u548cVar\u88ab\u8ba4\u4e3a\u662f\u4e0d\u53d8\u7684\uff0c\u66f4\u65b0\u6309\u5982\u4e0b\u516c\u5f0f\u3002\u800c\\(\\gamma\\)\u548c\\(\\beta\\)\u89c6\u4e3a\u662fnormal parameter\uff0c\u5728\u68af\u5ea6\u4e0b\u964d\u4e2d\u66f4\u65b0</p> </li> </ul> <ol> <li>compute \\(E\\) and \\(Var\\): by approximating, adopt exponentially decaying</li> </ol> <p>$$    \\begin{aligned}&amp;\\hat{E}\\big[x^{(k)}\\big]{iter+1}=0.9\\times\\hat{E}\\big[x^{(k)}\\big]+0.1\\times\\frac{1}{m}\\sum_{i=1}^{m}x^{(k)}{i}\\newline &amp;\\hat{Var}\\big[x^{(k)}\\big]=0.9\\times\\hat{Var}\\big[x^{(k)}\\big]{iter}+0.1\\times\\frac{1}{m}\\sum^{m}(x^{(k)}_{i}-E\\big[x^{(k)}\\big])^{2}\\end{aligned}    $$</p> <ol> <li> <p>\u5b8c\u6574\u7684\u6d41\u7a0b</p> <ol> <li>\u6bcf\u6b21\u5faa\u73af\uff0c\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u66f4\u65b0E\u548cVar</li> <li>Update all the learnable parameters, including \\(\\gamma\\) and \\(\\beta\\), and all the parameters in the convolutional layers.</li> <li>Update E and Var for the usage of the next iteration</li> </ol> </li> <li> <p>BN\u6d88\u9664\u4e86\u68af\u5ea6\u7206\u70b8\u548c\u68af\u5ea6\u6d88\u5931</p> </li> </ol>"},{"location":"ML/ml7/#data-augmentation","title":"Data Augmentation","text":"<ol> <li>\u6570\u636e\u589e\u5f3a\uff1a\u4f5c\u7528\u662f\u6269\u5927\u6570\u636e\u96c6\uff0c\u907f\u514d\u8fc7\u62df\u5408\uff0c\u5bf9\u56fe\u50cf\u800c\u8a00\u5e38\u7528\u64cd\u4f5c\u6709\uff1a\u88c1\u526a\u653e\u7f29\u3001\u955c\u50cf\u3001saturation(\u9971\u548c\u5ea6)\u3001\u65cb\u8f6c\u3001luminosity(\u5149\u7167)</li> </ol>"},{"location":"ML/ml7/#neural-network-pruning","title":"Neural Network Pruning","text":"<ol> <li>universal pipeline for pruning</li> </ol> <ol> <li> <p>weight-level pruning:</p> <ul> <li>set unimportant weights to zeros: weights with small absolute values, have the least influence</li> <li>cut down parameters directly</li> <li>\u6743\u91cd\u77e9\u9635\u53d8\u5f97\u7a00\u758f\uff0c\u66f4\u597d\u5b58\u50a8\u548c\u538b\u7f29\uff0cforward\u66f4\u5feb</li> <li>mobile\u8bbe\u5907\u4e0a\u7a00\u758f\u77e9\u9635\u7684support\u53d7\u9650</li> </ul> </li> <li> <p>filter-level pruning:</p> <ul> <li>pruning unimportant filters or feature maps: filters with small \\(l_p\\) norm and feature maps with small mean activation values \u5220\u6389\u5bf9\u5e94\u7684filter\u548cfeature map\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684</li> <li>cut down parameters and computations directly</li> <li>\u548c\u5176\u4ed6filter\u4fe1\u606f\u76f8\u4f3c\u7684\u662f\u4e0d\u91cd\u8981\u7684</li> </ul> </li> <li> <p>layer-level pruning/block-level:</p> <ul> <li>pruning redundant layers(blocks)</li> <li>cut down parameters and computations directly</li> <li>\u635f\u5bb3\u7279\u5f81\u4e4b\u95f4\u533a\u5206\u5ea6\u7684block\u662f\u4e0d\u91cd\u8981\u7684</li> </ul> </li> </ol>"},{"location":"ML/ml7/#gan","title":"GAN","text":"<ol> <li>generative model: given data \\(\\{x_i\\}_{i\\in I}\\) sampled from real distribution \\(p(x)\\), we want to sample new data \\(x \\sim p(x)\\)</li> </ol> <p>\u4f60\u5e0c\u671b\u53ef\u4ee5\u4ece\u8fd9\u4e9bsample\u70b9\u4e2d\u83b7\u53d6\u80cc\u540e\u771f\u5b9e\u7684\u5206\u5e03</p> <ol> <li> <p>generative adversarial network</p> <ul> <li>generator: \u4ece\u56fa\u5b9a\u9ad8\u65af\u5206\u5e03\u7684\u566a\u97f3\u4e2dsample\u82e5\u5e72\u4e2a\u70b9(32/64/...)\u4f5c\u4e3agenerator\u8f93\u5165\uff0c\u7ecf\u8fc7network\u751f\u6210\u5bf9\u5e94\u7684\u56fe\u50cf\u8f93\u51fa</li> <li>discriminator: \u4e00\u534a\u8f93\u5165\u662fgenerator\u751f\u6210\u7684fake\u56fe\uff0c\u4e00\u822c\u662f\u771f\u5b9e\u6570\u636e\uff0c\u8fdb\u884clinear regression\u3002</li> <li>\u76ee\u6807\uff1aD\u6700\u5927\u5316\u5224\u522b\u6982\u7387\uff0cG\u8ba9D\u6700\u5c0f</li> </ul> </li> </ol>"},{"location":"ML/ml7/#adversarial-attacks-and-defense","title":"Adversarial Attacks and Defense","text":"<ol> <li> <p>an intriguing property of DNN: a small shift \\(v\\) onto the input image can completely change the prediction of DNN on purpose \u767d\u76d2</p> <ul> <li>\u9c81\u68d2\u6027\u4f18\u5316\uff1a\u5728\u6837\u672c\u70b9\u5468\u56f4\u7684\u7403\u4f53\u5185\u505a\u4f18\u5316</li> </ul> </li> <li> <p>Attack Algorithm\uff1a\u627e\u5230\\(v=\\Delta x\\)\u53ef\u4ee5\u589e\u52a0loss value</p> <ul> <li>maximize loss l: \\(v=\\Delta x=\\epsilon\\times\\dfrac{\\partial l}{\\partial x}\\)</li> </ul> </li> <li> <p>\u9ed1\u76d2\u653b\u51fb\uff1a</p> <ol> <li>\u8981\u653b\u51fb\u7684\u7f51\u7edc\u9ed1\u76d2\uff0c\u901a\u8fc7\u8c03\u53d6\u539f\u7f51\u7edcapi\u6216\u8005\u5229\u7528\u516c\u5f00\u6570\u636e\u96c6\uff0c\u731c\u6d4b\u7f51\u7edc\u7ed3\u6784\uff0c\u8bad\u7ec3\u53e6\u4e00\u4e2a\u7f51\u7edc\u3002</li> </ol> </li> <li> <p>Defense Algorithm \u8fdb\u884c\u5bf9\u6297\u8bad\u7ec3</p> <ol> <li>In each iteration of training, we first attack the model to get \\(x'\\) then adopt it for training</li> </ol> <p>$$   x'=x+\\epsilon\\times\\frac{\\partial l}{\\partial x}   $$</p> <ol> <li> <p>Then we compute the loss value given \\(x'\\) rather than \\(x\\)      $$      L'=CrossEntropy(\\theta,x',y)      $$</p> </li> <li> <p>Then we minimize \\(L'\\) by compute the gradient of \\(\\theta\\)</p> </li> </ol> <p>$$   \\Delta\\theta=-lr\\times\\frac{\\partial L'}{\\partial\\theta}   $$</p> <ol> <li>Repeat 1~3 until convergence</li> </ol> </li> </ol>"},{"location":"ML/ml7/#attention-mechanism","title":"Attention Mechanism","text":"<ol> <li>old Seq2Seq model: easy to forget the first part when the sequence is long</li> </ol> <ol> <li>need a mechanism to pay attention to the entire source input</li> <li>Attention    - Attention(Q,K,V)=\\(\\text{softmax}(\\dfrac{QK^T}{\\sqrt{d_k}})V\\)</li> <li>Transformer</li> </ol>"},{"location":"ML/ml7/#neural-network-architecture-searchnas","title":"Neural Network Architecture Search(NAS)","text":"<ol> <li>In NAS, a neural network is seen as an directed acyclic graph (densely connected). Edges represent operations (e.g., conv, relu, etc.), and nodes represent input and output. What we do is determining the best operation between each two node</li> <li>The real output of a layer is the weighted sum of all candidate operations, where weights are trainable parameters. </li> <li>Edges with largest weights are kept while others are deleted.</li> </ol>"},{"location":"ML/ml8/","title":"8 Bayesian Decision Theory","text":""},{"location":"ML/ml8/#prior","title":"Prior","text":"<ol> <li>A priori (prior) probability of the state of nature<ul> <li>Random variable (State of nature is unpredictable)</li> <li>Reflects our prior knowledge about how likely we are to observe a sea bass or salmon</li> <li>The catch of salmon and sea bass is equiprobable<ul> <li>\\(P(w_1)=P(w_2)\\) uniform priors</li> <li>\\(P(w_1)+P(w_2)=1\\) exclusivity and exhaustively</li> </ul> </li> </ul> </li> <li>\u53ea\u6709\u5148\u9a8c\u65f6\uff1a\u9009\u62e9\u6982\u7387\u8f83\u5927\u7684\u90a3\u4e00\u4e2a\u4e3a\u7ed3\u679c\uff0c\u9519\u8bef\u7387\u4e3a\u6982\u7387\u5c0f\u7684\u53e6\u4e00\u4e2a</li> </ol>"},{"location":"ML/ml8/#likelihood","title":"Likelihood","text":"<ol> <li>\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u8981\u5206\u7c7b\u7269\u4f53\u7684\u67d0\u4e2a\u7279\u5f81\uff0c\u6bd4\u5982\u9c7c\u8868\u9762\u7684\u989c\u8272\uff0c\u8fd9\u65f6\u5019\\(p(x|w_1)\\)\u5c31\u8868\u793a\u79cd\u7c7b\u662f1\u7684\u65f6\u5019\u6709x\u7279\u5f81\u7684\u6982\u7387\uff0c\u8fd9\u4e2a\u6982\u7387\u5c31\u662flikelihood</li> <li>maximum likelihood decision: assign input pattern \\(x\\) to class \\(w_1\\) if \\(p(x|w_1)&gt;p(x|w_2)\\)</li> </ol>"},{"location":"ML/ml8/#posterior","title":"Posterior","text":"<ol> <li>Posterior = (Likelihood x Prior) / Evidence   \\(p(w_i|x)=\\dfrac{p(x|w_i)p(w_i)}{p(x)}\\)<ul> <li>Evidence \\(p(x)\\) can be viewed as a scale factor that guarantees that the posterior probabilities sum to 1</li> </ul> </li> </ol>"},{"location":"ML/ml8/#optimal-bayes-decision-rule","title":"Optimal Bayes Decision Rule","text":""},{"location":"ML/ml8/#generalization","title":"Generalization","text":"<ol> <li>overall risk: \\(R=\\int R(\\alpha_i|x)p(x)dx\\)<ul> <li>Bayes risk = best performance that can be achieved</li> </ul> </li> <li>conditional risk: \\(R(\\alpha_i|x)=\\sum\\limits_{j=1}^c\\lambda(\\alpha_i|w_j)P(w_j|x)\\)<ul> <li>\u9009\u62e9\u4f7f\\(R(\\alpha_i|x)\\)\u6700\u5c0f\u7684action</li> </ul> </li> <li>two-category classification<ul> <li>If the likelihood ratio exceeds a threshold value that is independent of the input pattern x, we can take optimal actions</li> </ul> </li> </ol> <ol> <li>Minimum-Error-Rate Classification<ul> <li>actions are decisions on classes</li> <li>seek a decision rule that minimizes the probability of error or the error rate</li> <li>Zero-one (0-1) loss function: no loss for correct decision and a unit loss for any error</li> <li>\u8fd9\u65f6\u5019conditional risk  \\(R(\\alpha_i|x)=1-P(w_i|x)\\)\uff0c\u6240\u4ee5\u6700\u5c0f\u5316risk\u7b49\u4e8e\u6700\u5927\u5316\u540e\u9a8c\u6982\u7387</li> <li>\u5728\u524d\u9762\u6211\u4eec\u9009\u62e9\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u4f5c\u4e3a\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u62bd\u8c61\uff0c\u628a\u9009\u62e9\u54ea\u4e00\u7c7b\u7684\u79f0\u4e3adiscriminant functions \\(g_i(x)\\)</li> <li>$P(w_1|x) $ -&gt; \\(p(x|w_1)P(w_1)\\) -&gt; \\(\\ln p(x|w_1)+\\ln P(w_1)\\) -&gt; \\(g(x)=P(w_1|x)-P(w_2|x)\\) -&gt; \\(g(x)=\\ln\\dfrac{p(x|w_1)}{p(x|w_2)}+\\ln\\dfrac{P(w_1)}{P(w_2)}\\)</li> </ul> </li> <li>MLE: Best parameters are obtained by maximizing the probability of obtaining the samples observed</li> <li> <p>Log-likelihood</p> \\[ l(\\theta)=\\ln p(D|\\theta) \\ \\ \\ \\ p(D|\\theta)=\\prod^n_{k=1}p(x_k|\\theta) \\newline  l(\\theta)=\\sum_{k=1}^n\\ln p(x_k|\\theta) \\newline  \\theta^*=arg\\max_{\\theta} l(\\theta) \\] <ul> <li>set of necessary conditions for an optimum is \\(\\nabla_{\\theta}l=0\\)</li> </ul> </li> <li> <p>Bayesian learning</p> <ul> <li>goal: estimating \\(p(x|w_i), p(x|D_i), p(x|w_i, D_i)\\)</li> <li>Use a set D of samples drawn independently according to the fixed but unknown probability distribution \\(p(x)\\) to determine \u5df2\u77e5\u5206\u5e03\uff0c\u4f46\u4e0d\u77e5\u9053\u5177\u4f53\u53c2\u6570\uff0c\u56e0\u6b64\u76f8\u5f53\u4e8e\\(p(x|\\theta)\\)\u5df2\u77e5</li> </ul> <p></p> </li> <li> <p>General Theory</p> <ul> <li>The form of \\(p(x|\\theta)\\) is assumed known, but the value of \\(\\theta\\) is not known exactly</li> <li>Our knowledge about \\(\\theta\\) is assumed to be contained in a known prior density \\(p(\\theta)\\)</li> <li>The rest of our knowledge about \\(\\theta\\) is contained in a set D of n random variables \\(x_1, x_2, \\dots, x_n\\) that follows \\(p(x)\\)</li> <li>Compute the posterior \\(p(\\theta|D)\\) , then estimate the class conditional density \\(p(x|D)\\)</li> </ul> </li> <li> <p>\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff1a\u5047\u8bbe\u6240\u6709\u5c5e\u6027\u76f8\u4e92\u72ec\u7acb</p> <ul> <li>\u4f18\u70b9<ul> <li>\u5bf9\u79bb\u7fa4\u7684\u566a\u58f0\u70b9\u9c81\u68d2</li> <li>\u5bf9\u7f3a\u5931\u503c\uff0c\u76f4\u63a5\u5ffd\u7565</li> <li>\u5bf9\u65e0\u5173\u5c5e\u6027\u9c81\u68d2</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u5047\u8bbe\u5728\u73b0\u5b9e\u4e2d\u5f88\u96be\u6210\u7acb</li> <li>\u9700\u8981\u62c9\u666e\u62c9\u65af\u5e73\u6ed1</li> </ul> </li> </ul> </li> <li> <p>How to estimate probabilities from data?  For continuous attributes</p> <ul> <li>discretize the range into bins: one ordinal attribute per bin</li> <li>two-way split: choose only one of the two splits as new attribute</li> <li>probability density estimation: \u5047\u8bbe\u5c5e\u6027\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u7528\u6570\u636e\u4f30\u8ba1\u53c2\u6570\uff0c\u518d\u7528\u53c2\u6570\u4f30\u8ba1\u6982\u7387</li> </ul> </li> <li> <p>Laplace Smoothing \u907f\u514d\u51fa\u73b0\u96f6\u6982\u7387\u4f7f\u5f97\u76f8\u4e58\u540e\u4e3a0</p> \\[ P(x_{i}|\\omega_{k})=\\frac{|x_{ik}|+1}{N_{\\omega_{k}}+K}\\newline P(x_{i}|\\omega_{k})=\\frac{|x_{ik}|+\\alpha}{N_{\\omega_{k}}+\\alpha K} \\] </li> </ol>"},{"location":"ML/ml9/","title":"9 Ensemble Methods","text":""},{"location":"ML/ml9/#the-bagging-algorithm-bootstrap-aggregating","title":"The Bagging Algorithm (Bootstrap Aggregating)","text":"<ol> <li>bootstrap: re-sample N examples from D uniformly with replacement</li> <li>aggregating: aggregate the outputs of the base learners</li> <li>base learner\u5e94\u8be5\u5bf9\u5fae\u5c0f\u7684\u6539\u53d8\u654f\u611f\uff0c\u6709\u65f6\u751a\u81f3\u5141\u8bb8\u8fc7\u62df\u5408</li> <li>base learner\u6211\u4eec\u5e0c\u671b\u9009\u62e9low bias\u7684</li> <li>Parallel ensemble method</li> </ol>"},{"location":"ML/ml9/#random-forest","title":"Random Forest","text":"<ol> <li> <p>use decision tree as basic unit in bagging, an ensemble model</p> </li> <li> <p>\u51b3\u7b56\u6811\u4f18\u70b9\uff1a\u5904\u7406\u7f3a\u5931\u503c\u3001\u5bf9\u8f93\u5165\u7a7a\u95f4\u7684\u5f02\u5e38\u503c\u9c81\u68d2\u3001\u901f\u5ea6\u5feb\u3001\u53ef\u89e3\u91ca\u6027\u9ad8\uff0c\u975e\u7ebf\u6027</p> </li> <li> <p>\u51b3\u7b56\u6811\u7f3a\u70b9\uff1a\u51c6\u786e\u7387\u4f4e\uff0c\u5bb9\u6613\u8fc7\u62df\u5408</p> </li> <li> <p>process\uff1a\u968f\u673a\u91c7\u6837N samples\uff0c\u91cd\u590dT\u6b21\uff0c\u7528\u8fd9T\u4e2a\u8bad\u7ec3\u96c6\u72ec\u7acb\u8bad\u7ec3\u51faT\u4e2amodel</p> </li> <li> <p>aggregating all models will fuzzy up the decision boundary, helping reduce the variance</p> </li> <li> <p>RF incorporate randomized feature selection at each split step</p> <p>\u6bcf\u6b21\u968f\u673a\u9009\u62e9\u4e00\u90e8\u5206\u7279\u5f81\u7528\u4ee5\u8bad\u7ec3\u51b3\u7b56\u6811\uff0c\u5373\u4e24\u91cd\u968f\u673a</p> <p>Each time, basic learner doesn\u2019t learn from all data, but from Random bootstrap sampled data.  </p> <p>\u53ea\u4ece\u4e00\u90e8\u5206\u6570\u636e\u4e2d\u5b66\u4e60</p> <p>Basic learner doesn\u2019t use all features, but Random select some features.</p> <ul> <li>more efficient</li> <li>each time we only pick the best feature from size(f) rather than size(F).</li> <li>we often let \\(size(f)=\\sqrt{k}\\) in classification and \\(\\dfrac{k}{3}\\) in regression</li> </ul> </li> <li> <p>\u5f88\u663e\u7136\u5730\uff0c\u6bcf\u4e2a\u6811\u4e0d\u6bd4DT\u597d\uff0c\u6211\u4eec\u5141\u8bb8\u4ed6\u4eec\u8fc7\u62df\u5408\uff0c\u4ee5\u8ba9\u4ed6\u4eecaware little change\uff0c\u4f46\u7ec4\u5408\u8d77\u6765\u53ef\u80fd\u66f4\u597d</p> </li> <li> <p>\u7b97\u6cd5</p> <ol> <li>Select a new bootstrap sample from original training set</li> <li>Growing a tree\u2026</li> <li>At each internal node, randomly select K features from ALL features and then, determine the best split in ONLY the K features. \u6bcf\u4e2a\u7ed3\u70b9\u4ec5\u9009\u62e9K\u4e2a\u7279\u5f81\u8ba1\u7b97\u4fe1\u606f\u589e\u76ca\u5f97\u5230\u6700\u597d\u7684split</li> <li>Do not pruning</li> <li>Until Validation Error never decrease</li> </ol> </li> </ol>"},{"location":"ML/ml9/#boosting","title":"Boosting","text":"<ul> <li>modify the weight of different training examples</li> </ul> <p>\u5982\u5728\u8dd1\u7b2c\u4e8c\u4e2a\u6a21\u578b\u7684\u65f6\u5019\uff0c\u63d0\u9ad8\u7b2c\u4e00\u4e2a\u6a21\u578b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u7684\u6743\u91cd</p> <ul> <li> <p>generate a model on the modified training set</p> </li> <li> <p>sequential ensemble method</p> </li> <li> <p>question 1: \u5982\u4f55\u6539\u53d8\u6837\u672c\u6743\u91cd\u8ba9\u88ab\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u6709\u66f4\u9ad8\u6743\u91cd</p> </li> <li> <p>question 2\uff1a\u5982\u4f55\u5728final phase\u7ec4\u5408\u8fd9\u4e9bbase learners</p> </li> </ul>"},{"location":"ML/ml9/#adaboost","title":"AdaBoost","text":"<ol> <li>\u521d\u59cb\u6743\u91cd\u8bbe\u4e3a\\(1/N\\)</li> <li>\u5bf9M\u4e2a\u5b66\u4e60\u5668\uff0c\u9996\u5148fit\u4e00\u4e2aclassifier\u6700\u5c0f\u5316\u4ee5\u4e0b\u51fd\u6570\uff0c\u5176\u4e2dI\u4e3a\u7b26\u53f7\u51fd\u6570\uff0c\u4e0d\u7b49\u4e8e\u5c31\u8f93\u51fa1\uff0c\u5426\u5219\u8f93\u51fa0</li> </ol> \\[ J_{m}=\\sum_{n=1}^{N}w_{n}^{(m)}I\\left(y^{(m)}\\left(x_{n}\\right)\\neq t_{n})\\right) \\] <ol> <li>\u8bc4\u4f30\u9519\u8bef\u7387</li> </ol> \\[ \\epsilon_m=\\frac{\\sum_{n=1}^Nw_n^{(m)}I(y^{(m)}(x_n)\\neq t_n)}{\\sum_{n=1}^Nw_n^{(m)}} \\] <p>\u200b   \u7528 \\(\\alpha_m=\\ln\\dfrac{1-\\epsilon_m}{\\epsilon_m}\\) \u8bc4\u4f30</p> <ol> <li> <p>\u66f4\u65b0\u6743\u91cd\u7cfb\u6570</p> <p></p> <ul> <li>\u5206\u6790\u53ef\u4ee5\u5f97\u5230</li> </ul> <p></p> </li> <li> <p>\u4f7f\u7528final model\u505a\u9884\u6d4b  </p> </li> </ol> <p>$$    Y_M(x)=\\text{sign}(\\sum\\limits_{m=1}^M\\alpha_my^{(m)}(x))    $$</p> <p>weighting coefficients \\(\\alpha_m\\) give greater weight to the more accurate classifiers when computing the overall output</p> <p>Proof</p> <p></p> <ol> <li> <p>Optimization</p> <ul> <li> <p>exponential error function:     $$     E=\\sum^N_{n=1}\\exp{-t_nf_m(x_n)}     $$</p> <p></p> \\[ \\begin{aligned} &amp;=\\sum_{n=1}^{N}\\exp\\left\\{-t_{n}f_{m-1}(x_{n})-\\frac{1}{2}t_{n}\\alpha_{m}y_{m}(x_{n})\\right\\} \\newline &amp;=\\sum_{n=1}^{N}\\exp\\{-t_{n}f_{m-1}(\\boldsymbol{x}_{n})\\}\\exp\\left\\{-\\frac{1}{2}t_{n}\\alpha_{m}y_{m}(\\boldsymbol{x}_{n})\\right\\} \\newline &amp;=\\sum_{n=1}^Nw_n^{(m)}\\exp\\left\\{-\\frac{1}{2}t_n\\alpha_my_m(x_n)\\right\\} \\newline &amp;w_{n}^{(m+1)}=w_{n}^{(m)}\\exp\\left\\{-\\frac{1}{2}t_{n}\\alpha_{m}y_{m}(x_{n})\\right\\} \\end{aligned} \\] </li> </ul> </li> </ol>"},{"location":"ML/ml9/#summary","title":"Summary","text":"<ul> <li>Boosting is sequential ensemble methods, where the base learners are generated sequentially.</li> <li>Bagging is parallel ensemble methods: where the base learners are generated in parallel.</li> <li>Boosting exploit the dependence between the base learners, since the overall performance can be boosted in a residual-decreasing way.</li> <li>Bagging exploit the independence between the base learners, since the error can be reduced dramatically by combining independent base learners. </li> </ul>"},{"location":"ML/ml9/#gradient-boosting-decision-tree","title":"Gradient Boosting Decision Tree","text":"<ol> <li>algorithm<ul> <li>\u521d\u59cb\u5316 \\(f_0(x)=0\\)</li> <li>For m=1,2,...,M<ul> <li>Compute the residual: \\(r_{mi}=y_i-f_{m-1}(x_i)\\)</li> <li>treat \\(r_{mi}\\) as \\(y_i\\), learn a regression tree \\(h_m(x)\\)</li> <li>update \\(f_m(x)=f_{m-1}(x)+h_m(x)\\)</li> </ul> </li> <li>Get the final model \\(f_M(x)=\\sum\\limits_{m=1}^Mh_m(x)\\)</li> </ul> </li> </ol> <p>Example: A man who is 30. We want to learn a model to fit his age. We use addictive model. The first model we learnt can only predict 20; then we learn another model to fit the remaining 10 and we get a model can predict 6; then we learn another model to fit 4\u2026 The final model will be the summation of all models.</p>"},{"location":"MLDA/","title":"Machine Learning and Data Analysis","text":"<p>Abstract</p> <ul> <li>2024spring</li> <li>\u4e00\u4e2a\u5f88\u6c34\u7684\u56fd\u9645\u5316\u8bfe\u7a0b\uff0c\u5fc3\u60c5\u597d\u7684\u65f6\u5019\u770b\u8bfe\u4ef6\u8bb0\u8bb0\u7b14\u8bb0\uff0c\u5fc3\u60c5\u4e0d\u597d\u7684\u65f6\u5019\u76f4\u63a5\u6446\u70c2\uff0c\u8bb2\u7684\u5185\u5bb9\u4e5f\u662f\u975e\u5e38\u7684\u57fa\u7840</li> </ul>"},{"location":"MLDA/review/","title":"Note","text":""},{"location":"MLDA/review/#lec-2-data","title":"Lec 2 Data","text":""},{"location":"MLDA/review/#types-of-attributes","title":"Types of Attributes","text":"<p>\u6807\u79f0\u5c5e\u6027(nominal data)\uff1a\u4ee3\u8868\u67d0\u79cd\u7c7b\u522b\u3001\u7f16\u7801\u6216\u8005\u72b6\u6001\u3002\u6bd4\u5982\u5934\u53d1\u989c\u8272\u5982\u9ed1\u8272\u3001\u68d5\u8272\u3001\u9ec4\u8272\u7b49\u3002\u6807\u79f0\u5c5e\u6027\u503c\u4e0d\u5177\u6709\u6709\u610f\u4e49\u7684\u5e8f\u4e14\u5e76\u4e0d\u662f\u5b9a\u91cf\u7684\u3002\u4f17\u6570\u662f\u8be5\u5c5e\u6027\u7684\u4eba\u4e2d\u5fc3\u8d8b\u52bf\u5ea6\u91cf\u3002\u5747\u503c\u548c\u4e2d\u4f4d\u6570\u90fd\u65e0\u610f\u4e49\u3002</p> <ul> <li>\u4e0d\u5b9a\u91cf\u4e14\u65e0\u5e8f\uff0c\u53cd\u5e94\u7c7b\u522b</li> </ul> <p>\u5e8f\u6570\u5c5e\u6027(ordinal data)\uff1a\u503c\u4e4b\u95f4\u5177\u6709\u6709\u610f\u4e49\u7684\u5e8f(ranking)\u3002\u76f8\u7ee7\u503c\u4e4b\u95f4\u7684\u5dee\u672a\u77e5\u3002\u6bd4\u5982\u6807\u79f0\u5c5e\u6027 size \u4e2d\u7684\u5927\u3001\u4e2d\u3001\u5c0f\uff0c\u5177\u6709\u6709\u610f\u4e49\u7684\u5148\u540e\u6b21\u5e8f\uff0c\u4f46\u662f\u65e0\u6cd5\u63cf\u8ff0\u5927\u548c\u4e2d\u3001\u4e2d\u548c\u5c0f\u4e4b\u95f4\u76f8\u5dee\u5177\u4f53\u591a\u5c11\u3002\u5e8f\u6570\u5c5e\u6027\u4e5f\u53ef\u4ee5\u6570\u503c\u91cf\u7684\u503c\u57df\u5212\u5206\u6210\u6709\u9650\u6709\u5e8f\u7c7b\u522b\uff0c\u5c06\u6570\u503c\u5c5e\u6027\u79bb\u6563\u5316\u5f97\u5230\u3002\u5e8f\u6570\u5c5e\u6027\u7684\u4e2d\u5fc3\u8d8b\u52bf\u5ea6\u91cf\u53ef\u7528\u4f17\u6570\u548c\u4e2d\u4f4d\u6570\u8868\u793a\uff0c\u5747\u503c\u610f\u4e49\u4e0d\u5927\u3002</p> <ul> <li>ranking</li> </ul> <p>interval data: \u7528\u6570\u5b57\u5b9a\u91cf\u5730\u63cf\u8ff0\u53d8\u91cf\u7a0b\u5ea6\u4e0a\u7684\u5dee\u5f02\u3002\u6bd4\u5982\u6e29\u5ea6\uff0c20\u2103 \u6bd4 10\u2103 \u9ad8 10\u2103\uff0c\u548c 30\u2103 \u4e0e 20\u2103 \u4e4b\u95f4\u7684\u6e29\u5dee\u662f\u4e00\u6837\u7684\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e8c\u8005\u7684\u5dee\uff08interval\uff09\u6709\u610f\u4e49\u7684\uff0c\u800c\u8ba1\u6570\u96f6\u70b9\u7684\u9009\u62e9\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u9009\u62e9\u4e0d\u540c\u7684\u53c2\u8003\u6e29\u5ea6\u4f5c\u4e3a 0\u2103\uff0c\u90a3\u4e48\u540c\u4e00\u6e29\u5ea6\u4f1a\u6709\u4e0d\u540c\u7684\u793a\u6570\u3002\u4f46\u4e0d\u5f71\u54cd\u4e24\u4e2a\u6e29\u5ea6\u4e4b\u95f4\u7684\u5dee\u3002</p> <p>ratio data:\u8ba1\u6570\u96f6\u70b9\u662f\u6709\u610f\u4e49\u7684\uff0c\u6216\u8005\u8bf4\u4e0d\u5149\u53d8\u91cf\u4e4b\u95f4\u7684\u5dee\u6709\u610f\u4e49\uff0c\u800c\u4e14\u53d8\u91cf\u672c\u8eab\u5c31\u5177\u6709\u610f\u4e49\u3002\u6bd4\u5982\u957f\u5ea6\uff0c\u8d28\u91cf\uff0c\u5728\u7269\u7406\u4e0a\u6709\u660e\u786e\u7684\u5b9a\u4e49\uff1a\u4e00\u7c73\u6709\u591a\u957f\uff0c\u4e00\u5343\u514b\u6709\u591a\u5c11\u91cf\u3002\u8fd9\u6837\u5982\u679c\u6211\u4eec\u8bf4 0.5 \u7c73\u6211\u4eec\u5c31\u77e5\u9053\u6709\u591a\u957f\u3002\u8ba1\u6570\u96f6\u70b9 0 \u7c73\u4e5f\u662f\u660e\u786e\u7684\uff0c\u800c\u4e0d\u662f\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u7684\u3002</p> <p>Example</p> <p></p>"},{"location":"MLDA/review/#jaccard","title":"Jaccard \u7cfb\u6570","text":""},{"location":"MLDA/review/#lec-3-frequentist-data-analysis","title":"Lec 3 Frequentist Data Analysis","text":"<ol> <li> <p>Maximum Likelihood Estimation: \\(\\hat{\\theta}_{MLE}=\\arg \\max\\limits_{\\theta}P(D|\\theta)\\)</p> </li> <li> <p>\u5bf9\u4e8c\u9879\u5206\u5e03\uff1a</p> </li> </ol> <p>$$ \\hat{p}=\\arg\\max\\limits_{p}\\mathbb{P}(X_1,\\cdots,X_n;p) $$</p> <p>$$ =\\arg \\max\\limits_p {p^{n_h}(1-p)^{n-n_h} } $$</p> <p>$$ =\\arg\\max\\limits_p{n_h\\log p+(n-n_h)\\log(1-p)} $$</p> <p>$$ =&gt; \\frac{n_h}{\\hat{p}}-\\frac{n-n_h}{1-\\hat{p}}=0 $$</p> <p>$$ =&gt; \\hat{p}=\\frac{n_h}{n} $$</p> <ol> <li> <p>\u65e0\u504f\u6027\uff1a\u591a\u6b21\u91cd\u590d\u540e\uff0c\u9891\u7387\u8d8b\u8fd1\u5b9e\u9645\u6982\u7387</p> </li> <li> <p>\u6307\u6570\u5206\u5e03    $$ f_X(x;\\theta)= \\theta e^{-\\theta x},x\\geq 0 $$</p> </li> </ol> <p>$$ \\max\\limits_{\\theta}\\prod\\limits_{i=1}^n \\theta e^{-\\theta x_i}=\\max\\limits_\\theta (n\\log\\theta-\\theta\\sum\\limits_{i=1}^nx_i) $$</p> <p>$$ \\hat{\\theta}_{ML}=\\frac{n}{X_1+\\cdots+X_n}=\\frac{1}{\\overline{X}} $$</p> <ol> <li> <p>\u6b63\u6001\u5206\u5e03\uff1a\\(\\mu = \\overline{x},\\sigma^2=\\frac{1}{n}\\sum\\limits_{i=1}^n(x_i-\\mu)^2\\)</p> </li> <li> <p>\u5747\u5300\u5206\u5e03\uff1a\\(\\hat{\\theta}=x_{(n)}=\\max\\{x_1,x_2,\\cdots,x_n \\}\\)</p> </li> <li> <p>Poisson \u5206\u5e03\uff1a</p> </li> </ol> \\[ P(X=x)=\\frac{\\lambda^xe^{-\\lambda}}{x!} \\] \\[ \\lambda = \\frac{1}{n}\\sum\\limits\\_{j=1}^nx_j \\]"},{"location":"MLDA/review/#lec-4-bayesian-data-analysis","title":"Lec 4 Bayesian Data Analysis","text":"<ol> <li>review\uff1a</li> </ol> <p>$$    P(\\theta| \\mathcal{D})=\\frac{P(\\mathcal{D}|\\theta)P(\\theta)}{P(\\mathcal{D})} \\propto P(\\mathcal{D}|\\theta)P(\\theta)    $$</p> <ol> <li>\u6700\u5927\u540e\u9a8c\u4f30\u8ba1 MAP</li> </ol> \\[ \\theta_{MAP}=\\arg\\max\\limits_{\\theta}p_{model}(x;\\theta)*p(\\theta) \\] \\[ =\\arg\\max\\limits_{\\theta}\\prod\\limits_{i=1}^Np_{model}(x^i;\\theta)*p(\\theta) \\] \\[ =\\arg\\max\\limits_{\\theta}\\sum\\limits_{i=1}^N\\log p_{model}(x^i;\\theta)+\\log p(\\theta) \\]"},{"location":"MLDA/review/#lec-5-testing","title":"Lec 5 Testing","text":"<p>\u6570\u636e\u79d1\u5b66\u5bb6\u9700\u8981\u5e2e\u52a9\u786e\u4fdd\u6570\u636e\u5206\u6790\u7684\u7ed3\u679c\u4e0d\u662f\u9519\u8bef\u7684\u53d1\u73b0\uff0c\u5373\u6ca1\u6709\u610f\u4e49\u6216\u53ef\u91cd\u590d\u6027</p>"},{"location":"MLDA/review/#_1","title":"\u4e24\u4e2a\u5047\u8bbe","text":"<ol> <li>\u6211\u4eec\u60f3\u8981\u53cd\u9a73\u7684\u9648\u8ff0\u79f0\u4e3a\u539f\u5047\u8bbe\u6216\u96f6\u5047\u8bbe(null hypothesis,\\(H_0\\)),\u539f\u5047\u8bbe\u901a\u5e38\u662f\u7ed3\u679c\u4ec5\u7531\u968f\u673a\u53d8\u5316\u5f15\u8d77\u7684\u9648\u8ff0</li> <li>\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\\(R\\)\uff0c\u79f0\u4e3a\u68c0\u9a8c\u7edf\u8ba1\u91cf(test statistic)    - \\(R\\)\u5728\\(H_0\\)\u4e0b\u7684\u5206\u5e03\u79f0\u4e3a null distribution    - \\(R\\)\u7684\u503c\u4ece\u7ed3\u679c\u4e2d\u5f97\u5230\uff0c\u901a\u5e38\u662f\u6570\u5b57</li> </ol>"},{"location":"MLDA/review/#_2","title":"\u663e\u8457\u6027\u68c0\u9a8c","text":"<ul> <li> <p>\u8ba1\u7b97\\(R\\)\u4e3a\u5f53\u524d\u503c\u6216\u66f4\u6781\u7aef\u60c5\u51b5\u7684\u6982\u7387\uff0c\u6b64\u6982\u7387\u88ab\u79f0\u4e3a\u68c0\u9a8c\u7edf\u8ba1\u91cf\u7684p-value</p> </li> <li> <p>\u5982\u679c p \u503c\u8db3\u591f\u5c0f\uff0c\u5219\u8868\u793a\u7ed3\u679c\u5177\u6709\u7edf\u8ba1\u663e\u8457\u6027</p> </li> <li>p \u503c\u7684\u9608\u503c\u88ab\u79f0\u4e3a\u663e\u8457\u6027\u6c34\u5e73(significance level,\\(\\alpha\\))\uff0c\u901a\u5e38\u53d6 0.01 \u6216 0.05</li> <li>\u5982\u679c p \u503c\u4e0d\u591f\u5c0f\uff0c\u6211\u4eec\u8bf4\u6211\u4eec\u65e0\u6cd5\u62d2\u7edd\u539f\u5047\u8bbe</li> <li>\\(p-value = P(R|H_0)\\)</li> </ul>"},{"location":"MLDA/review/#neyman-pearson","title":"Neyman-Pearson \u5047\u8bbe\u68c0\u9a8c","text":"<ul> <li>\u660e\u786e\u6307\u5b9a\u5907\u62e9\u5047\u8bbe(alternative hypothesis) \\(H_1\\)</li> <li>\u663e\u8457\u6027\u68c0\u9a8c\u65e0\u6cd5\u91cf\u5316\u89c2\u5bdf\u5230\u7684\u7ed3\u679c\u5982\u4f55\u652f\u6301 \\(H_1\\)</li> <li>\u5b9a\u4e49\u4e00\u4e2a\u66ff\u4ee3\u5206\u5e03\uff0c\u5373\u5f53\\(H_1\\)\u4e3a\u771f\u65f6\u68c0\u9a8c\u7edf\u8ba1\u91cf\u7684\u5206\u5e03</li> <li>\u6211\u4eec\u4e3a\u68c0\u9a8c\u7edf\u8ba1\u91cf\\(R\\)\u5b9a\u4e49\u4e00\u4e2a\u4e34\u754c\u533a\u57df(critical region)\uff0c\u5982\u679c\\(R\\)\u843d\u5728\u6b64\u533a\u57df\u4e2d\uff0c\u6211\u4eec\u62d2\u7edd\\(H_0\\)\u3002</li> <li>\u82e5\\(H_0\\)\u88ab\u62d2\u7edd\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u63a5\u53d7\\(H_1\\)</li> <li> <p>\u663e\u8457\u6027\u6c34\u5e73\\(\\alpha\\)\u662f\u5728\\(H_0\\)\u4e0b\u4e34\u754c\u533a\u57df\u6982\u7387</p> </li> <li> <p>Type \u2160 Error (\\(\\alpha\\))</p> </li> <li> <p>\u7b49\u4e8e\\(H_0\\)\u4e0b\u4e34\u754c\u533a\u57df\u6982\u7387\uff0c\u5373\u663e\u8457\u6027\u6c34\u5e73</p> </li> <li> <p>\\(\\alpha=P(R\\in Crtical\\ Region | H_0)\\)</p> </li> <li> <p>Type \u2161 Error (\\(\\beta\\))</p> </li> <li> <p>\u5f53\u5907\u62e9\u5047\u8bbe\u4e3a\u771f\u65f6\uff0c\u9519\u8bef\u5730\u5c06\u7ed3\u679c\u79f0\u4e3a\u4e0d\u663e\u8457</p> </li> <li> <p>\\(\\beta=P(R\\notin Critical\\ Region| H_1)\\)</p> </li> <li> <p>Power(\u529f\u6548)\uff1a\u5373 \\(H_1\\) \u4e0b\u4e34\u754c\u533a\u57df\u7684\u6982\u7387\uff0c\u5373 \\(1\u2212\u03b2\\)\u3002</p> </li> <li> <p>Power \u8868\u660e\u4e00\u4e2a\u6d4b\u8bd5\u6b63\u786e\u62d2\u7edd\u539f\u5047\u8bbe\u7684\u6b63\u786e\u6027</p> </li> <li>\u4f4e\u529f\u8017\u610f\u5473\u7740\u8bb8\u591a\u5b9e\u9645\u663e\u793a\u6240\u9700\u6a21\u5f0f\u6216\u73b0\u8c61\u7684\u7ed3\u679c\u5c06\u4e0d\u88ab\u89c6\u4e3a\u91cd\u8981\u7ed3\u679c\uff0c\u56e0\u6b64\u4f1a\u88ab\u9057\u6f0f</li> <li>\u56e0\u6b64\uff0c\u5982\u679c\u6d4b\u8bd5\u7684\u529f\u6548\u8f83\u4f4e\uff0c\u90a3\u4e48\u5ffd\u7565\u4e34\u754c\u533a\u57df\u4e4b\u5916\u7684\u7ed3\u679c\u53ef\u80fd\u4e0d\u5408\u9002\u3002</li> </ul>"},{"location":"MLDA/review/#binary-hypothesis-testing","title":"Binary Hypothesis Testing","text":"<ul> <li>null hypothesis \\(H_0:X~ p_X(x;H_0)\\)</li> <li>alternative hypothesis \\(H_1: X~p_X(x;H_1)\\)</li> </ul> <ul> <li>Type \u2160 Error\uff1a\u9519\u8bef\u7684\u62d2\u7edd\uff0c\u9519\u8bef\u7684\u9884\u8b66 \\(\\alpha(R)=P(X\\in R;H_0)\\)</li> <li>Type \u2161 Error\uff1a\u9519\u8bef\u7684\u63a5\u53d7\uff0c\u9057\u6f0f\uff0c\\(H_0\\) false, but accepted</li> </ul>"},{"location":"MLDA/review/#bayesian-hypothesis-testing","title":"Bayesian Hypothesis Testing","text":"<ul> <li>\\(\\Theta\\)\u5728\\(\\{\\theta_1,\\cdots,\\theta_m \\}\\)m \u4e2a\u503c\u4e2d\u9009\u4e00\u4e2a</li> <li> <p>\\(H_i\\equiv event\\{\\Theta = \\theta_i \\}\\)</p> </li> <li> <p>\u5047\u8bbe\u68c0\u9a8c\uff1a\u7ed9\u5b9a\u89c2\u6d4b\u503c\\(x\\)\uff0c\u4ece\\(H_1\\cdots H_m\\)\u4e2d\u9009\u4e00\u4e2a\u5047\u8bbe</p> </li> <li>MAP Rule\uff1a\u9009\u62e9\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u5047\u8bbe\uff0c\u5373\u9009\u62e9\\(H_i\\)\u82e5\\(P(\\Theta=\\theta_i|X=x)=p_{\\Theta|X}(\\theta_i|x)\\)\u6700\u5927</li> <li>\u5373\\(p_{\\Theta}(\\theta_i)p_{X|\\Theta}(x|\\theta_i)\\)(\\(X\\)\u79bb\u6563)\u6216\\(p_{\\Theta}(\\theta_i)f_{X|\\Theta}(x|\\theta_i)\\)(\\(X\\)\u8fde\u7eed)\u6700\u5927</li> </ul>"},{"location":"MLDA/review/#likelihood-ratio-test-lrt","title":"Likelihood Ratio Test (LRT)","text":"<ul> <li>\u9009\u62e9\\(H_1\\)\u82e5</li> </ul> \\[ L(x)=\\frac{P(X=x;H_1)}{P(X=x;H_0)}&gt;\\xi \\ (discrete\\ case) \\] \\[ L(x)=\\frac{f_X(x;H_1)}{f_X(x;H_0)}&gt;\\xi \\ (continuous\\ case) \\] <ul> <li>\u9608\u503c\\(\\xi\\) \u6743\u8861\u4e24\u79cd\u9519\u8bef\uff0c\u9009\u62e9\\(\\xi\\)\u4f7f\u5f97\\(P(reject\\ H_0;H_0)=\\alpha\\)</li> </ul> <p>Example</p> <p></p> <p></p> <ul> <li>Summary</li> <li>Start with a target value a for the false rejection probability</li> <li>\u9009\u62e9\\(\\xi\\)\uff0c\u4f7f\u5f97\\(P(L(X)&gt;\\xi;H_0)=\\alpha\\)</li> <li>\u62d2\u7edd\\(H_0\\)\uff0c\u82e5\\(L(x)&gt;\\xi\\)</li> </ul> <p>Example</p> <p></p>"},{"location":"MLDA/review/#multiple-hypothesis-testing","title":"Multiple Hypothesis Testing","text":"<ul> <li> <p>We assume the results fall into two classes, <code>+</code> and <code>-</code>, which, follow the alternative and null hypotheses, respectively</p> </li> <li> <p>\u91cd\u70b9\u901a\u5e38\u653e\u5728\u8bef\u62a5 \uff08FP\uff09 \u7684\u6570\u91cf\u4e0a\uff0c\u5373\u5c5e\u4e8e null \u5206\u5e03 (<code>-</code> \u7c7b) \u4f46\u58f0\u660e\u4e3a\u663e\u8457\u6027 (<code>+</code> \u7c7b)\u7684\u7ed3\u679c\u3002</p> </li> </ul>"},{"location":"MLDA/review/#family-wise-error-rate","title":"Family-wise Error Rate","text":"<ul> <li>\\(FWER = P(FP &gt; 0)\\)</li> <li>\u5047\u8bbe\u663e\u8457\u6027\u6c34\u5e73\u662f 0.05</li> <li>\u5219\u4e00\u6b21\u6d4b\u8bd5\u6ca1\u6709\u9519\u8bef\u7684\u6982\u7387\u662f 1-0.05=0.95</li> <li>m \u6b21\u6d4b\u8bd5\u6ca1\u6709\u9519\u8bef\u662f\\(0.95^m\\)</li> <li>\u5219\\(FWER=P(FP&gt;0)=1-0.95^m\\)</li> <li>\u82e5\\(m=10,FWER=0.60\\)</li> </ul>"},{"location":"MLDA/review/#bonferroni-procedure","title":"Bonferroni Procedure","text":"<ul> <li> <p>FWER \u7684\u76ee\u6807\u662f\u786e\u4fdd\\(FWER&lt;\\alpha\\)\uff0c\u5176\u4e2d\\(\\alpha\\)\u901a\u5e38\u53d6 0.05</p> </li> <li> <p>Bonferroni Procedure</p> </li> <li> <p>\\(m\\) results are to be tested</p> </li> <li>Require \\(FWER &lt; \u03b1\\)</li> <li>set the significance level, \\(\\alpha^*\\) for every test to be \\(\\alpha^*=\\alpha/m\\)</li> <li> <p>If \\(m = 10\\) and \\(\\alpha= 0.05\\) then \\(\\alpha^* = 0.05/10=0.005\\)</p> </li> <li> <p>Example: Bonferroni versus Na\u00efve approach</p> </li> <li> <p>\u6734\u7d20\u7684\u65b9\u6cd5\u662f\u5728\u4e0d\u8c03\u6574\u663e\u8457\u6027\u6c34\u5e73\u7684\u60c5\u51b5\u4e0b\u8bc4\u4f30\u6bcf\u4e2a\u7ed3\u679c\u7684\u7edf\u8ba1\u663e\u8457\u6027\u3002</p> </li> </ul>"},{"location":"MLDA/review/#lec-6-unsupervised-learning","title":"Lec 6 Unsupervised Learning","text":""},{"location":"MLDA/review/#background","title":"Background","text":""},{"location":"MLDA/review/#_3","title":"\u5173\u4e8e\u76f8\u4f3c\u6027","text":"<p>\u76f8\u4f3c\u6027\u7684\u771f\u6b63\u542b\u4e49\u662f\u4e00\u4e2a\u54f2\u5b66\u95ee\u9898\u3002\u6211\u4eec\u5c06\u91c7\u53d6\u4e00\u79cd\u66f4\u52a1\u5b9e\u7684\u65b9\u6cd5\u2014\u2014\u4ece\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u800c\u4e0d\u662f\u76f8\u4f3c\u6027\uff09\u6216\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u7684\u89d2\u5ea6\u6765\u601d\u8003\u3002</p>"},{"location":"MLDA/review/#_4","title":"\u8ddd\u79bb\u6307\u6807","text":"<p>given \\(x=(x_1,x_2,\\cdots,x_p), y=(y_1,y_2,\\cdots,y_p)\\)</p> <p>Euclidean \u8ddd\u79bb: \\(d(x,y)=\\sqrt{\\sum\\limits_{i=1}^p|x_i-y_i|^2}\\)</p> <p>Manhattan \u8ddd\u79bb: \\(d(x,y)=\\sum\\limits_{i=1}^p|x_i-y_i|\\)</p> <p>Sup-distance: \\(d(x,y)=\\max\\limits_{1\\leq i\\leq p}|x_i-y_i|\\)</p> <p>Pearson \u76f8\u5173\u7cfb\u6570:</p> \\[ \\rho(x,y)=\\frac{\\sum\\limits_{i=1}^p(x_i-\\overline{x})(y_i-\\overline{y})}{\\sqrt{\\sum\\limits_{i=1}^p(x_i-\\overline{x})^2\\times\\sum\\limits_{i=1}^p(y_i-\\overline{y})^2}} \\]"},{"location":"MLDA/review/#clustering-algorithms","title":"Clustering Algorithms","text":""},{"location":"MLDA/review/#hierarchical-algorithms","title":"Hierarchical algorithms \u5206\u5c42","text":"<ul> <li>single-linkage</li> <li>average-linkage</li> <li>complete-linkage</li> <li>centroid-based</li> </ul> <ul> <li>Bottom-Up Agglomerative Clustering</li> <li>Starts with each object in a separate cluster, and repeat:<ul> <li>Joins the most similar pair of clusters,</li> <li>Update the similarity of the new cluster to others until there is only one cluster.</li> </ul> </li> <li>Greedy \u2013 less accurate but simple to implement</li> <li> <p>Top-Down divisive</p> </li> <li> <p>Starts with all the data in a single cluster, and repeat:</p> <ul> <li>Split each cluster into two using a partition algorithm until each object is a separate cluster.</li> </ul> </li> <li> <p>More accurate but complex to implement</p> </li> <li> <p>\u5bf9\u4e8e Agglomerative Clustering\uff1abasic \u7b97\u6cd5\u76f4\u63a5\u660e\u4e86</p> </li> </ul> <ul> <li>\u5173\u952e\u5728\u4e8e\u8ba1\u7b97\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u7684\u90bb\u8fd1\u77e9\u9635</li> </ul>"},{"location":"MLDA/review/#cluster-similarity","title":"Cluster Similarity","text":"<ul> <li>MIN(single link): \u4e24\u4e2a\u805a\u7c7b\u7684\u76f8\u4f3c\u6027\u57fa\u4e8e\u4e0d\u540c\u805a\u7c7b\u4e2d\u4e24\u4e2a\u6700\u76f8\u4f3c\uff08\u6700\u63a5\u8fd1\uff09\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u7531\u4e00\u5bf9\u70b9\u51b3\u5b9a</li> <li>\u4f18\u52bf\uff1a\u53ef\u4ee5\u5904\u7406\u975e\u692d\u5706\u5f62(non-eliptical shapes)\uff0c\u5bf9\u566a\u58f0\u548c\u5f02\u5e38\u503c\u654f\u611f</li> <li>MAX(complete link): \u4e24\u4e2a\u805a\u7c7b\u7684\u76f8\u4f3c\u6027\u57fa\u4e8e\u4e0d\u540c\u805a\u7c7b\u4e2d\u4e24\u4e2a\u6700\u4e0d\u76f8\u4f3c\uff08\u6700\u8fdc\uff09\u7684\u70b9\uff0c\u7531\u4e24\u4e2a\u805a\u7c7b\u4e2d\u7684\u6240\u6709\u70b9\u5bf9\u786e\u5b9a</li> <li>\u4f18\u52bf\uff1a\u4e0d\u6613\u53d7\u5230\u566a\u70b9\u548c\u5f02\u5e38\u503c\u7684\u5f71\u54cd</li> <li>\u5c40\u9650\u6027\uff1a\u503e\u5411\u4e8e break \u5927\u578b\u805a\u7c7b</li> </ul> <ul> <li>Group Average: \u4e24\u4e2a\u805a\u7c7b\u7684\u90bb\u8fd1\u6027\u662f\u4e24\u4e2a\u805a\u7c7b\u4e2d\u70b9\u4e4b\u95f4\u6210\u5bf9\u63a5\u8fd1\u7684\u5e73\u5747\u503c\u3002</li> </ul> \\[ proximity(Cluster_i,Cluster_j)=\\frac{\\sum\\limits_{p_i\\in Cluster_i,p_j\\in Cluster_j}proximity(p_i,p_j)}{|Cluster_i|\\times|Cluster_j|} \\] <ul> <li>\u9700\u8981\u4f7f\u7528\u5e73\u5747\u8fde\u63a5\u6765\u5b9e\u73b0\u53ef\u6269\u5c55\u6027\uff0c\u56e0\u4e3a\u603b\u90bb\u8fd1\u6027\u6709\u5229\u4e8e\u5927\u578b\u96c6\u7fa4</li> <li> <p>single link \u548c complete link \u4e4b\u95f4\u7684\u6298\u4e2d</p> </li> <li> <p>Single vs. Complete Linkage</p> </li> <li>single-linkage:\u5141\u8bb8\u5404\u5411\u5f02\u6027\u548c\u975e\u51f8\u5f62</li> <li>complete-linkage:\u5047\u5b9a\u5404\u5411\u540c\u6027\u51f8\u5f62</li> </ul>"},{"location":"MLDA/review/#_5","title":"\u8ba1\u7b97\u590d\u6742\u5ea6","text":"<ul> <li> <p>All hierarchical clustering methods need to compute similarity of all pairs of \\(n\\) individual instances which is \\(O(n^2)\\)</p> </li> <li> <p>At each iteration,</p> </li> <li>Find largest of the set of similarities \\(O(n^2)\\)</li> <li>Update similarity between merged cluster and other clusters \\(O(n)\\)</li> <li>Maximum no. of iterations \\(O(n)\\)</li> <li>So we get time complexity of \\(O(n^3)\\)</li> <li>could be reduced with more complicated data structures such as heaps which however come with greater storage complexity</li> </ul>"},{"location":"MLDA/review/#partitioning-algorithms","title":"Partitioning Algorithms","text":"<ul> <li>Given: a set of \\(n\\) objects and number \\(K\\), construct a partition of \\(n\\) objects into a set of \\(K\\) clusters</li> </ul>"},{"location":"MLDA/review/#k-means","title":"K-Means","text":"<ul> <li>\u6bcf\u4e2a\u805a\u7c7b\u90fd\u4e0e\u4e00\u4e2a\u8d28\u5fc3\uff08\u4e2d\u5fc3\u70b9\uff09\u76f8\u5173\u8054</li> <li>\u6bcf\u4e2a\u70b9\u90fd\u5206\u914d\u7ed9\u5177\u6709\u6700\u63a5\u8fd1\u8d28\u5fc3\u7684\u805a\u7c7b</li> </ul>"},{"location":"MLDA/review/#_6","title":"\u8ba1\u7b97\u590d\u6742\u5ea6","text":"<ul> <li>At each iteration,</li> <li>Computing distance between each of the \\(n\\) objects and the \\(K\\) cluster centers is \\(O(Kn)\\).</li> <li>Computing cluster centers: Each object gets added once to some cluster: \\(O(n)\\).</li> <li>Assume these two steps are each done once for l iterations: \\(O(lKn)\\).</li> </ul>"},{"location":"MLDA/review/#seed-choice","title":"Seed Choice","text":"<ul> <li>\u805a\u7c7b\u7ed3\u679c\u5bf9\u521d\u59cb\u79cd\u5b50\u9009\u62e9\u5f88\u654f\u611f</li> <li>\u4e00\u4e9b\u79cd\u5b50\u53ef\u80fd\u5bfc\u81f4\u6536\u655b\u7387\u5dee\uff0c\u6216\u6536\u655b\u5230\u6b21\u4f18\u805a\u7c7b</li> <li>\u4f7f\u7528\u542f\u53d1\u5f0f\u65b9\u6cd5\u9009\u62e9\u597d\u7684\u79cd\u5b50\uff08\u4f8b\u5982\uff0c\u4e0e\u4efb\u4f55\u73b0\u6709\u5747\u503c\u6700\u4e0d\u76f8\u4f3c\u7684\u5bf9\u8c61\uff09</li> <li>k-means ++ algorithm of Arthur and Vassilvitskii</li> <li>key idea: \u9009\u62e9\u76f8\u8ddd\u8f83\u8fdc\u7684\u4e2d\u5fc3</li> <li>\u9009\u62e9\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\u7684\u6982\u7387\u4e0e\u5230\u76ee\u524d\u4e3a\u6b62\u9009\u62e9\u7684\u4e0e\u6700\u8fd1\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6210\u6b63\u6bd4</li> <li>\u5c1d\u8bd5\u591a\u4e2a\u8d77\u70b9\u975e\u5e38\u91cd\u8981</li> <li>\u4f7f\u7528\u5176\u4ed6\u65b9\u6cd5\u7684\u7ed3\u679c\u8fdb\u884c\u521d\u59cb\u5316</li> </ul>"},{"location":"MLDA/review/#other-issues","title":"Other Issues","text":"<ul> <li>\u7c07\u7684\u5f62\u72b6\uff1a\u5047\u8bbe\u5404\u5411\u540c\u6027\u3001\u7b49\u65b9\u5dee\u3001\u51f8\u805a\u7c7b</li> <li>\u5bf9\u5f02\u5e38\u503c\u654f\u611f \uff1a\u4f7f\u7528 K-medoids</li> <li>\u805a\u7c7b\u6570\u76ee</li> <li>\u76ee\u6807\u51fd\u6570: \\(\\sum\\limits_{j=1}^m ||\\mu_C(j)-x_j||^2\\)</li> <li>\u627e\u76ee\u6807\u51fd\u6570\u4e2d\u7684 knee</li> </ul>"},{"location":"MLDA/review/#lec-71-unsupervised-learning-contd","title":"Lec 7.1 Unsupervised Learning Contd.","text":""},{"location":"MLDA/review/#graph-based-clustering","title":"Graph-based Clustering","text":"<p>Graph-Based clustering uses the proximity graph</p> <p>Problem: too many edges</p>"},{"location":"MLDA/review/#sparsification","title":"Sparsification(\u7a00\u758f\u5316)","text":"<ul> <li> <p>\u6570\u636e\u91cf\u9700\u8981\u88ab\u5927\u91cf\u51cf\u5c11</p> </li> <li> <p>\u7a00\u758f\u5316\u53ef\u4ee5\u53bb\u90bb\u63a5\u77e9\u9635\u4e2d 99%\u4ee5\u4e0a\u7684\u6761\u76ee</p> </li> <li>\u8017\u65f6\u51cf\u5c11\u4e86</li> <li> <p>\u53ef\u5904\u7406\u95ee\u9898\u89c4\u6a21\u4e0a\u5347\u4e86</p> </li> <li> <p>\u7a00\u758f\u5316\u540e\u805a\u7c7b\u6548\u679c\u53ef\u80fd\u66f4\u597d</p> </li> <li>\u7a00\u758f\u5316\u4f7f\u5f97\u70b9\u4e0e\u5176\u6700\u8fd1\u4f3c\u70b9\u4fdd\u6301\u8fde\u63a5\u800c\u65ad\u5f00\u548c\u5176\u4ed6 less similar \u70b9\u7684\u8fde\u63a5</li> <li>The nearest neighbors of a point tend to belong to the same class as the point itself.</li> <li>\u964d\u4f4e\u4e86\u566a\u58f0\u548c\u5f02\u5e38\u503c\u7684\u5f71\u54cd</li> </ul>"},{"location":"MLDA/review/#snn-clustering","title":"SNN Clustering","text":"<ol> <li>\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u77e9\u9635\uff1a\u8fd9\u5bf9\u5e94\u4e8e\u5177\u6709\u8282\u70b9\u548c\u8fb9\u7684\u6570\u636e\u70b9\u7684\u76f8\u4f3c\u6027\u56fe\uff0c\u5176\u6743\u91cd\u662f\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027</li> <li>\u901a\u8fc7\u4ec5\u4fdd\u7559 k \u4e2a\u6700\u76f8\u4f3c\u7684\u90bb\u5c45\u6765\u7a00\u758f\u5316\u76f8\u4f3c\u5ea6\u77e9\u9635 \u8fd9\u76f8\u5f53\u4e8e\u53ea\u4fdd\u7559\u76f8\u4f3c\u6027\u56fe\u7684 k \u4e2a\u6700\u5f3a\u94fe\u63a5</li> <li>Construct the shared nearest neighbor graph from the sparsified similarity matrix.</li> </ol> <ul> <li>\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5e94\u7528\u76f8\u4f3c\u6027\u9608\u503c\u5e76\u627e\u5230 connected components \u6765\u83b7\u5f97\u805a\u7c7b</li> </ul> <ol> <li>\u6c42\u6bcf\u4e2a\u70b9\u7684 SNN \u5bc6\u5ea6    - \u4f7f\u7528\u7528\u6237\u6307\u5b9a\u7684\u53c2\u6570 Eps \u67e5\u627e\u4e0e\u6bcf\u4e2a\u70b9\u7684 SNN \u76f8\u4f3c\u5ea6\u4e3a Eps \u6216\u66f4\u5927\u7684\u6570\u70b9\u3002\u8fd9\u662f\u8be5\u70b9\u7684 SNN \u5bc6\u5ea6</li> </ol>"},{"location":"MLDA/review/#lec-72-anomaly-detection","title":"Lec 7.2 Anomaly Detection \u5f02\u5e38\u68c0\u6d4b","text":"<ul> <li>Chanllenges</li> <li>\u5f02\u5e38\u503c\u6570\u91cf</li> <li>\u65b9\u6cd5\u662f\u65e0\u76d1\u7763\u7684\uff0cvalidation \u5c06\u4f1a\u5f88\u56f0\u96be</li> <li>Finding needle in a haystack</li> <li>Working assumption: \u6b63\u5e38\u503c\u6bd4\u5f02\u5e38\u503c\u591a</li> </ul>"},{"location":"MLDA/review/#general-steps","title":"General Steps","text":"<ul> <li>Build a profile of the normal behavior</li> <li>Profile can be patterns or summary statistics for the overall population</li> <li>Use the normal profile to detect anomalies</li> <li>Anomalies are observations whose characteristics differ significantly from the normal profile</li> </ul>"},{"location":"MLDA/review/#distance-based-approaches","title":"Distance-based Approaches","text":"<ul> <li>\u6570\u636e\u7528\u7279\u5f81\u5411\u91cf\u8868\u793a</li> <li>\u4e09\u4e2a\u4e3b\u8981\u65b9\u6cd5\uff1aNearest-neighbor based, density based, clustering based</li> </ul>"},{"location":"MLDA/review/#nearest-neighbor-based-approach","title":"Nearest-Neighbor Based Approach","text":"<p>define \u5f02\u5e38\u503c\u65b9\u6cd5\uff1a</p> <ul> <li>\u8ddd\u79bb\\(D\\)\u5185\u5c11\u4e8e\\(p\\)\u4e2a\u70b9</li> <li>\u5230\u7b2c\\(k\\)\u4e2a\u6700\u8fd1\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u7684\u524d\\(n\\)\u4e2a\u70b9</li> <li>\u4e0e\u524d\\(k\\)\u4e2a\u6700\u8fd1\u70b9\u8ddd\u79bb\u7684\u5e73\u5747\u503c\u6700\u5927\u7684\u524d\\(n\\)\u4e2a\u70b9</li> </ul>"},{"location":"MLDA/review/#clustering-based","title":"Clustering-Based","text":"<ul> <li>Basic idea:</li> <li>Cluster the data into groups of different density</li> <li>Choose points in small cluster as candidate outliers</li> <li>Compute the distance between candidate points and non-candidate clusters.<ul> <li>If candidate points are far from all other non-candidate points, they are outliers</li> </ul> </li> </ul>"},{"location":"MLDA/review/#lec-73-svdpca-symbols-to-meaning","title":"Lec 7.3 SVD/PCA, Symbols to Meaning","text":""},{"location":"MLDA/review/#symbols-to-meaning","title":"Symbols to Meaning","text":"<p>An important goal in AI is to go from these low-level features/symbols, which we observe, to meaning, which we do not see/observe</p> <ul> <li>\u6211\u4eec\u89c2\u5bdf\u5230\u7684\uff1a\u6784\u6210\u6570\u636e\u7684\u201c\u539f\u59cb\u201d\u7279\u5f81\u548c\u7b26\u53f7\uff08\u4f8b\u5982\u6587\u672c\u6587\u6863\u4e2d\u7684\u5355\u8bcd\uff09</li> <li>\u6211\u4eec\u6240\u8bf4\u7684\u201c\u610f\u4e49\u201d\u662f\u6307\u539f\u59cb\u7279\u5f81\u80cc\u540e\u7684\u6982\u5ff5</li> <li>\u8fd9\u4e9b\u6982\u5ff5\u53ef\u4ee5\u7528\u6765\u201c\u89e3\u91ca\u201d\u6570\u636e\uff08\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5728\u5b57\u5178\u91cc\u770b\uff0c\u4efb\u4f55\u5355\u8bcd\u7684\u542b\u4e49\u90fd\u662f\u7528\u6982\u5ff5\u6765\u89e3\u91ca\u7684\uff09</li> <li>\u8fd9\u4e9b\u6982\u5ff5\u4ece\u672a\u88ab\u76f4\u63a5\u89c2\u5bdf\u5230</li> </ul>"},{"location":"MLDA/review/#document-data","title":"Document Data","text":"<ul> <li> <p>\u5bf9\u4e00\u7ec4\u6587\u6863\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6536\u96c6\u4e3a\u5982\u56fe\u6240\u793a\u7684\u6570\u636e\u77e9\u9635\uff0c\u5176\u4e2d\u884c\u8868\u793a words(features), \u5217\u8868\u793a documents(samples)</p> </li> <li> <p>\\(A_{ji}=t_{ji}\\times g_j\\times s_i\\)</p> </li> <li>\\(t_{ji}\\): word \\(j\\) \u5728\u6587\u6863 \\(i\\) \u4e2d\u51fa\u73b0\u6b21\u6570</li> <li>\\(g_j\\): \u5728\u6574\u4e2a\u6587\u6863\u96c6\u5408\u4e2d word \\(j\\) \u7684\u91cd\u8981\u6027<ul> <li>\u4f8b\u5982\uff1a \\(\\log\\frac{d}{d_j}\\)\uff0c \\(d_j\\)\u662f\u51fa\u73b0 word \\(j\\) \u7684\u6587\u6863\u6570\u91cf</li> </ul> </li> <li>\\(s_i\\): \u7528\u4e8e\u5f52\u4e00\u5316\uff0c\\(s_i=\\frac{1}{\\sqrt{\\sum_{j=1}^w(t_{ji}g_j)^2}}\\)</li> <li>\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0cA \u7684\u5217\u88ab\u5f52\u4e00\u5316\u4e86\uff0c\u4e5f\u5c31\u662f\\(||a_i||_2=1\\)</li> </ul>"},{"location":"MLDA/review/#which-document-is-most-similar","title":"Which document is most similar?","text":"<ul> <li>\\(q\\) \u8868\u793a query</li> <li>\u5982\u679c\u4e00\u4e2a\u6587\u6863\u4e0d\u5305\u542b\u8981\u627e\u7684\u5355\u8bcd\uff0c\u76f8\u4f3c\u5ea6\u5c31\u662f 0</li> </ul>"},{"location":"MLDA/review/#syntax","title":"\u4ec5\u4f7f\u7528 syntax \u7684\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>computational\uff1a\u5373\u4f7f\u5bf9\u7279\u5f81\u8fdb\u884c\u526a\u679d\u540e\uff0c\u5355\u8bcd\u6570\u91cf\u4e5f\u4f1a\u662f\u6570\u4e07\u7ea7\u522b</li> <li> <p>Not as intelligent</p> </li> <li> <p>\u4e0d\u80fd\u5224\u65ad\u540c\u4e49\u8bcd\uff0ce.g. searching for MRI would miss \u201cMagnetic Resonance Imaging\u201d</p> </li> <li> <p>\u4e0d\u80fd\u5224\u65ad\u591a\u4e49\u8bcd\uff0ce.g. \u201cmining\u201d could refer to \u201cdata mining\u201d or \u201ccoal mining\u201d</p> </li> <li> <p>\u4e3a\u4e86\u63d0\u53d6\u6587\u6863\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6f5c\u5728\u8bed\u4e49\u5206\u6790 Latent Semantic Analysis (LSA)</p> </li> </ul>"},{"location":"MLDA/review/#latent-semantic-analysis","title":"Latent Semantic Analysis","text":""},{"location":"MLDA/review/#pca","title":"PCA","text":"<ol> <li>SVD \u5947\u5f02\u503c\u5206\u89e3</li> </ol> <ol> <li>PCA\uff1ause only the top k columns of U and V</li> </ol>"},{"location":"MLDA/review/#lsa","title":"LSA","text":"<ul> <li>Obtain PCA approximation of document data matrix</li> <li>Use principal components as \u201cconcepts\u201d</li> <li>Many singular vectors i.e. concepts are required to approximate document data matrix well (k ~ 1000)</li> <li>Does not work well to capture concepts from short documents e.g. queries (and hence no search   engine uses this)</li> </ul>"},{"location":"MLDA/review/#beyond-lsa","title":"Beyond LSA","text":"<p>\u975e\u8d1f\u77e9\u9635\u5206\u89e3 \uff08NMF\uff09\uff1a\u5c06\u6743\u91cd\u7ea6\u675f\u4e3a\u975e\u8d1f</p> <ul> <li>\u5047\u8bbe\u6211\u4eec\u7ea6\u675f\uff1a</li> <li>\u6982\u5ff5\u662f\u5355\u8bcd\u7684\uff08\u591a\u9879\u5f0f\uff09\u5206\u5e03</li> <li>\u6587\u6863\u662f\u6982\u5ff5\u7684\uff08\u591a\u9879\u5f0f\uff09\u5206\u5e03</li> <li>Probabilistic latent semantic analysis<ul> <li>Latent Dirichlet Allocation (LDA) (Blei et al, 2003); also known as a \u201ctopic model\u201d very closely related</li> </ul> </li> </ul>"},{"location":"MLDA/review/#lec-8-supervised-learning","title":"Lec 8 Supervised Learning","text":""},{"location":"MLDA/review/#optimal-classification","title":"Optimal Classification","text":"<ul> <li>\u8d1d\u53f6\u65af\u5206\u7c7b\u5668: \\(f^*=\\arg\\min\\limits_f P(f(X)\\neq Y)\\)</li> </ul> <ul> <li>Even the optimal classifier makes mistakes</li> <li>\u6700\u4f73\u5206\u7c7b\u5668\u53d6\u51b3\u4e8e\u672a\u77e5\u5206\u5e03</li> </ul> \\[ f^*(x)=\\arg\\max\\limits_{Y=y}P(Y=y|X=x) \\\\ =\\arg\\max\\limits_{Y=y}P(X=x|Y=y)P(Y=y) \\] <ul> <li>\u5bf9\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u82e5\u5404\u7c7b\u4e4b\u95f4\u72ec\u7acb \\(P(X_1\\dots X_d|Y)=\\prod\\limits_{i=1}^d P(X_i|Y)\\)</li> </ul> <p>\u5219 \\(f_{NB}(x)=\\arg\\max\\limits_y P(x_1,\\dots,x_d|y)P(y)=\\arg\\max\\limits_y\\prod\\limits_{i=1}^d P(x_i|y)P(y)\\)</p> <ul> <li> <p>\u6709\u6761\u4ef6\u7684\u72ec\u7acb\u6027</p> </li> <li> <p>X is conditionally independent of Y given Z:     probability distribution governing X is independent of the value of Y, given the value of Z</p> \\[(\\forall x,y,z)P(X=x|Y=y,Z=z)=P(X=x|Z=z)\\] <p>\u5373\\(P(X,Y|Z)=P(X|Z)P(Y|Z)\\)</p> </li> </ul>"},{"location":"MLDA/review/#logistic-regression","title":"Logistic Regression","text":"\\[P(Y=1|X)=\\frac{1}{1+\\exp(w_0+\\sum_i w_iX_I)}\\] <p>\u7ebf\u6027\u5206\u7c7b\u5668</p>"},{"location":"MLDA/review/#lec-9-supervised-learning-ii","title":"Lec 9 Supervised Learning II","text":"<p>TODO</p>"},{"location":"MLDA/review/#lec-10-supervised-learning-iii","title":"Lec 10 Supervised Learning III","text":""},{"location":"MLDA/review/#classification","title":"Classification","text":""},{"location":"MLDA/review/#decision-tree","title":"Decision Tree","text":""},{"location":"MLDA/review/#hunts-algorithm","title":"Hunt's Algorithm","text":"<p>\\(D_t\\)\u4e3a\u8bad\u7ec3\u8bb0\u5f55\u96c6\u5408\uff0c\\(t\\)\u4e3a\u8282\u70b9</p> <ul> <li>\\(D_t\\)\u6240\u6709\u8bb0\u5f55\u5c5e\u4e8e\u7c7b\\(y_t\\)\uff0ct \u4e3a\u53f6\u8282\u70b9\uff0c\u7c7b\u578b\u5373\u4e3a\\(y_t\\)</li> <li>\\(D_t\\)\u4e3a\u7a7a\uff0ct \u7c7b\u578b\u4e3a\u9ed8\u8ba4\u7c7b\u578b\\(y_d\\)(default)</li> <li>\\(D_t\\)\u4e2d\u7684\u8bb0\u5f55\u5c5e\u4e8e\u4e0d\u6b62\u4e00\u7c7b\uff0c\u5219\u4f7f\u7528 attribute test \u5c06\u6570\u636e\u5206\u6210\u66f4\u5c0f\u7684\u5b50\u96c6</li> </ul> <p>\u9012\u5f52\u8c03\u7528\u4ee5\u4e0a\u8fc7\u7a0b</p>"},{"location":"MLDA/review/#test-condition","title":"test condition","text":"<ul> <li> <p>Greedy strategy: split the record based on an attribute test that optimizes certain criterion</p> </li> <li> <p>How to specify test condition</p> </li> <li> <p>depends on attribute types: nominal, ordinal, continuous</p> </li> <li> <p>depends on number of ways to split:</p> <ul> <li>2-way split: divides values into two subsets, need to find optimal partitioning</li> <li>multi-way split: use as many partitions as distinct values</li> </ul> </li> <li> <p>For continuous attributes</p> </li> <li> <p>Binary decision: \\(A&lt;v\\) or \\(A\\geq v\\)</p> </li> <li> <p>How to determine best split</p> </li> <li> <p>Greedy: \u4f18\u5148\u8003\u8651\u5177\u6709\u5747\u5300\u7c7b\u5206\u5e03\u7684\u8282\u70b9</p> </li> <li>node impurity:</li> </ul> <p></p> <ul> <li>\\(GINI(t)=1-\\sum\\limits_j[p(j|t)]^2\\)\uff0c\u5176\u4e2d\\(p(j|t)\\)\u662f\u8282\u70b9 t \u5904\u7c7b j \u7684\u76f8\u5bf9\u9891\u7387<ul> <li>\u6700\u5927\u503c\u4e3a\\(1-1/n_c\\)\u5f53\u6240\u6709\u8bb0\u5f55\u5747\u5300\u5206\u5e03\u65f6\u53d6\u5230</li> <li>\u6700\u5c0f\u503c\u4e3a 0\uff0c\u5f53\u6240\u6709\u8bb0\u5f55\u90fd\u5c5e\u4e8e\u540c\u4e00\u7c7b</li> <li>\u5206\u88c2\u6210 k \u4e2a\u90e8\u5206\u65f6\uff0c\\(GINI_{split}=\\sum\\limits_{i=1}^k\\frac{n_i}{n}GINI(i)\\)</li> </ul> </li> <li>\\(Entropy(t)=-\\sum\\limits_jp(j|t)\\log p(j|t)\\)<ul> <li>\u7c7b\u4f3c\u6700\u5927\u503c\\(\\log n_c\\)\u5747\u5300\u5206\u5e03\u53d6\u5230\uff0c\u6700\u5c0f\u503c 0 \u540c\u4e00\u7c7b\u53d6\u5230</li> <li>\u4fe1\u606f\u589e\u76ca: \\(GAIN_{split}=Entropy(p)-(\\sum\\limits_{i=1}^k\\frac{n_i}{n}Entropy(i))\\)</li> <li>\u66f4\u8fdb\u4e00\u6b65\uff0c\\(GainRATIO_{split}=\\frac{GAIN_{split}}{SplitINFO}\\)\uff0c\u5176\u4e2d\\(SplitINFO=-\\sum\\limits_{i=1}^k\\frac{n_i}{n}\\log \\frac{n_i}{n}\\)</li> </ul> </li> <li>Classification error: \\(Error(t)=1-\\max\\limits_i P(i|t)\\)<ul> <li>\u6700\u5927\u503c\u4e3a\\(1-1/n_c\\)\u5f53\u6240\u6709\u8bb0\u5f55\u5747\u5300\u5206\u5e03\u65f6\u53d6\u5230</li> <li>\u6700\u5c0f\u503c\u4e3a 0\uff0c\u5f53\u6240\u6709\u8bb0\u5f55\u90fd\u5c5e\u4e8e\u540c\u4e00\u7c7b</li> </ul> </li> </ul>"},{"location":"MLDA/review/#stopping-criteria-for-tree-induction","title":"Stopping Criteria for Tree Induction","text":"<ul> <li>\u5f53\u6240\u6709\u8bb0\u5f55\u90fd\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7c7b\u65f6\u505c\u6b62\u5c55\u5f00\u8282\u70b9</li> <li>\u5f53\u6240\u6709\u8bb0\u5f55\u5177\u6709\u76f8\u4f3c\u7684\u5c5e\u6027\u503c\u65f6\u505c\u6b62\u5c55\u5f00\u8282\u70b9</li> <li>\u63d0\u524d\u7ec8\u6b62</li> </ul>"},{"location":"MLDA/review/#decision-tree-based-classification","title":"Decision Tree Based Classification","text":"<ul> <li>Advantages</li> <li>\u6784\u5efa\u6210\u672c\u4f4e</li> <li>\u5206\u7c7b\u672a\u77e5\u6570\u636e\u901f\u5ea6\u5feb</li> <li>\u6613\u4e8e\u5bf9\u5c0f\u89c4\u6a21\u6811\u8fdb\u884c\u89e3\u91ca</li> <li>\u5bf9\u8bb8\u591a\u7b80\u5355\u6570\u636e\u96c6\uff0c\u51c6\u786e\u7387\u53ef\u4ee5\u4e0e\u5176\u4ed6\u5206\u7c7b\u65b9\u5f0f\u76f8\u5f53</li> </ul>"},{"location":"OS/","title":"\u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5","text":"<p>Abstract</p> <ul> <li>2024fall</li> <li>Teacher: \u7533\u6587\u535a</li> <li>\u4ec5\u81ea\u5b58\uff0c\u5927\u91cf\u53c2\u8003\u81ea HobbitQia\uff0c\u5f3a\u70c8\u63a8\u8350\u8f6c\u81f3\u5bf9\u5e94\u94fe\u63a5\u9605\u8bfb</li> </ul>"},{"location":"OS/os0/","title":"Introduction","text":"<p>overall \u671f\u672b</p> <ul> <li>40 x 1.5 \u9009\u62e9</li> <li>5 x 2 \u586b\u7a7a</li> <li>3-4 \u5927\u9898 memory(hard), synchronization, scheduling</li> </ul> <ol> <li>multi-programming, time-sharing</li> <li>OS events: interrupts and exceptions</li> <li>Timer: modifying the timer is done via privileged instructions</li> <li>Released the first Linux prototypes in late 1991</li> </ol>"},{"location":"OS/os0/#main-os-services","title":"Main OS Services","text":"<ol> <li>Process Management    - a process is a program in execution</li> <li>Memory Management    - keep track of memory use</li> <li>Storage Management    - operate file-system management</li> <li>I/O Management    - device-driver interface</li> <li>Protection and Security    - \u63a7\u5236\u8fdb\u7a0b\u5bf9\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\u7684\u8d44\u6e90\u7684\u8bbf\u95ee\u7684\u673a\u5236    - \u9632\u5fa1\u7cfb\u7edf\u7684\u5185\u90e8\u548c\u5916\u90e8\u653b\u51fb</li> </ol>"},{"location":"OS/os0/#processs","title":"Processs","text":"<ol> <li> <p>Linkder Load</p> </li> <li> <p>OS is a resource abstractor and a resource allocator    - define a set of logical resources and a set of well-defined operations    - decides who gets what resource and when</p> </li> <li>bootloader</li> <li>OS waits until an event occurs</li> <li>modern OSes allows multi-programming    - Time-Sharing: Multi-programming with rapid context-switching</li> <li>Furthermore, there is no memory protection within the kernel    - segmentation fault</li> <li>For instance, only the OS can:</li> </ol> <ul> <li>Directly access I/O devices (printer, disk, etc.)</li> <li>Manipulate memory management state \u64cd\u4f5c\u5185\u5b58\u7ba1\u7406\u72b6\u6001</li> <li>Manipulate protected control registers</li> <li>Execute the halt instruction that shuts down the processor</li> </ul> <ol> <li> <p>MS-DOS had only one mode, because it was written for the Intel 8088(1979), which had no mode bit</p> </li> <li> <p>OS Events    - The kernel defines a handler for each event type    - Once the system is booted, all entries to the kernel occur as the result of an event    - The OS can be seen as a huge event handler</p> </li> <li> <p>A system call is a special kind of trap</p> </li> <li> <p>To make sure that an interrupt will occur reasonably soon, we can use a timer</p> <ul> <li>The timer interrupts the computer regularly</li> </ul> </li> </ol>"},{"location":"OS/os1%20OS%20Structures/","title":"OS Structures","text":"<p>Various ways to structure ones</p> <ul> <li>Simple structure - MS-DOS</li> <li>Monolithic - UNIX</li> <li>Layered - an abstraction</li> <li>Microkernel - Mach</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#a-view-of-operating-system-services","title":"A View of Operating System Services","text":"<ul> <li> <p>\u7ea2\u8272\u90e8\u5206\u662f helpful to user, \u84dd\u8272\u90e8\u5206\u662f better efficiency/operation. </p> </li> <li> <p>User Operating System Interface </p> </li> <li>CLI: Command Line Interface, shells</li> <li>GUI: user-friendly</li> <li>Touchscreen Interfaces</li> <li>Application Programming Interface(API)</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#system-calls","title":"System Calls","text":"<p>\u4e0d\u540c\u7cfb\u7edf\u67b6\u6784\u8c03\u7528system call\u7684\u65b9\u5f0f</p> <ul> <li>x86-32: int</li> <li>-64: syscall</li> <li>arm64: svc</li> <li>EL0 User</li> <li>EL1 Kernel</li> <li>EL2 Hypervisor</li> <li>EL3 SM Secure Monitor</li> <li>0-&gt;1: svc</li> <li>1-&gt;2: hvc</li> <li>2-&gt;3: smc</li> <li>risc-v: ecall</li> </ul> <ul> <li>Programming interface to the services provided by the OS</li> <li>Typically written in a high-level language</li> <li>Mostly accessed by API(Application Programming Interface)</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#printfwrite","title":"printf&amp;write","text":"<p><code>unist</code>: Unix Standard <code>printf</code> \u662f <code>write</code> (system call) \u7684\u4e00\u4e2a wrapper\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>man 2 write</code> \u67e5\u770b\u7cfb\u7edf\u8c03\u7528\u7684\u7528\u6cd5\uff082 \u8868\u793a\u67e5\u8be2\u7cfb\u7edf\u8c03\u7528\uff09</p> <pre><code>ssize_t write(int fd, const void *buf, size_t count);\n</code></pre> <ul> <li><code>fd=1</code> \u8868\u793a\u6807\u51c6\u8f93\u51fa, fd\u6307file descriptor</li> <li><code>buf</code> \u662f\u8981\u8f93\u51fa\u7684\u5185\u5bb9\uff0c\u6307\u5411 <code>hello world\\n</code> \u8fd9\u4e2a\u5b57\u7b26\u4e32\u9996\u5730\u5740\u3002</li> <li><code>count=13</code> \u662f\u8981\u8f93\u51fa\u7684\u5b57\u8282\u6570\uff08\u5305\u542b\u4e86 <code>\\n</code>\uff09</li> </ul> <p><code>write</code>\u7cfb\u7edf\u8c03\u7528\u53f7\u4e3a1</p> <p><code>objdump -d</code> \u7ffb\u8bd1\u6210\u6c47\u7f16\u53ef\u4ee5\u770b\u5230\uff0c<code>main</code> \u91cc\u4f1a\u8c03\u7528 <code>__libc_write</code>\u3002</p> <p>\u5728 <code>__libc_write</code> \u91cc\u4f1a\u5c06 1\uff08\u7cfb\u7edf\u8c03\u7528\u53f7\uff09\u632a\u5230\u5bc4\u5b58\u5668 <code>%eax</code> \u91cc\u968f\u540e\u8c03\u7528\u4e86 <code>syscall</code> \u6307\u4ee4\uff0c\u8df3\u5230 kernel space\uff0c\u5e76\u4e14\u5207\u6362 mode\u3002  </p> <p>Linux0.11</p> <p>\u4e4b\u540e\u5728Kernel Space</p> <ul> <li><code>kernel_entry</code> \u88ab\u8c03\u7528\uff0csave\u6240\u6709user space\u5bc4\u5b58\u5668</li> <li>call <code>write</code> syscall handler: \u4ece<code>syscall_table</code>\u4e2d\u83b7\u53d6\u51fd\u6570\u6307\u9488</li> <li><code>syscall_table</code>\u4e3aarray\uff0c\u5176index\u4e3a\u7cfb\u7edf\u8c03\u7528\u53f7\uff0c</li> <li>\u5199\u5b8c\u540e\u8c03\u7528<code>ret_to_user</code>\uff0c\u6062\u590d\u5bc4\u5b58\u5668\uff0c\u8fd4\u56de\u5230user</li> </ul> <p>\u7528\u6237\u4e0d\u9700\u8981\u77e5\u9053\u7cfb\u7edf\u8c03\u7528\u7684\u5177\u4f53\u5b9e\u73b0</p> <p>The Hidden Syscall Table</p> <p>\u9700\u8981\u901a\u8fc7 C \u9884\u5904\u7406\u5f97\u5230\u5b8f\u5c55\u5f00\u7684\u6587\u4ef6, <code>make *.i</code>\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684<code>.i</code>\u6587\u4ef6</p> <p></p> <p>\u62f7\u8d1d\u6587\u4ef6\u9700\u8981\u8c03\u7528\u7684syscall</p> <p></p>"},{"location":"OS/os1%20OS%20Structures/#strace","title":"strace","text":"<p><code>strace</code>: system call trace. e.g. <code>strace cp main.c main</code> \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8c03\u7528 <code>cp main.c main</code> \u65f6\uff0c\u8c03\u7528\u4e86\u54ea\u4e9b\u7cfb\u7edf\u8c03\u7528\u3002\u53ef\u4ee5\u7528 <code>strace</code> \u77e5\u9053\u6211\u4eec\u7684\u7a0b\u5e8f\u8c03\u7528\u4e86\u4ec0\u4e48\u7cfb\u7edf\u8c03\u7528\u4e4b\u540e\u51fa\u95ee\u9898\u3002</p>"},{"location":"OS/os1%20OS%20Structures/#time","title":"time","text":"<p><code>time</code> \u53ef\u4ee5\u8f93\u51fa real, user, sys \u7684\u65f6\u95f4\u3002\uff08real \u8868\u793a\u65f6\u949f\u7684\u65f6\u95f4\uff0c\u540e\u4e24\u4e2a\u8868\u793a\u5bf9\u5e94mode\u7684\u65f6\u95f4\uff09  </p> <p>\u6709\u65f6 user \u548c sys \u662f\u591a\u8fdb\u7a0b\u540c\u65f6\u8fdb\u884c\uff0c\u6240\u4ee5\u52a0\u8d77\u6765\u7684\u65f6\u95f4\u6bd4\u65f6\u949f\u7684\u65f6\u95f4\u957f\u3002</p>"},{"location":"OS/os1%20OS%20Structures/#system-call-parameter-passing","title":"System Call Parameter Passing","text":"<p>\u76f4\u63a5\u653e\u5728\u5bc4\u5b58\u5668\u91cc\u6216\u628a\u5730\u5740\u653e\u5728\u5bc4\u5b58\u5668\u91cc\uff0c\u901a\u8fc7\u5730\u5740\u8bbf\u95ee</p> <p>\u6216\u8005\u628a\u53c2\u6570push\u5230\u6808\u4e0a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ece\u6808\u4e0apop</p>"},{"location":"OS/os1%20OS%20Structures/#types-of-system-calls","title":"Types of System Calls","text":"<ul> <li>Process control  </li> <li>create process, terminate process</li> <li>end, abort; </li> <li>load, execute</li> <li>get process attributes, set process attributes</li> <li>wait for time</li> <li>wait event, signal event</li> <li>allocate and free memory</li> <li>Dump memory if error \u5185\u5b58\u8f6c\u50a8</li> <li>Debugger for determining bugs, single step execution</li> <li> <p>Locks for managing access to shared data between processes</p> </li> <li> <p>File management</p> </li> <li>Device management</li> <li>Information maintenance</li> <li>Communications</li> <li>create, delete communication connection</li> <li>send, receive messages if message passing model to host name or process name</li> <li>Shared-memory model create and gain access to memory regions</li> <li>transfer status information</li> <li> <p>attach and detach remote devices</p> </li> <li> <p>Protection</p> </li> </ul>"},{"location":"OS/os1%20OS%20Structures/#linkers-and-loaders","title":"Linkers and Loaders","text":"<p>\u4ece <code>.c</code> \u6587\u4ef6\u5230 <code>.o</code> \u6587\u4ef6\u7ecf\u8fc7\u4e86\u4e0b\u9762\u7684\u6d41\u7a0b\uff1a</p> <ul> <li>\u9884\u5904\u7406 <code>cpp main.c -o main.i</code></li> <li>\u7f16\u8bd1 <code>gcc -S main.i -o main.s</code></li> <li>\u6c47\u7f16 <code>as main.s -i main.o</code> </li> <li>Linker combines these into single binary executable file. </li> <li>Loader loads executable file into memory and starts execution.</li> <li>Modern general purpose systems don\u2019t link libraries into executables.</li> <li>Rather, dynamically linked libraries (in Windows, DLLs) are loaded as needed</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#elf-binary-basics","title":"ELF binary basics","text":"<ul> <li>Executable and Linkable Format - ELF</li> <li>Section header &amp; Program header   \u4e00\u4e2a\u7ed9 Linker \u7528\uff0c\u4e00\u4e2a\u7ed9 Loader \u7528\u3002</li> <li><code>.text</code>: code</li> <li><code>.rodata</code>: initialized read-only data       static const</li> <li><code>.data</code>: initialized data   static variable</li> <li><code>.bss</code>: uninitialized data \u5168\u521d\u59cb\u5316\u4e3a0\uff0c\u5b58\u50a8\u7a7a\u95f4\u4e3a0</li> </ul> <p><code>readelf</code>\u67e5\u770belf\u4fe1\u606f\uff0c\u5305\u62ec\u6bcf\u4e2a\u6bb5\u8d77\u59cb\u5730\u5740\u5927\u5c0f\u7b49\u4fe1\u606f <code>readelf -S a.out</code></p>"},{"location":"OS/os1%20OS%20Structures/#linking","title":"Linking","text":"<ul> <li>static linking: \u53ef\u79fb\u690d\u6027\u9ad8\uff0c\u628a\u6240\u6709\u7684\u4ee3\u7801\u90fd\u653e\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5927</li> <li>dynamic linking: Reuse libraries to reduce ELF file size  \u5c0f</li> <li><code>.interp</code>\u6bb5\u91cc\u5b58\u7740loader\u7684\u8def\u5f84</li> <li>loader resolves lib calls</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#running-a-binary","title":"Running a binary","text":"<p>\u8fd0\u884c\u65f6\u7684\u5185\u5b58\u5e03\u5c40\uff1a</p> <p>ELF section \u88ab\u6620\u5c04\u5230\u5185\u5b58\u91cc\u9762\u7684\u4e0d\u540c segment\u3002 \u6ce8\u610f\u533a\u5206\u5806\u548c\u6808\uff0c\u5206\u914d\u6570\u636e\u65f6 stack \u5feb\uff0cheap \u6162\u3002</p> <ul> <li>who setup ELF files mapping?</li> <li>Kernel<ul> <li>exec syscall</li> </ul> </li> <li>who setup stack and heap?</li> <li>Kernel<ul> <li>exec syscall</li> </ul> </li> <li>who setups libraries?</li> <li>Loader<ul> <li>ld-xxx</li> </ul> </li> </ul>"},{"location":"OS/os1%20OS%20Structures/#map","title":"Map","text":"<ul> <li>text: r-xp </li> <li>r--p: rodatas</li> <li>rw-p: data</li> <li>.bss: uninitialized variables. \u7ed9\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u4e0d\u7ed9\u503c\uff0c\u65e9\u671f\u7f16\u8bd1\u5668\u8bb0\u5f55\u5b83\u5728 <code>.bss</code> \u6bb5\u91cc\uff0c\u4f46\u6ca1\u6709\u5b9e\u9645\u7a7a\u95f4\uff0c\u6620\u5c04\u5230\u5185\u5b58\u65f6\u5c31\u521d\u59cb\u5316\u4e3a 0\u3002</li> <li>heap/stack \u533f\u540d\u6620\u5c04\uff0c\u6ca1\u6709\u4e00\u4e2a\u6587\u4ef6\u652f\u6301\u3002\u6620\u5c04\u4e3a\u53ef\u8bfb\u53ef\u5199\u3002</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#running-a-binary-statically-linked","title":"Running a binary (Statically-linked)","text":"<p>\u9996\u5148\u6211\u4eec\u901a\u8fc7 <code>strace</code> \u67e5\u770b\u8fd0\u884c\u9759\u6001\u94fe\u63a5\u6587\u4ef6\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u7cfb\u7edf\u8c03\u7528\u3002</p> <ul> <li><code>execve</code> \u6267\u884c\u5bf9\u5e94\u8def\u5f84\u7684\u6587\u4ef6</li> <li><code>brk</code> \u7528\u4e8e\u7ba1\u7406\u7a0b\u5e8f\u7684\u6570\u636e\u6bb5\u7684\u672b\u5c3e\uff0c\u901a\u8fc7\u6539\u53d8\u5806\u7684\u8fb9\u754c\u6765\u5206\u914d\u6216\u91ca\u653e\u5185\u5b58</li> <li><code>write</code> \u6267\u884c\u7a0b\u5e8f\u91cc\u7684 <code>printf</code> \u529f\u80fd</li> </ul> <p>\u901a\u8fc7entry point address\u77e5\u9053\u7a0b\u5e8f\u4ece\u54ea\u4e00\u884c\u5f00\u59cb</p> <p><code>sys_execve()</code> \u91cc\u6709 <code>load_elf_binary</code> \u51fd\u6570\uff0c\u4ece ELF \u5934\u8bfb\u5730\u5740\u5230 <code>elf_entry</code>\uff0c\u628a\u5730\u5740\u5f53\u4f5c <code>regs-&gt;pc</code>\u3002\u7136\u540e\u8c03\u7528 <code>start_thread</code> \u51fd\u6570\u3002</p> <p>ELF \u91cc\u6709 entry point address\uff08\u901a\u8fc7 <code>readelf -h</code>\uff09</p> <p>entry point address \u4e0d\u662f <code>main()</code> \u7684\u5730\u5740\uff0c\u800c\u662f <code>_start</code> \u7684\u5730\u5740\uff0c\u91cc\u9762\u4f1a\u8c03\u7528 <code>__libc_start_main</code> \u51fd\u6570\uff0c\u91cc\u9762\u624d\u8c03\u7528 <code>main()</code> \u51fd\u6570\u3002 <code>_start</code> \u662f\u5728\u8bfb\u53d6\u547d\u4ee4\u884c\u53c2\u6570\u5e76\u4e14\u4f20\u7ed9 <code>main</code>\u3002</p> <p><code>cat /proc/pid/maps</code> \u91cc\u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u7684\u5185\u5b58\u6620\u5c04\u3002static \u7684\u6761\u76ee\u66f4\u5c11\uff0c\u56e0\u4e3a\u9700\u8981\u7684\u4e1c\u897f\u5df2\u7ecf\u6253\u5305\u5230 <code>a.static</code> \u5185\u4e86\uff0c\u4e0d\u9700\u8981\u5916\u90e8\u7684\u5e93\u3002\u800c dynamic \u9700\u8981\u5916\u90e8\u7684\u5e93\u3002</p>"},{"location":"OS/os1%20OS%20Structures/#running-a-binary-dynamically-linked","title":"Running a binary (Dynamically-linked)","text":"<p>\u76f8\u6bd4\u4e8e\u9759\u6001\u94fe\u63a5\uff0c\u52a8\u6001\u94fe\u63a5\uff1a</p> <ul> <li>\u9700\u8981\u4e00\u4e2a loader\u3002</li> <li>\u52a8\u6001\u94fe\u63a5\u7684\u5185\u5b58\u5e03\u5c40\u4e2d\u6761\u76ee\u66f4\u591a\u3002</li> <li>\u52a8\u6001\u94fe\u63a5\u7684\u7cfb\u7edf\u8c03\u7528\u6bd4\u9759\u6001\u7684\u591a\u3002</li> <li>\u52a8\u6001\u94fe\u63a5\u7684 entry point \u7684\u5730\u5740\u5f88\u5c0f\uff0c\u4e5f\u662f\u5bf9\u5e94 <code>_start</code> \u7684\u5730\u5740\uff0c\u91cc\u9762\u6709\u4e9b symbol \u8fd8\u6ca1\u6709\u88ab\u89e3\u6790\u3002</li> </ul> <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u5148\u901a\u8fc7 <code>strace</code> \u67e5\u770b\u8fd0\u884c\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u54ea\u4e9b\u7cfb\u7edf\u8c03\u7528\u3002 \u53ef\u4ee5\u770b\u5230\u76f8\u6bd4\u4e8e\u9759\u6001\u94fe\u63a5\uff0c\u591a\u51fa\u6765\u7684\u7cfb\u7edf\u90fd\u7528\u90fd\u548c ld \u6709\u5173\uff0c\u5373 dynamic loader\u3002  </p> <p>\u52a8\u6001\u94fe\u63a5\u6709 <code>.interp</code> \u6bb5\uff0c\u5728 <code>load_elf_binary</code> \u51fd\u6570\u4e2d\u4f1a\u8d70\u53e6\u4e00\u4e2a\u5206\u652f\uff1aentry point \u4f1a\u6307\u5411 loader \u7684\u5730\u5740\u3002\u5148\u52a0\u8f7dloader</p>"},{"location":"OS/os1%20OS%20Structures/#why-applications-are-operating-system-specific","title":"Why Applications are Operating System Specific","text":"<ul> <li>\u5f00\u53d1\u7684\u8f6f\u4ef6\u4e0d\u80fd\u76f4\u63a5\u8de8\u5e73\u53f0\u8c03\u7528\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c\u5bfc\u81f4\u7cfb\u7edf\u8c03\u7528\u4e0d\u540c\uff0c\u4e0b\u9762\u7684\u786c\u4ef6\u4e5f\u4e0d\u540c\u3002  </li> <li>\u50cf Java \u5f00\u53d1\u7684\u8f6f\u4ef6\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6709 JVM \u63d0\u4f9b\u4e86\u8de8\u7cfb\u7edf\u7684\u5e73\u53f0\u3002\u4e3a\u6bcf\u4e00\u4e2a\u4e3b\u6d41OS\u5404\u5199\u4e00\u4e2aJVM</li> <li>Application Binary Interface (ABI) is architecture equivalent of API, defines how different components of binary code can interface for a given operating system on a given architecture, CPU, etc...   Application Binary Interface (ABI) \u66f4\u8d34\u8fd1\u786c\u4ef6\u67b6\u6784</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#operating-system-design-and-implementation","title":"Operating System Design and Implementation","text":"<ul> <li>Policy vs Mechanism</li> <li>Policy: What will be done</li> <li>Mechanism: How to do it</li> <li>\u5e94\u8be5\u628aPolicy\u548cMechanism\u5206\u5f00, a very important principle</li> <li>Monolithic \u2013 Unix, Linux</li> <li>Linux System Structure</li> </ul>"},{"location":"OS/os1%20OS%20Structures/#layered-approach","title":"Layered Approach","text":"<p>The bottom layer (layer 0), is the hardware; the highest (layer N) is the user interface</p>"},{"location":"OS/os1%20OS%20Structures/#microkernels","title":"Microkernels","text":"<p>\u5b8f\u5185\u6838\u91cc\u653e\u6709\u5f88\u591a driver\uff0c\u800c driver \u51fa\u95ee\u9898\uff0c\u76f4\u63a5\u5f71\u54cd\u5230 CPU \u7684 scheduler.    </p> <p>microkernel: Moves as much from the kernel into user space.  \u628a driver, file system... \u90fd\u653e\u5230 user space\uff0c\u53ea\u7559\u4e0b\u6700\u6838\u5fc3\u7684\u4e1c\u897f\u5728 kernel space.  </p> <ul> <li>benefits: </li> <li>Easier to extend a microkernel</li> <li>Easier to port the operating system to new architectures</li> <li>More reliable (less code is running in kernel mode)</li> <li>More secure</li> <li>detriments: </li> <li>Performance overhead of user space to kernel space communication  </li> </ul> <p>Many modern operating systems implement loadable kernel modules (LKMs).  </p>"},{"location":"OS/os1%20OS%20Structures/#modules","title":"Modules","text":"<ol> <li>Many modern operating systems implement loadable kernel modules (LKMs)</li> </ol>"},{"location":"OS/os1%20OS%20Structures/#hybrid-systems","title":"Hybrid Systems","text":"<p>Most modern operating systems are actually not one pure model</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/","title":"Mass-Storage Structure","text":""},{"location":"OS/os10%20Mass-Storage%20Structure/#disk-structure","title":"Disk Structure","text":"<ul> <li>Positioning time(random-access time) is time to move disk arm to desired sector</li> <li>seek time: move disk to the target cylinder</li> <li> <p>rotational latency: for the target sector to rotate under the disk head</p> </li> <li> <p>Performance</p> </li> <li>transfer rate: theoretical 6 Gb/sec; effective (real) about 1Gb/sec</li> <li>seek time from 3ms to 12ms (9ms common for desktop drives)</li> <li>latency based on spindle speed: 1/rpm * 60<ul> <li>average latency = \u00bd latency</li> </ul> </li> </ul> <p></p> <p>\u4e3b\u8981\u6162\u5728 seek \u548c rotation \u90e8\u5206\u3002</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#disk-scheduling","title":"Disk Scheduling","text":"<ul> <li>Disk scheduling chooses which pending disk request to service next</li> <li>Concurrent sources of disk I/O requests include OS, system/user processes</li> <li>Idle disk can immediately work on a request, otherwise OS queues requests<ul> <li>OS maintains a queue of requests, per disk or device</li> <li>Optimization algorithms only make sense when a queue exists</li> </ul> </li> <li> <p>\u4ee5\u524d OS \u4f1a\u8d1f\u8d23\u8c03\u5ea6\uff0c\u73b0\u5728\u7531 firmware \u8d1f\u8d23\uff08disk controller\uff09\u3002</p> </li> <li> <p>\u7528\u4e8eminimize seek time</p> </li> <li>rotational latency is difficult for OS to calculate</li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#fcfs","title":"FCFS","text":"<p>First-come first-served, simplest scheduling algorithm.</p> <ul> <li>640 cylinders for the example below</li> </ul> <ul> <li>Advantage:</li> <li>Every request gets a fair chance</li> <li>No indefinite postponement</li> <li>Disadvantages:</li> <li>Does not try to optimize seek time</li> <li>May not provide the best possible service</li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#sstf","title":"SSTF","text":"<p>shortest seek time first\uff0c\u4e0d\u4e00\u5b9aoptimal\uff0c\u53ef\u80fd\u53d1\u751fstarvation</p> <ul> <li>Advantages:</li> <li>Average Response Time decreases</li> <li>Throughput increases</li> <li>Disadvantages</li> <li>Overhead to calculate seek time in advance</li> <li>Starvation may exist</li> <li>High variance: favors only some requests</li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#scan","title":"SCAN","text":"<p>\u4e5f\u53eb elevator \u7535\u68af\u7b97\u6cd5\uff0c\u5148\u626b\u5230\u4e00\u5934\uff0c\u518d\u5f80\u53e6\u4e00\u5934\u626b\uff0c\u5982\u679c\u9047\u5230 request \u5c31\u8bfb\u53d6\u3002</p> <ul> <li> <p>Advantages:</p> </li> <li> <p>Average Response Time</p> </li> <li>High Throughput</li> <li> <p>Low variance of response time</p> </li> <li> <p>Disadvantages:</p> </li> <li> <p>Long waiting time for requests for locations just visited by disk arm</p> <p>\u5982\u679c\u521a\u597d\u9519\u8fc7\u7535\u68af\uff0c\u5c31\u8981\u7b49\u7535\u68af\u89e6\u5e95\u518d\u4e0a\u6765\uff0c\u7b49\u5f85\u65f6\u95f4\u5f88\u957f\u3002</p> </li> </ul> <p>C-SCAN(Circular-SCAN) is designed to provides a more uniform wait time. \u53ea\u505a\u5355\u5411\u7684\u626b\uff0c\u5230\u8fbe\u4e00\u7aef\u65f6\u7acb\u523b\u56de\u5230\u5f00\u5934\uff0c\u968f\u540e\u4ece\u5e95\u5f80\u4e0a\u626b\uff0c\u8fd9\u6837\u6700\u591a\u53ea\u7528\u7b49\u5f85\u4e00\u5708\u3002</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#look","title":"LOOK","text":"<p>\u5728 SCAN / C-SCAN \u7684\u57fa\u7840\u4e0a\uff0c\u53ea\u8d70\u5230\u4e00\u7aef\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\uff08look \u662f\u5426\u6709\u8bf7\u6c42\uff09\u800c\u4e0d\u8d70\u5230 disk \u7684\u5934\u3002</p> <p>LOOK is a version of SCAN, C-LOOK is a version of C-SCAN.</p> <ul> <li>Advantage:</li> <li>Prevents the extra delay which occurred due to unnecessary traversal to the end of the disk.</li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#selecting-disk-scheduling-algorithm","title":"Selecting Disk-Scheduling Algorithm","text":"<ul> <li>Disk scheduling performance depends on the # and types of requests</li> <li>Disk-scheduling should be written as a separate, replaceable, module<ul> <li>SSTF is common and is a reasonable choice for the default algorithm</li> <li>LOOK and C-LOOK perform better for systems that have heavy I/O load \u5982\u6570\u636e\u5e93</li> </ul> </li> <li>Disk performance can be influenced by file-allocation and metadata layout<ul> <li>File systems spend great deal of efforts to increase spatial locality</li> </ul> </li> </ul> <p>\u4f9d\u8d56\u4e8e\u8bf7\u6c42\u7684\u6a21\u5f0f\uff0c\u800c\u8bf7\u6c42\u672c\u8eab\u53c8\u4f9d\u8d56\u4e8e\u6587\u4ef6\u5206\u914d\u7b56\u7565\u3002\u6587\u4ef6\u7cfb\u7edf\u5982\u679c\u6ce8\u91cd\u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u80fd\u591f\u63d0\u4f9b\u5f88\u597d\u7684\u8868\u73b0\u63d0\u5347\u3002</p> <p>\u5982\u679c I/O \u6bd4\u8f83\u5c11\uff0cFCFS \u548c SSTF \u5373\u53ef\u3002\u5982\u679c\u662f\u5927\u578b\u7684\u670d\u52a1\u5668\u6216\u8005\u6570\u636e\u5e93\uff0c\u4e00\u822c\u4f7f\u7528 C-LOOK\u3002\u5982\u679c\u662f SSD\uff08\u4e0d\u7528 seek\uff09\uff0c\u4e00\u822c\u4f7f\u7528 FCFS\u3002</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#nonvolatile-memory-devices","title":"Nonvolatile Memory Devices","text":"<p>If disk-drive like, then called solid-state disks (SSDs). \u56fa\u6001\u786c\u76d8</p> <p>Can be more reliable than HDDs\uff0c</p> <p>\u4e0e\u78c1\u76d8\u76f8\u6bd4\uff0c\u5bff\u547d\u77ed\uff0c\u5bb9\u91cf\u5c0f\uff0c\u901f\u5ea6\u5feb\uff08Bus \u6162\uff0c\u9700\u8981\u76f4\u63a5\u8fde\u5230 PCIE \u4e0a\uff09\u3002\u6ca1\u6709 arm \u4e5f\u4e0d\u9700\u8981\u8f6c\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728 seek time \u548c rotational latency.</p> <ul> <li> <p>Read and written in \u201cpage\u201d increments (think sector) but can\u2019t overwrite in place.</p> </li> <li> <p>Must first be erased, and erases happen in larger \u201cblock\u201d</p> </li> <li> <p>Assume block size: 64k</p> </li> <li> <p>Can only be erased a limited number of times before worn out \u2013 ~ 100,000</p> <p>\u5bff\u547d\u77ed\uff0c\u91cc\u9762\u662f\u7528\u95e8\u7535\u8def\u5b9e\u73b0\u3002\u5145\u653e\u7535\uff08\u64e6\u5199\uff09\u95e8\u4f1a\u88ab\u51fb\u7a7f\uff0c\u5c31\u65e0\u6cd5\u533a\u5206 0/1 \u4e86\u3002</p> </li> <li> <p>Life span measured in drive writes per day(DWPD)</p> </li> </ul> <p>Each cell has lifespan, so need to write equally to all cells.</p> <ul> <li> <p>NAND Flash Controller Algorithms </p> </li> <li> <p>maintain flash translation layer(FTL) table</p> </li> <li> <p>allocate over-provisioning to provide working space for GC </p> <p>\u907f\u514d\u6709\u67d0\u4e00\u5757\u533a\u57df\u88ab\u9891\u7e41\u4f7f\u7528\uff0c\u5e73\u8861\u8bbf\u95ee\u6b21\u6570</p> </li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#magnetic-tape","title":"Magnetic Tape","text":"<p>\u78c1\u5e26\uff0c\u5bb9\u91cf\u5f88\u5927\uff0c\u4f46\u662f\u5f88\u6162\u3002\u56e0\u4e3a\u9700\u8981\u5012\u5e26\uff0c\u4e00\u822c\u90fd\u505a\u987a\u5e8f\u8bbf\u95ee\u800c\u4e0d\u662f\u968f\u673a\u8bbf\u95ee\u3002\u73b0\u5728\u4e3b\u8981\u7528\u6765\u505a\u5907\u4efd\u3002</p> <p>\u4fbf\u5b9c \u9700\u8981\u5148\u683c\u5f0f\u5316</p> <p>data stored on the tape are relatively permanent.</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#disk-management","title":"Disk Management","text":"<p>\u4f7f\u7528\u8fd9\u4e9b\u4ecb\u8d28\uff08\u78c1\u76d8\u3001\u56fa\u6001\u786c\u76d8\u3001\u78c1\u5e26\uff09\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u683c\u5f0f\u5316\u3002</p> <p>Physical formatting: divide disk into sectors for controller to read/write. \u5373\u628a\u4ecb\u8d28\u4e0a\u5206\u597d\u4e0d\u540c\u7684\u90e8\u5206\u3002</p> <p>OS records its own data structures on the disk</p> <ul> <li>partition disk into groups of cylinders, each treated as a logical disk.</li> <li>logical formatting partitions to make a file system on it.</li> </ul> <p>Boot block can point to boot volume or boot loader set of blocks that contain enough code to know how to load the kernel from the file system</p> <ul> <li>Boot block initializes system</li> <li>The bootstrap is stored in ROM, firmware</li> <li>Bootstrap loader program stored in boot blocks of boot partition</li> </ul> <p>RAMDisk: in-memory file system</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#swap-space-management","title":"Swap Space Management","text":"<p>Used for moving entire processes (swapping), or pages (paging), from DRAM to secondary storage when DRAM not large enough for all processes</p> <p>Data structures for swapping on Linux systems:</p> <ul> <li>0 means not used</li> <li>3 means mapped to 3 proc</li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#disk-attachment","title":"Disk Attachment","text":""},{"location":"OS/os10%20Mass-Storage%20Structure/#host-attached-storage","title":"host-attached storage","text":"<ul> <li> <p>hard disk, RAID arrays, CD, DVD, tape</p> </li> <li> <p>attach directly via an I/O bus</p> </li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#network-attached-storage","title":"network-attached storage","text":"<ul> <li> <p>NAS is storage made available over a network instead of a local bus</p> </li> <li> <p>client can remotely attach to file systems on the server</p> </li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#storage-area-network","title":"Storage Area Network","text":"<ul> <li> <p>SAN is a private network connecting servers and storage unit</p> </li> <li> <p>SAN uses high speed interconnection and efficient protocols</p> </li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#raid","title":"RAID","text":"<p>Redundant Array of Independent Disks</p> <p>Disks are unreliable, slow, but cheap. So use redundancy to increase reliability and speed</p> <ul> <li>Data Mirroring: Keep the same data on multiple disks</li> <li>Data Striping: Keep data split across multiple disks to allow parallel reads</li> <li>Error-Code Correcting (ECC) - Parity Bits: Keep information from which to reconstruct lost bits due to a drive failing</li> </ul>"},{"location":"OS/os10%20Mass-Storage%20Structure/#raid-0","title":"RAID 0","text":"<p>\u6ca1\u6709 redundancy\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u628a\u6570\u636e\u5206\u6563\u5728\u4e0d\u540c\u7684\u78c1\u76d8\u3002</p> <p>Accessing a single strip is not faster</p> <p>Improves performance, but not reliability.</p> <p>Example    * Fixed strip size    * 5 files of various sizes    * 4 disks</p> <p></p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#raid-1","title":"RAID 1","text":"<p>\u4e5f\u88ab\u79f0\u4e3a mirroring\uff0c\u5b58\u5728\u4e24\u4e2a\u78c1\u76d8\uff0c\u4e00\u4e2a\u662f\u4e3b\u78c1\u76d8\uff0c\u4e00\u4e2a\u662f\u5907\u4efd\u78c1\u76d8\u3002\u4e3b\u78c1\u76d8\u5199\u5165\u6570\u636e\u540e\uff0c\u5907\u4efd\u78c1\u76d8\u4e5f\u5199\u5165\u76f8\u540c\u7684\u6570\u636e\u3002</p> <p>Example</p> <ul> <li>5 files of various sizes</li> <li>4 disks</li> </ul> <p></p> <p>Reliability is ensured unless you have (extremely unlikely) simultaneous failures, performance can be boosted by reading from the disk with the fastest seek time.</p> <p>\u4f46\u662f\u6d6a\u8d39\u4e86\u4e00\u534a\u7684\u78c1\u76d8\u3002</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#raid-2","title":"RAID 2","text":"<p>stripes data at the bit-level; uses Hamming code for error correction (not used).</p> <p>\u6ca1\u6709\u88ab\u5b9e\u9645\u5e94\u7528\uff0c\u56e0\u4e3a\u7c92\u5ea6\u592a\u5c0f\uff0c\u73b0\u5728\u65e0\u6cd5\u5355\u72ec\u8bfb\u51fa\u6765\u4e00\u4e2a\u6bd4\u7279\uff0c\u81f3\u5c11\u8bfb\u51fa\u4e00\u4e2a\u5b57\u8282\u3002</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#raid-3","title":"RAID 3","text":"<p>Data is striped across multiple disks, with one dedicated parity disk that stores the parity information for all the data disks.</p> <p>\u7ea0\u9519\u7801\u5c31\u5728\u4e00\u4e2a\u78c1\u76d8\u91cc\u3002</p> <p>Time to recovery is long (a bunch of XOR\u2019s)</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#raid-456","title":"RAID 4\uff0c5\uff0c6","text":"<ul> <li>RAID 4: Basically like RAID 3, but interleaving it with strips (blocks)</li> </ul> <p>\u7528\u5757\u6765\u505a strip\uff0c\u7ea0\u9519\u7801\u5355\u72ec\u5b58\u5728\u4e00\u4e2a\u76d8\u91cc\u3002\u8fd9\u4e2a\u7ea0\u9519\u76d8\u4e00\u76f4\u4f1a\u88ab\u8bfb\u5199\uff0c\u5f88\u6709\u53ef\u80fd\u5148\u635f\u574f\u3002</p> <ul> <li>RAID 5: Like RAID 4, but parity is spread all over the disks as opposed to having just one parity disk.</li> </ul> <p>parity bit \u88ab\u5206\u6563\u5730\u5b58\u5230\u4e86\u4e0d\u540c\u7684\u78c1\u76d8\u91cc\u3002\u76f8\u6bd4\u4e8e RAID 4\uff0c\u6bcf\u4e2a\u76d8\u7684\u8bfb\u5199\u6bd4\u8f83\u5747\u8861\u3002</p> <ul> <li>RAID 6: extends RAID 5 by adding an additional parity block.</li> </ul> <p>\u53c8\u52a0\u4e86\u4e00\u4e2a parity bit\uff0c\u4e5f\u662f\u5206\u6563\u5b58\u50a8\u3002</p>"},{"location":"OS/os10%20Mass-Storage%20Structure/#raid-and-file-systems","title":"RAID and File Systems","text":"<p>RAID \u53ea\u68c0\u6d4b\u78c1\u76d8\u5931\u6548\uff0c\u5e76\u4e0d\u77e5\u9053\u5bf9\u5e94\u7684\u662f\u54ea\u4e2a\u6587\u4ef6\u5931\u6548\u3002</p> <p>It does not prevent or detect data corruption or other errors</p> <p>ZFS adds checksums to all FS data and metadata. \u8fd9\u6837\u53ef\u4ee5\u68c0\u9a8c\u78c1\u76d8\u662f\u5426\u5199\u9519\u3002</p>"},{"location":"OS/os11%20IO%20Systems/","title":"I/O Systems","text":""},{"location":"OS/os11%20IO%20Systems/#overview","title":"Overview","text":"<p>I/O management is a major component of OS design and operation.</p> <ul> <li> <p>important aspect of computer operation</p> </li> <li> <p>I/O devices vary greatly</p> </li> </ul> <p>IO \u8bbe\u5907\u5dee\u5f02\u5f88\u5927\uff0c\u5982\u7f51\u5361\u3001\u9f20\u6807\u952e\u76d8\u3001\u663e\u793a\u5668\u3002</p> <ul> <li>new types of devices frequently emerge</li> </ul> <p>\u624b\u673a\u7684CPU\u548c\u5185\u5b58\u88c5\u5230\u7535\u8111\u4e0a\u8fd8\u80fd\u7528</p> <p>\u4e0b\u56fe\u91cc\u9664\u4e86\u5904\u7406\u5668\u548c\u5185\u5b58\uff0c\u5747\u662f\u5916\u8bbe\u3002</p>"},{"location":"OS/os11%20IO%20Systems/#io-hardware","title":"I/O Hardware","text":"<p>Common concepts: signals from I/O devices interface with computer</p> <ul> <li>bus \u7528\u6765\u505a\u8bbe\u5907\u548c CPU \u7684\u4e92\u8fde\u3002</li> <li>port: connection point for device</li> <li>controller: usually contains processor, microcode, private memory, bus controller, etc</li> </ul> <p>I/O access can use polling or interrupt.</p> <ul> <li>polling: IO\u4e3b\u52a8\u5411CPU\u53d1\u8bf7\u6c42\uff0cCPU\u4e2d\u65ad</li> </ul> <p>\u64cd\u4f5c\u7cfb\u7edf\u7a7a\u95f2\u7684\u65f6\u5019\u5728\u7b49event(interrupt\u548cexception\u4e5f\u7b97event)</p> <p>timer interrupt\uff1a\u51cf\u5c11\u65f6\u95f4\u7247\uff0c\u51cf\u52300 schedule</p> <ul> <li>Some CPU architecture has dedicated I/O instructions.</li> </ul> <p>\u5982 x86 \u91cc\u6709 <code>in</code>, <code>out</code>\u3002</p> <ul> <li> <p>Devices usually provide registers for data and control I/O of device</p> </li> <li> <p>Registers include data-in/data-out, status, control or command register</p> </li> <li> <p>Devices are assigned addresses for registers or on-device memory</p> </li> <li> <p>direct I/O instructions</p> <p>\u6269\u5c55\u6027\u5dee\uff0c\u73b0\u5728\u4f7f\u7528\u7684\u5c11\u3002</p> </li> <li> <p>memory-mapped I/O</p> <p>\u628a\u5916\u8bbe\u6620\u5c04\u5230\u5185\u5b58\u5730\u5740\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u6765\u8bbf\u95ee\u5916\u8bbe\u3002</p> </li> </ul>"},{"location":"OS/os11%20IO%20Systems/#polling","title":"Polling","text":"<p>CPU \u4e3b\u52a8\u8be2\u95ee\u8bbe\u5907\uff0c\u662f\u5426\u9700\u8981\u670d\u52a1\u3002</p> <p>For each I/O operation:</p> <ul> <li>busy-wait if device is busy (status register)</li> <li>Cannot accept any command if busy</li> <li>send the command to the device controller (command register)</li> <li>read status register until it indicates command has been executed</li> <li>read execution status, and possibly reset device status</li> </ul> <p>Polling requires busy wait. busywait \u9700\u8981\u9501\uff0c\u4f1a sleep\u3002\u6240\u4ee5\u5982\u679c\u8bbe\u5907\u5f88\u5feb\u90a3\u4e48\u8f6e\u8be2\u662f\u5408\u7406\u7684\uff1b\u5982\u679c\u8bbe\u5907\u5f88\u6162\u90a3\u4e48\u4f1a\u5f88\u4f4e\u6548\u3002</p> <p>spinlock\u4e5f\u6709busy waiting</p> <p>\u89e3\u51b3busy waiting: yield -&gt; moving from running to sleeping</p> <p>\u89e3\u51b3busy waiting</p>"},{"location":"OS/os11%20IO%20Systems/#interrupts","title":"Interrupts","text":"<p>Interrupts can avoid busy-wait</p> <p>cpu\u4e2dcall device\u7684\u7ebf\u7a0b(t1 for example)\u8fdb\u5165device\u7684waiting queue\uff0c\u7136\u540ecpu\u5207\u6362\u5230\u5176\u4ed6\u7ebf\u7a0b\uff0c\u7b49device\u6267\u884c\u5b8c\u540e\u7ed9cpu\u53d1\u4e00\u4e2ainterrupt\uff0c\u540c\u65f6\u628at1\u52a0\u5165cpu\u7684ready queue</p> <ul> <li>device driver (part of OS) send a command to the controller (on device), and return</li> <li>OS can schedule other activities</li> <li>device will interrupt the processor when command has been executed</li> <li>OS retrieves the result by handling the interrupt</li> </ul> <p>Interrupt-based I/O requires context switch at start and end. \u5982\u679c\u4e2d\u65ad\u53d1\u751f\u7684\u9891\u7387\u5f88\u9ad8\uff0c\u90a3\u4e48\u4e0a\u4e0b\u6587\u5207\u6362\u4f1a\u6d6a\u8d39\u5f88\u591a CPU \u65f6\u95f4\u3002</p> <ul> <li>\u4e0b\u56fe\u865a\u7ebf\u4e2dCPU\u5728\u6267\u884c\u5176\u4ed6\u7ebf\u7a0b</li> </ul> <ul> <li>Interrupt is also used for exceptions</li> <li>protection error for access violation</li> <li>page fault for memory access error</li> <li>software interrupt for system calls</li> <li>Multi-CPU systems can process interrupts concurrently</li> <li>sometimes a CPU may be dedicated to handle interrupts</li> <li>interrupts can also have CPU affinity</li> </ul>"},{"location":"OS/os11%20IO%20Systems/#smp-irq-affinity","title":"SMP IRQ Affinity","text":"<ul> <li>It allows you to restrict or repartition the work load that you server must do so that it can more efficiently do it's job.</li> <li>\"balance\" out multiple NiCs in a multi-processor machine. By tying a single NIC to a single CPU, you should be able to scale the amount of traffic your server can handle nicely.</li> </ul>"},{"location":"OS/os11%20IO%20Systems/#direct-memory-access","title":"Direct Memory Access","text":"<p>DMA transfer data directly between I/O device and memory.</p> <p>GPU/NPU/TPU\u7b49XPU \u8bbf\u95ee\u5185\u5b58\u4e5f\u7b97 DMA\uff0c\u53ea\u8981\u4e0d\u7ecf\u8fc7 CPU \u5c31\u7b97\u3002</p> <ul> <li>device driver\u5728CPU\u4e0a\u8dd1\uff0c\u6240\u6709\u7684controller\u90fd\u662f\u5728\u8bbe\u5907\u4e0a\u8dd1\u7684</li> <li>\u7b2c2\u6b65\u4f7f\u7528syscall ioctl</li> </ul>"},{"location":"OS/os11%20IO%20Systems/#application-io-interface","title":"Application I/O Interface","text":"<p>I/O system calls encapsulate(\u5c01\u88c5) device behaviors in generic classes.</p> <ul> <li>in Linux, devices can be accessed as files; low-level access with <code>ioctl</code>.</li> </ul> <p>\u62bd\u8c61\u6210file\uff0c\u56e0\u4e3aread\u548cwrite\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662ffd\uff0c\u8fd9\u6837\u6240\u6709\u5185\u5bb9\u90fd\u53ef\u4ee5\u7528read\u548cwrite\u8bfb\u4e86</p> <p>Device-driver layer hides differences among I/O controllers from kernel.</p> <p>Devices vary in many dimensions</p> <p>\u8bbe\u5907\u53ef\u4ee5\u88ab\u5927\u81f4\u5206\u4e3a\uff1a</p> <ul> <li>Block and Character Devices</li> </ul> <p>\u4ee5\u5757\u4e3a\u5355\u4f4d\u8bbf\u95ee\u6570\u636e\u3002\u652f\u6301 read, write, seek \u64cd\u4f5c\u3002\u53ef\u4ee5\u901a\u8fc7\u5185\u5b58\u6620\u5c04\u8bbf\u95ee\uff0c\u4e5f\u6709 DMA\u3002</p> <p>\u5176\u4e2d character I/O \u6307\u9010\u4e2a\u5b57\u8282\u4f20\u8f93\uff08Stream\uff09\u3002</p> <ul> <li> <p>Network Devices: socket</p> </li> <li> <p>Clocks and Timers: provide current time, elapsed time, timer.</p> </li> <li> <p>memory-mapped file access</p> </li> </ul> <p>Synchronous/Asynchronous I/O</p> <ul> <li> <p>Synchronous I/O includes blocking and non-blocking I/o</p> </li> <li> <p>blocking I/O: process suspended until I/O completed</p> </li> <li> <p>non-blocking I/O: I/O calls return as much data as available</p> </li> <li> <p>Asynchronous I/O: process runs while I/O executes, </p> </li> <li> <p>I/O subsystem signals process when I/O completed via signal or callback</p> </li> </ul>"},{"location":"OS/os11%20IO%20Systems/#kernel-io-subsystem","title":"Kernel I/O Subsystem","text":"<ul> <li> <p>I/O scheduling</p> </li> <li> <p>Buffering - store data in memory while transferring between devices.</p> </li> <li> <p>Caching: hold a copy of data for fast access.</p> </li> <li> <p>Spooling: A spool is a buffer that holds the output (device\u2019s input) if device can serve only one request at a time.</p> </li> <li> <p>Device reservation: provides exclusive access to a device.</p> </li> <li> <p>OS needs to protect I/O devices.</p> </li> <li> <p>keystrokes can be stolen by a keylogger if keyboard is not protected</p> <p>\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u83b7\u53d6\u5bc6\u7801</p> </li> <li> <p>to protect I/O devices</p> </li> <li> <p>define all I/O instructions to be privileged</p> <ul> <li>I/O must be performed via system calls</li> </ul> </li> <li> <p>memory-mapped I/O and I/O ports must be protected too</p> </li> <li> <p>kernel data structures</p> </li> <li>Kernel keeps state info for I/O components<ul> <li>e.g., open file tables, network connections, character device state</li> </ul> </li> <li>Some OS uses message passing to implement I/O, e.g., Windows<ul> <li>message with I/O information passed from user mode into kernel</li> <li>message modified as it flows through to device driver and back to process</li> </ul> </li> </ul>"},{"location":"OS/os11%20IO%20Systems/#io-requests-to-hardware","title":"I/O Requests to Hardware","text":"<ul> <li>System resource access needs to be mapped to hardware</li> </ul>"},{"location":"OS/os11%20IO%20Systems/#performance","title":"Performance","text":"<p>I/O is a major factor in system performance</p> <p>\u6bd4\u5982\u78c1\u76d8\u5f88\u6162\uff0c\u5f00\u673a\u5f88\u8017\u65f6\u95f4</p>"},{"location":"OS/os11%20IO%20Systems/#improve-performance","title":"Improve Performance","text":"<ul> <li>Reduce number of context switches</li> <li>Reduce data copying</li> <li>Reduce interrupts by using large transfers, smart controllers, polling</li> <li>Use DMA</li> <li>Use smarter hardware devices</li> <li>Balance CPU, memory, bus, and I/O performance for highest throughput</li> <li>Move user-mode processes / daemons to kernel threads</li> </ul>"},{"location":"OS/os11%20IO%20Systems/#linux-io","title":"Linux IO","text":"<ol> <li>Device initialization \u9700\u8981\u5148\u6ce8\u518c\uff0c\u6ce8\u518c\u7684\u65f6\u5019\u4f1a\u628a\u8bbe\u5907\u5bf9\u5e94\u6b63\u786e\u7684\u8bfb\u5199\u64cd\u4f5c\u7684\u51fd\u6570\u4e5f\u7ed9\u521d\u59cb\u5316</li> </ol> <ul> <li>/dev/tty<ul> <li>tty_init</li> <li>create /dev/tty file</li> </ul> </li> </ul> <ol> <li>Device write: Write (echo) to the file reach vfs_write, which eventually calls tty_write</li> </ol>"},{"location":"OS/os12%20File%20System%20Interface/","title":"File System Interface","text":""},{"location":"OS/os12%20File%20System%20Interface/#file-concept","title":"File Concept","text":"<p>\u5982\u4f55\u4f7f\u7528\u5927\u89c4\u6a21\u5b58\u50a8\u548c I/O\uff1f\u540e\u6765\u6709\u4e86\u6587\u4ef6\u7cfb\u7edf\uff0c\u5bf9\u78c1\u76d8\u63d0\u4f9b\u4e86\u62bd\u8c61\u3002</p> <ul> <li>File system presents abstraction of disk\u3002</li> <li> <p>File \\(\\rightarrow\\) Track/sector</p> </li> <li> <p>CPU is abstracted to process</p> </li> <li>Memory is abstracted to address space</li> <li>Storage is abstracted to file system</li> </ul> <p>File is a contiguous logical space for storing information.</p> <ul> <li>data: </li> <li>character: \u8bb0\u4e8b\u672c</li> <li>binary: \u4e00\u6bb5\u5185\u5b58\u7684dump</li> <li>application-specific: ppt</li> <li>program</li> <li>special one: <code>proc</code> file system - use file-system interface to retrieve system information.</li> </ul>"},{"location":"OS/os12%20File%20System%20Interface/#file-attributes","title":"File Attributes","text":"<ul> <li>Name \u2013 only information kept in human-readable form</li> <li>Identifier \u2013 unique tag (number) identifies file within file system</li> <li>Type \u2013 needed for systems that support different types</li> <li>Location \u2013 pointer to file location on device</li> <li>Size \u2013 current file size</li> <li>Protection \u2013 controls who can do reading, writing, executing</li> <li>Time, date, and user identification \u2013 data for protection, security, and usage monitoring</li> </ul> <p>\u8fd9\u4e9b\u4fe1\u606f\u662f\u76ee\u5f55\u7ed3\u6784 (directory structure) \u7684\u4e00\u90e8\u5206\uff0c\u90fd\u662f\u6587\u4ef6\u7684\u5143\u4fe1\u606f\uff0c\u4e5f\u5b58\u5728\u78c1\u76d8\u4e0a\u3002 \u53ef\u80fd\u6709\u5176\u4ed6\u5c5e\u6027\uff0c\u4f8b\u5982 checksum\uff0c\u8fd9\u4e9b\u4f1a\u5b58\u5230 extended file attributes \u91cc\u3002</p> <p>Linux\u4e2d\u53ef\u4ee5\u4f7f\u7528file\u547d\u4ee4\u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>stat</code>\u547d\u4ee4\uff0c<code>statistic</code>\u7684\u7f29\u5199</p> <p>modify \u662f\u4fee\u6539\u6587\u4ef6\u5185\u5bb9 content data \u7684\u65f6\u95f4\uff0cchange \u662f\u4fee\u6539\u6587\u4ef6 Metadata \u7684\u65f6\u95f4\u3002</p> <p></p>"},{"location":"OS/os12%20File%20System%20Interface/#file-operations","title":"File Operations","text":"<ul> <li> <p>create: <code>touch</code>, <code>mkdir</code> in Linux</p> </li> <li> <p>space in the file system should be found</p> </li> <li> <p>an entry must be allocated in the directory</p> </li> <li> <p>open: most operations need to file to be opened first</p> </li> <li> <p>return a handler for other operations</p> </li> <li>Open-file table: tracks open files</li> <li>File pointer: pointer to last read/write location, per process that has the file open</li> <li>File-open count: counter of number of times a file is open \u2013 to allow removal of data from open-file table when last processes closes it</li> <li>Disk location of the file: cache of data access information</li> <li>Access rights: per-process access mode information</li> <li> <p>\u6587\u4ef6\u53ef\u80fd\u88ab\u5e76\u53d1\u8bbf\u95ee\uff0c\u6211\u4eec\u9700\u8981\u9501\u3002\u6709 Shared lock \u548c Exclusive lock\uff0c\u4ee5\u53ca\u4e24\u79cd\u9501\u7684\u673a\u5236 mandatory lock\uff08\u4e00\u65e6\u8fdb\u7a0b\u83b7\u53d6\u4e86\u72ec\u5360\u9501\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u963b\u6b62\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u8bbf\u95ee\u5bf9\u5e94\u6587\u4ef6\uff09\u548c advisory lock\uff08\u8fdb\u7a0b\u53ef\u4ee5\u81ea\u5df1\u5f97\u77e5\u9501\u7684\u72b6\u6001\u7136\u540e\u51b3\u5b9a\u8981\u4e0d\u8981\u575a\u6301\u8bbf\u95ee\uff09\u3002</p> </li> <li> <p>read/write: need to maintain a pointer</p> </li> <li> <p>reposition within file \u2013 seek</p> <p>\u5c06 current-file-position pointer \u7684\u4f4d\u7f6e\u91cd\u65b0\u5b9a\u4f4d\u5230\u7ed9\u5b9a\u503c\uff0c\u4f8b\u5982\u6587\u4ef6\u5f00\u5934\u6216\u7ed3\u5c3e\u3002</p> </li> <li> <p>close</p> </li> <li> <p>delete</p> </li> <li> <p>Release file space</p> </li> <li> <p>Hard link: maintain a counter - delete the file until the last link is deleted</p> </li> <li> <p>truncate: empty a file but maintains its attributes</p> </li> </ul> <p>\u628a\u6587\u4ef6\u7684\u6240\u6709 content \u6e05\u7a7a\uff0c\u4f46\u4fdd\u7559 metadata\u3002</p> <p>\u5176\u4ed6\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u8fd9\u4e9b\u64cd\u4f5c\u5b9e\u73b0\u3002\u5982\u62f7\u8d1d\u5c31\u662f create+read&amp;write\u3002</p>"},{"location":"OS/os12%20File%20System%20Interface/#file-types","title":"File Types","text":"<p>\u8bc6\u522b\u4e0d\u540c\u7684\u6587\u4ef6\u7c7b\u578b\uff1a</p> <ul> <li>as part of the file names - file extension</li> </ul> <p>\u4f8b\u5982\u89c4\u5b9a\u53ea\u6709\u6269\u5c55\u540d\u662f .com, .exe, .sh \u7684\u6587\u4ef6\u624d\u80fd\u6267\u884c\u3002</p> <ul> <li>magic number of the file</li> </ul> <p>\u5728\u6587\u4ef6\u5f00\u59cb\u90e8\u5206\u653e\u4e00\u4e9b magic number \u6765\u8868\u660e\u6587\u4ef6\u7c7b\u578b\u3002\u4f8b\u5982 7f45 4c46 \u662f ASCII \u5b57\u7b26\uff0c\u8868\u793a ELF\uff0c\u4ee3\u8868 elf \u6587\u4ef6\u683c\u5f0f\u3002</p>"},{"location":"OS/os12%20File%20System%20Interface/#file-structure","title":"File Structure","text":"<p>A file can have different structures, determined by OS or program</p> <ul> <li>No structure: a stream of bytes or words</li> <li>Simple record structure</li> <li>Lines of records, fixed length or variable length</li> <li>\u5982\u6570\u636e\u5e93</li> <li>Complex structures\uff0c\u5982word</li> </ul>"},{"location":"OS/os12%20File%20System%20Interface/#access-methods","title":"Access Methods","text":"<ul> <li> <p>Sequential access</p> </li> <li> <p>a group of elements is access in a predetermined order</p> <p>\u6bcf\u6b21\u90fd\u53ea\u80fd\u4ece\u5934\u5f00\u59cb\u8bbf\u95ee\u3002</p> </li> <li> <p>Direct access</p> </li> <li> <p>access an element at an arbitrary position in a sequence in (roughly) equal time, independent of sequence size.</p> <p>\u53ef\u4ee5\u8df3\u5230\u4efb\u610f\u7684\u4f4d\u7f6e\u8bbf\u95ee\uff0c\u4e5f\u79f0\u4e3a\u968f\u673a\u8bbf\u95ee\u3002</p> </li> </ul> <p>\u5728\u76f4\u63a5\u8bbf\u95ee\u7684\u65b9\u6cd5\u4e4b\u4e0a\uff0c\u8fd8\u6709\u53ef\u80fd\u63d0\u4f9b\u7d22\u5f15\uff0c\u5373\u5148\u5728\u7d22\u5f15\u4e2d\u5f97\u77e5\u6240\u9700\u8bbf\u95ee\u7684\u5185\u5bb9\u5728\u54ea\u91cc\uff0c\u7136\u540e\u53bb\u8bbf\u95ee\u3002\u4e5f\u6709\u53ef\u80fd\u4f7f\u7528\u591a\u5c42\u7d22\u5f15\u8868\u3002</p>"},{"location":"OS/os12%20File%20System%20Interface/#directory-structure","title":"Directory structure","text":"<p>Disk can be subdivided into partitions</p> <ul> <li> <p>partitions also known as minidisks, slices</p> </li> <li> <p>different partitions can have different file systems</p> </li> </ul> <p>\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u6709\u591a\u4e2a disk\uff0c\u4e00\u4e2a disk \u53ef\u4ee5\u6709\u591a\u4e2a partition\uff0c\u4e00\u4e2a partition \u53c8\u6709\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</p> <ul> <li>disk or partition can be used raw. (without a file system)</li> </ul> <p>partition \u4e5f\u53ef\u4ee5\u4e0d\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>Directory is a collection of nodes containing information about all files. \u6587\u4ef6\u540d\u7684\u96c6\u5408</p>"},{"location":"OS/os12%20File%20System%20Interface/#operations-performed-on-directory","title":"Operations Performed on Directory","text":"<ul> <li>Create a file: new files need to be created and added to directory</li> <li>delete a file: remove a file from directory</li> <li>List a directory: list all files in directory</li> <li>Search for a file: pattern matching</li> <li>Traverse the file system: access every directory and file within a directory</li> </ul>"},{"location":"OS/os12%20File%20System%20Interface/#directory-organization","title":"Directory Organization","text":"<ul> <li>Efficiency: to locate a file quickly</li> <li>Naming: organize the directory structure to be convenient to users</li> </ul>"},{"location":"OS/os12%20File%20System%20Interface/#single-level-directory","title":"Single-Level Directory","text":"<p>\u6211\u4eec\u8bbe\u8ba1\u7684 directory\uff0c\u8981\u80fd\u5feb\u901f\u5b9a\u4f4d\u6587\u4ef6\uff1b\u8981\u517c\u987e\u6548\u7387\u3001\u4fbf\u4e8e\u4f7f\u7528\u3001\u4fbf\u4e8e\u6309\u4e00\u4e9b\u5c5e\u6027\u805a\u5408\u3002</p> <p>A single directory for all users:</p> <p>\u5b58\u5728 Naming problems and grouping problems\uff0c\u5982\u679c\u4e24\u4e2a\u7528\u6237\u60f3\u7528\u76f8\u540c\u7684\u6587\u4ef6\u540d\uff0c\u65e0\u6cd5\u5b9e\u73b0\u3002</p>"},{"location":"OS/os12%20File%20System%20Interface/#two-level-directory","title":"Two-Level Directory","text":"<p>Separate directory for each user</p> <ul> <li>Different user can have the same name for different files</li> <li>Each user has his own user file directory (UFD), it is in the master file directory (MFD).</li> <li>Efficient to search</li> </ul>"},{"location":"OS/os12%20File%20System%20Interface/#tree-structured-directories","title":"Tree-Structured Directories","text":"<p>Files organized into trees</p> <ul> <li>efficient in searching, can group files, convenient naming</li> </ul> <p>\u5982\u679c\u6240\u9700\u76ee\u5f55\u4e0d\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u90a3\u4e48\u7528\u6237\u5c31\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u8def\u5f84\u540d (path name) \u6765\u6307\u5b9a\u3002 File can be accessed using absolute or relative path name</p> <ul> <li>absolute path name: <code>/home/alice/..</code></li> <li>relative path is relative to the current directory (pwd)</li> </ul> <p>\u64cd\u4f5c\uff1a</p> <ul> <li>Creating a new file: touch</li> <li>Delete a file: rm</li> <li>Creating a new subdirectory: <code>mkdir &lt;dir-name&gt;</code></li> <li>Delete directory:</li> <li>If directory is empty, then it\u2019s easy to handle</li> <li>If not<ul> <li>Option I: directory cannot be deleted, unless it\u2019s empty</li> <li>Option II: delete all the files, directories and sub-directories</li> <li><code>sudo rm -rf /</code></li> </ul> </li> </ul> <p>\u8fd9\u91cc\u4e0d\u80fd share \u4e00\u4e2a\u6587\u4ef6\uff08\u5373\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u6587\u4ef6\uff09\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u56fe\u800c\u4e0d\u662f\u6811\u3002</p>"},{"location":"OS/os12%20File%20System%20Interface/#acyclic-graph-directories","title":"Acyclic-Graph Directories","text":"<p>allow links to a directory entry/files for aliasing (no longer a tree)</p> <ul> <li>Dangling pointer problem:</li> <li> <p>e.g., if delete file <code>/dict/all</code>, <code>/dict/w/list</code> and <code>/spell/words/list</code> are d~angling pointers.</p> </li> <li> <p>Solution: back pointers/reference counter</p> </li> <li> <p>Back pointers record all the pointers to the entity, a variable size record</p> </li> <li> <p>Or count # of links to it and only (physically) delete it when counter is zero</p> <p>\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u88ab\u5220\u9664\uff0c\u90a3\u4e48\u5b83\u7684 reference counter \u5c31\u4f1a\u51cf\u4e00\uff0c\u5f53\u51cf\u5230 0 \u65f6\uff0c\u624d\u771f\u6b63\u5220\u9664\u3002</p> </li> </ul>"},{"location":"OS/os12%20File%20System%20Interface/#general-graph-directory","title":"General Graph Directory","text":"<p>Allowing arbitrary links may generate cycles in the directory structure.</p> <p>\u5141\u8bb8\u76ee\u5f55\u4e2d\u6709\u73af\u3002</p> <ul> <li>allow cycles, but use garbage collection to reclaim disk spaces</li> </ul> <p>\u5982\u679c\u6ca1\u6709\u5916\u754c\u76ee\u5f55\u6307\u5411\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u4e2a\u73af\u90fd\u56de\u6536\u4e86\u3002</p> <ul> <li>every time a new link is added use a cycle detection algorithm</li> </ul>"},{"location":"OS/os12%20File%20System%20Interface/#file-system-mounting","title":"File System Mounting","text":"<p>A file system must be mounted before it can be accessed.</p> <ul> <li>mounting links a file system to the system, usually forms a single name space.</li> <li>the location of the file system being mounted is call the mount point.</li> <li>a mounted file system makes the old directory at the mount point invisible.</li> </ul> <p>Mounting a file system</p>"},{"location":"OS/os12%20File%20System%20Interface/#file-sharing","title":"File Sharing","text":"<p>share \u6587\u4ef6\u9700\u8981\u6709\u4e00\u5b9a\u7684\u4fdd\u62a4\u3002</p> <ul> <li>User IDs identify users, allowing protections to be per-user.</li> </ul> <p>\u5141\u8bb8\u67d0\u4e9b\u7528\u6237\u8bbf\u95ee\u3002</p> <ul> <li>Group IDs allow users to be in groups, permitting group access rights.</li> </ul> <p>\u5141\u8bb8\u67d0\u4e9b\u7ec4\u7684\u7528\u6237\u8bbf\u95ee\u3002</p> <p>\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u91cc\uff0c\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u6765\u5171\u4eab\u3002</p>"},{"location":"OS/os12%20File%20System%20Interface/#protection","title":"Protection","text":"<p>\u6587\u4ef6\u7684\u6240\u6709\u8005/\u521b\u5efa\u8005\u5e94\u8be5\u80fd\u63a7\u5236\u6587\u4ef6\u53ef\u4ee5\u88ab\u8c01\u8bbf\u95ee\uff0c\u80fd\u88ab\u505a\u4ec0\u4e48\u3002</p> <p>Types of access</p> <ul> <li>read, write, append</li> <li>execute</li> <li>delete</li> <li>list</li> </ul> <p>\u7ed9\u6bcf\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u7ef4\u62a4\u4e00\u4e2a Access Control List (ACL)\uff0c\u6307\u5b9a\u6bcf\u4e2a\u7528\u6237\u53ca\u5176\u5141\u8bb8\u7684\u8bbf\u95ee\u7c7b\u578b\u3002 \u4f18\u70b9\u662f\u53ef\u4ee5\u63d0\u4f9b\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u7f3a\u70b9\u662f\u5982\u4f55\u6784\u5efa\u8fd9\u4e2a\u5217\u8868\uff0c\u4ee5\u53ca\u5982\u4f55\u5c06\u8fd9\u4e2a\u5217\u8868\u5b58\u5728\u76ee\u5f55\u91cc\u3002</p>"},{"location":"OS/os13%20File%20System%20Implementation/","title":"File System Implementation","text":"<ul> <li>File system resides on secondary storage</li> </ul>"},{"location":"OS/os13%20File%20System%20Implementation/#layered-file-system","title":"Layered File System","text":"<ul> <li> <p>Logical file system</p> </li> <li> <p>Keep all the meta-data necessary for the file system</p> </li> <li>It stores the directory structure</li> <li>It stores a data structure that stores the file description (File Control Block - FCB)</li> <li>Input from above:<ul> <li>Open/Read/Write filepath</li> </ul> </li> <li> <p>Output to below:</p> <ul> <li>Read/Write logical blocks</li> </ul> </li> <li> <p>File-organization module</p> </li> <li> <p>Knows about logical file blocks (from 0 to N) and corresponding physical file blocks: it performs translation</p> <p>\u628a\u903b\u8f91\u5757\u6620\u5c04\u5230\u7269\u7406\u5757\u3002\u8f93\u5165\u662f\u903b\u8f91\u5757\u53f7\uff0c\u8f93\u51fa\u662f\u7269\u7406\u5757\u53f7\u3002</p> </li> <li> <p>It also manages free space</p> </li> <li> <p>Basic file system</p> </li> <li> <p>Allocates/maintains various buffers that contain file-system, directory, and data blocks.</p> <p>\u63d0\u4f9b buffer\uff0c\u7528\u4e8e\u7f13\u5b58\u6587\u4ef6\u7cfb\u7edf\u3001\u76ee\u5f55\u548c\u6570\u636e\u5757\u3002\u5728 Linux \u4e2d\u79f0\u4e3a IO buffer\u3002</p> </li> <li> <p>I/O Control</p> </li> </ul> <p>Device drivers and interrupt handlers.</p> <p>I/O control \u5c06\u4e0a\u5c42\u7684\u6307\u4ee4\u8f6c\u6362\u4e3a low-level, hardware-specific \u7684\u6307\u4ee4\u6765\u5b9e\u73b0\u76f8\u5173\u64cd\u4f5c\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u53d1\u4e2d\u65ad\u3002</p> <p>\u5206\u5c42\u662f\u4e3a\u4e86\u964d\u4f4e\u590d\u6742\u5ea6\uff0c\u901a\u8fc7\u63a5\u53e3\u6765\u9694\u79bb\u4e0d\u540c\u5c42\u3002\u4f46\u4e5f\u964d\u4f4e\u4e86\u6027\u80fd\u3002</p>"},{"location":"OS/os13%20File%20System%20Implementation/#file-system-data-structures","title":"File System Data Structures","text":"<p>on-disk \u7684\u662f\u53ef\u6301\u4e45\u5316\u7684\uff08persisitant\uff09\uff0cin-memory \u7684\u662f\u6613\u5931\u7684\uff08volatile\uff09\u3002</p> <ul> <li>On-disk structures</li> <li>An optional boot control block</li> <li>A volume control block</li> <li>A directory</li> <li>A per-file File Control Block (FCB)</li> <li>In-memory structures</li> <li>A mount table with one entry per mounted volume</li> <li>A directory cache for fast path translation (performance)</li> <li>A global open-file table</li> <li>A per-process open-file table</li> <li>Various buffers holding disk blocks \u201cin transit\u201d (performance)</li> </ul>"},{"location":"OS/os13%20File%20System%20Implementation/#file-control-block","title":"File Control Block","text":"<ul> <li>ext2_inode\uff1a\u524d\u9762\u662fmetadata\uff0c\u540e\u9762\u6307\u9488\u6307\u5411data\uff0coverhead\u5f88\u5927</li> </ul> <ol> <li>File Creation:</li> </ol> <ul> <li> <p>Logical file system allocates a new FCB </p> </li> <li> <p>Appropriate directory is updated with the new file name and FCB</p> </li> </ul> <ol> <li>Operations - open() and close() </li> </ol> <ul> <li> <p>\u7cfb\u7edf\u8c03\u7528 <code>open()</code> \u5c06\u6587\u4ef6\u540d\u4f20\u7ed9 logical file system\uff0c\u540e\u8005\u641c\u7d22 system-wide open-file table\u4ee5\u786e\u5b9a\u8be5\u6587\u4ef6\u662f\u5426\u6b63\u5728\u88ab\u5176\u4ed6\u8fdb\u7a0b\u4f7f\u7528\u3002</p> </li> <li> <p>\u5982\u679c\u6709\uff0c\u5219\u76f4\u63a5\u5728\u5f53\u524d\u8fdb\u7a0b\u7684 per-process open-file table \u4e2d\u65b0\u5efa\u4e00\u4e2a entry\uff0c\u6307\u5411 system-wide open-file table \u4e2d\u7684\u5bf9\u5e94\u9879\u5373\u53ef\u3002</p> </li> <li> <p>\u5426\u5219\uff0c\u9700\u8981\u5728 directory \u4e2d\u627e\u5230\u8fd9\u4e2a file name\uff0c\u5e76\u5c06\u5176 FCB \u4ece\u78c1\u76d8\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u5c06\u5176\u653e\u5728 system-wide open-file table \u4e2d\u3002\u7136\u540e\uff0c\u5728\u5f53\u524d\u8fdb\u7a0b\u7684 per-process open-file table \u4e2d\u65b0\u5efa\u4e00\u4e2a entry\uff0c\u6307\u5411 system-wide open-file table \u4e2d\u7684\u5bf9\u5e94\u9879</p> </li> </ul> <ul> <li>\u56fe(b)\u4e2d\u7684index\u5c31\u662f\u6211\u4eecread/write\u4f20\u5165\u7684\u53c2\u6570fd</li> <li>\u540c\u4e00\u4e2aprocess\u7684\u4e0d\u540cthread\u4e4b\u95f4\u5171\u4eab</li> <li>system-wide open-file table\u4e2d\u6bcf\u4e00\u6761\u90fd\u6709\u4e00\u4e2aopen count\u8bb0\u5f55\u5f00\u4e86\u51e0\u6b21</li> <li>close\u4e00\u4e2a\u65f6\uff0c\u4eceper-process open-file table\u79fb\u53bb\u5bf9\u5e94entry\uff0c\u51cf\u5c11\u4e00\u4e2aopen count</li> <li>open count\u6e05\u96f6\u65f6\u4ecesystem-wide open-file table\u79fb\u53bb</li> <li>\u5728 Unix \u91cc\u9762\uff08UFS\uff09System-Wide Open-File Table \u4f1a\u653e\u8bbe\u5907\u3001\u7f51\u7edc\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u8bbe\u5907\u4e5f\u662f\u7528\u6587\u4ef6\u6765\u8868\u793a\u7684\uff0c\u8bfb\u5199\u6587\u4ef6\u76f8\u5f53\u4e8e\u8bfb\u5199\u8bbe\u5907\u3002</li> <li>inode numbering system is only unique within a given file system</li> </ul>"},{"location":"OS/os13%20File%20System%20Implementation/#virtual-file-systems","title":"Virtual File Systems","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5handle\u5404\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\u7cfb\u7edf</p> <p>Linux\u901a\u8fc7\u5b9a\u4e49\u7edf\u4e00\u7684\u63a5\u53e3\u5e76\u5728\u4e0b\u5c42\u5b9e\u4f8b\u5316\u4e3a\u5177\u4f53\u64cd\u4f5c\u6765\u5b9e\u73b0VFS</p> <ol> <li>VFS provides an object-oriented way of implementing file systems</li> </ol> <p>\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u8bbe\u7f6e\u4e86\u4e00\u5957\u7edf\u4e00\u7684interface\uff0c\u6240\u6709\u7684system call\u90fd\u57fa\u4e8e\u8fd9\u5957interface\u5b9e\u73b0</p> <ol> <li>Linux defines four VFS object types:</li> </ol> <ul> <li> <p>superblock: defines the file system type, size, status, and other metadata</p> </li> <li> <p>inode: contains metadata about a file (location, access mode, owners\u2026)</p> </li> <li> <p>dentry: associates names to inodes, and the directory layout</p> </li> <li> <p>file: actual data of the file</p> </li> </ul> <ol> <li>VFS\u7684\u5927\u591a\u6570interface\u90fd\u662f\u6307\u9488\uff0c\u6307\u5411\u5bf9\u5e94\u6587\u4ef6\u7cfb\u7edf\u771f\u6b63\u5b9e\u73b0\u7684\u90e8\u5206</li> </ol> <ul> <li> <p>Write syscall -&gt; vfs_write -&gt; indirect call -&gt; ext4_file_write_iter</p> <p></p> </li> <li> <p>when is file-&gt;f_op setted?</p> <ul> <li>\u5728\u6211\u4eecopen\u8fd9\u4e2a\u6587\u4ef6\u7684\u65f6\u5019\uff0c<code>file-&gt;f_op</code> \u5c31\u88ab\u8bbe\u4e3a\u4e86\u5bf9\u5e94\u7684\u51fd\u6570\u8868\u7684\u5730\u5740\uff08<code>f_op</code> \u662f\u6307\u9488\uff09\u3002</li> </ul> </li> </ul>"},{"location":"OS/os13%20File%20System%20Implementation/#directory-implementation","title":"Directory Implementation","text":"<p>Directory is a special file, storing the mapping from file name to inode.</p> <p>\u4ed6\u7684\u6570\u636e\u5757\u6709\u81ea\u5df1\u7684\u540d\u5b57\uff08\u76ee\u5f55\u9879 <code>dir_entry</code>\uff09\uff0c\u6bcf\u4e00\u4e2a\u76ee\u5f55\u9879\u6709\u4e00\u4e2a inode\u53f7\u3001\u76ee\u5f55\u9879\u957f\u5ea6\u3001\u6587\u4ef6\u540d\u957f\u5ea6\u548c\u6587\u4ef6\u540d\u3002</p> <p>d_entry\u4ece\u4eba\u80fd\u8bfb\u61c2\u7684\u6587\u4ef6\u540d\u8f6c\u6362\u6210\u8ba1\u7b97\u673a\u80fd\u8bc6\u522b\u7684</p> <p>\u76ee\u5f55\u7684data block\u4e2d\u88c5\u7684\u662f\u8def\u5f84</p> <p>\u4e00\u822c4byte\u5bf9\u9f50</p> <p>\u76ee\u5f55\u9879\u957f\u5ea6\uff1a\u65b9\u4fbf\u67e5\u627e\uff0c\u4e0d\u7b26\u5408\u76f4\u63a5\u8df3\u8fc7\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4</p> <p>\u4e3ahard link</p> <p>\u6700\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f linear list\uff0c\u5373\u7ef4\u62a4 <code>dir_entry[]</code>\u3002\u8fd9\u79cd\u65b9\u6848\u7684\u7f3a\u70b9\u662f\u67e5\u627e\u6587\u4ef6\u5f88\u8d39\u65f6\u3002</p> <p>\u4f7f\u7528\u6709\u5e8f\u6570\u636e\u7ed3\u6784\uff08\u6709\u5e8f\u8868\u3001\u5e73\u8861\u6811\u3001B+ \u6811\u7b49\uff09\u80fd\u591f\u4f18\u5316\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>\u4f7f\u7528 hash table \u4e5f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff1a\u9996\u5148\u627e\u5230\u5f53\u524d\u76ee\u5f55\u7684 inode\uff0c\u5728\u5176\u6307\u5411\u7684\u6570\u636e\u5757\u91cc\u52a0\u4e0a\u4e00\u4e2a\u76ee\u5f55\u9879\u3002\uff08\u5728\u4e4b\u524d\u8981\u5148\u5206\u914d\u4e00\u4e2a inode \u968f\u540e\u624d\u80fd\u653e\u5165\u76ee\u5f55\u9879\uff09</p>"},{"location":"OS/os13%20File%20System%20Implementation/#disk-block-allocation","title":"Disk Block Allocation","text":"<p>Files need to be allocated with disk blocks to store data</p>"},{"location":"OS/os13%20File%20System%20Implementation/#contiguous-allocation","title":"Contiguous Allocation","text":"<p>Each file is in a set of contiguous blocks</p> <p>Good because sequential access causes little disk head movement, and thus shorten seek times</p> <p>\u7f3a\u70b9\u662f\u4f1a\u788e\u7247\u5316(external fragmentation)\uff0c\u540c\u65f6\u6587\u4ef6\u5982\u679c\u589e\u5927\u9700\u8981\u91cd\u65b0\u5206\u914d\u7a7a\u95f4</p>"},{"location":"OS/os13%20File%20System%20Implementation/#linked-allocation","title":"Linked Allocation","text":"<p>Each file is a linked list of disk blocks</p> <p>Blocks may be scattered anywhere on the disk (no external fragmentation, no compaction)</p> <p>\u7f3a\u70b9\uff1a\u641c\u7d22\u5f88\u6162\uff0cI/O\u5f88\u9ad8\uff0cpointer\u5f88\u6d6a\u8d39\u7a7a\u95f4\uff0creliability\u4e0d\u9ad8\uff0c\u5982\u679c\u4e00\u4e2apointer\u88abcorrupt\uff0c\u5f53\u524d\u53ca\u5176\u5f80\u540e\u7684\u90fd\u627e\u4e0d\u5230\u4e86</p> <p>\u6539\u8fdb: cluster the blocks - like 4 blocks</p> <p>FAT (File Allocation Table) uses linked allocation  DOS</p> <p></p>"},{"location":"OS/os13%20File%20System%20Implementation/#indexed-allocation","title":"Indexed Allocation","text":"<p>Each file has its own index blocks of pointers to its data blocks </p> <p>\u7528\u4e00\u4e2a\u5757\u53ea\u505a index\uff0c\u91cc\u9762\u5b58\u653e\u6307\u5411\u6570\u636e\u5757\u7684\u6307\u9488\u3002</p> <ul> <li>Index table provides random/direct access to file data blocks</li> <li>No external fragmentation, but overhead of index blocks</li> <li>Allows holes in the file</li> <li>Index block needs space - waste for small files</li> </ul> <p>\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u5206\u914d index block \u7684\u5927\u5c0f\uff08\u592a\u5927\u4f1a\u6d6a\u8d39\uff0c\u592a\u5c0f\u90a3\u4e48\u6307\u5411\u7684\u7a7a\u95f4\u5c0f\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u628a index block \u94fe\u63a5\u8d77\u6765\uff0c\u6216\u8005\u7528\u591a\u7ea7\u7d22\u5f15</p> <p></p> <p>\u5982\u679c block size \u4e3a 4KB\uff0c\u90a3\u4e48 Linux \u4e2d\u80fd\u521b\u5efa\u7684\u6700\u5927\u6587\u4ef6\u5927\u5c0f\u4e3a 4TB+4GB+4MB+48KB\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a 10KB \u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u524d 3 \u4e2a direct pointer \u5c31\u53ef\u4ee5\uff0c\u540e\u9762\u7684\u6307\u9488\u90fd\u662f NULL\uff0c\u4e0d\u9700\u8981\u5c55\u5f00\u3002</p>"},{"location":"OS/os13%20File%20System%20Implementation/#free-space-management","title":"Free-Space Management","text":""},{"location":"OS/os13%20File%20System%20Implementation/#bitmap","title":"Bitmap","text":"<p>Use one bit for each block, track its allocation status</p> <p>\u76f8\u5bf9\u5bb9\u6613\u627e\u5230\u8fde\u7eed\u7684block \u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4</p>"},{"location":"OS/os13%20File%20System%20Implementation/#linked-free-space","title":"Linked Free Space","text":"<p>Keep free blocks in linked list </p> <ul> <li>No waste of space, just use the memory in the free block for pointers</li> </ul> <p>\u627e\u5230\u4e00\u4e2a\u7a7a\u7684\u5f88\u65b9\u4fbf</p> <ul> <li>Cannot get contiguous space easily</li> <li> <p>Allocating multiple free blocks require traverse the list</p> </li> <li> <p>Usually no need to traverse the entire list: return the first one</p> </li> </ul>"},{"location":"OS/os13%20File%20System%20Implementation/#grouping-and-counting","title":"Grouping and Counting","text":"<ul> <li>Grouping: use indexes to group free blocks</li> <li>Store address of n-1 free blocks in the first free block, plus a pointer to the next index block</li> <li>Allocating multiple free blocks does not need to traverse the list</li> <li>Counting: a link of clusters (starting block + # of contiguous blocks)</li> <li>Space is frequently contiguously used and freed</li> <li>In link node, keep address of first free block and # of following free blocks</li> </ul>"},{"location":"OS/os13%20File%20System%20Implementation/#file-system-performance","title":"File System Performance","text":"<p>To improve file system performance:</p> <ul> <li> <p>Keeping data and metadata close together</p> </li> <li> <p>Use cache: separate section of main memory for frequently used blocks</p> </li> <li> <p>Use asynchronous writes, it can be buffered/cached, thus faster</p> </li> <li> <p>Free-behind and read-ahead: techniques to optimize sequential access - remove the previous page from the buffer, read multiple pages ahead</p> </li> </ul>"},{"location":"OS/os13%20File%20System%20Implementation/#page-cache","title":"Page Cache","text":"<p>A page cache caches pages for MMIO, such as memory mapped files</p> <p>A unified buffer cache uses the same page cache to cache both memory-mapped pages and disk I/O to avoid double caching</p>"},{"location":"OS/os13%20File%20System%20Implementation/#file-and-directory-in-practice","title":"File and Directory in Practice","text":"<ol> <li> <p>Two Key Abstractions</p> </li> <li> <p>File</p> <ul> <li> <p>linear array of bytes</p> </li> <li> <p>has a low-level name - inode number</p> </li> <li> <p>\u901a\u5e38OS\u4e0d\u77e5\u9053\u6bcf\u4e2a\u6587\u4ef6\u7684\u5177\u4f53\u7c7b\u578b</p> </li> </ul> </li> <li> <p>Directory</p> <ul> <li>\u5305\u542b\u4e00\u7cfb\u5217low-level\u7684\u7528\u6237\u53ef\u8bfb\u7684\u540d\u5b57</li> <li>\u6bcf\u4e2aentry\u6307\u5411\u5bf9\u5e94\u6587\u4ef6\u6216\u5176\u4ed6\u76ee\u5f55</li> </ul> </li> <li> <p>fd    - fd=0 stdin    - fd=1 stdout    - fd=2 stderr    - \u56e0\u6b64\u7528\u6237\u80fd\u7528\u7684\u4ecefd=3\u5f00\u59cb</p> </li> <li> <p>when removing files, using <code>unlinkat</code>, <code>unlink(AT_FDCWD, \"tmp\", 0)</code> for example</p> </li> <li> <p>Link    - A file may be known by more than one name in one or more directories.    - Such multiple names are known as links.    - Two kinds of links are also known as hard links and soft links.    - Hard link \u4e0d\u80fd\u8de8\u6587\u4ef6\u7cfb\u7edf</p> <ul> <li>A hard link is a directory entry that associates with a file</li> <li>The file name \u201c.\" in a directory is a hard link to the directory itself</li> <li>The file name \"..\" is a hard link to the parent directory</li> <li>\u4ee5\u4e0a\u4e24\u4e2a\u6587\u4ef6\u5bf9\u4efb\u4f55\u90fd\u6709\uff0c\u56e0\u6b64\u521b\u9020\u4e00\u4e2a\u76ee\u5f55\u5c31\u4f1a\u6709\u8fd9\u4e24\u9879</li> <li>\u540c\u65f6\u5982\u679c\u7236\u6587\u4ef6\u5939\u8fd8\u5b58\u5728\u5176\u4ed6\u5b50\u6587\u4ef6\u5939\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5b50\u6587\u4ef6\u5939\u7684<code>..</code>\u4e5f\u4f1a\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u5939\u4ea7\u751fhard link</li> <li>hard link\u65f6link\u540e\u7684\u4e24\u4e2a\u6587\u4ef6inode\u4e00\u6837</li> <li>\u5220\u9664\u6700\u540e\u4e00\u4e2ahard link\uff0c\u5bf9\u5e94\u7684\u6587\u4ef6\u4e5f\u5c31\u4ece\u78c1\u76d8\u4e2d\u5220\u9664\u4e86</li> <li>ln\u547d\u4ee4</li> <li>Soft link (a.k.a., Symbolic link or symlink) \u53ef\u4ee5\u8de8\u6587\u4ef6\u7cfb\u7edf</li> <li>A symbolic link is a file containing the path name of another file</li> <li>Soft links, unlike hard links, may point to directories and may cross file-system boundaries</li> <li><code>ln -s f1 f2</code>\uff0c\u5c06f1 link\u5230f2\uff0c\u4ece\u800cf2\u6307\u5411f1</li> <li>hard link\u66f4\u7ecf\u6d4e\uff0c\u73b0\u5728\u7528\u7684\u66f4\u591a</li> </ul> </li> </ol> <p>\u8fdb\u7a0b\uff1aOS\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u5143</p> <p>\u7ebf\u7a0b\uff1a\u6267\u884c\u5355\u5143</p>"},{"location":"OS/os13%20File%20System%20Implementation/#an-example-of-fs-organization","title":"An Example of FS Organization","text":"<ul> <li>suppose 64 blocks, size 4KB</li> <li>\u9700\u8981\u5b58\u7684\u6709data, inode, bitmap(\u4e00\u4e2ainode bitmap\uff0c\u4e00\u4e2adata region bitmap), \u4ee5\u53ca\u4e00\u4e2asuperblock</li> <li>56\u4e2a\u7528\u6765\u5b58data</li> <li>5\u4e2a\u7528\u6765\u5b58inode\u3002\u5047\u8bbeinode\u662f256bytes\uff0c\u4e00\u4e2ablock\u53ef\u4ee5\u5b5816\u4e2a\uff0c5\u4e2a\u4e00\u5171\u53ef\u4ee5\u652f\u630180\u4e2ainode\uff0c\u56e0\u6b64\u6700\u591a\u5b5880\u4e2afile\u6216directory</li> </ul> <p><code>df -i</code>\u6307\u4ee4\u67e5\u770b\u53ef\u7528\u548c\u5f53\u524d\u4f7f\u7528inode\u6570\u91cf</p>"},{"location":"OS/os13%20File%20System%20Implementation/#example","title":"Example","text":"<ul> <li>\u7b2c\u4e00\u4e2aread\u627e\u5230root\u7684data block\uff0c\u4e4b\u540e\u904d\u5386directory entry\uff0c\u627e\u5230foo\u7684\uff0c\u4e4b\u540eread foo inode\u4ee5\u627e\u5230data block\uff0c\u904d\u5386directory entry\uff0c\u627e\u5230\u540eread bar\u7684inode</li> <li>\u4e4b\u540e<code>read</code>\uff0cwrite\u7684\u65f6\u5019\u66f4\u65b0access time</li> </ul> <ul> <li><code>create</code>\u7684\u65f6\u5019\u548c\u4e0a\u6587\u7c7b\u4f3c\uff0c\u904d\u5386foo\u7684\u76ee\u5f55\u9879\u627e\u4e0d\u5230bar\uff0c\u56e0\u6b64read inode bitmap\uff0c\u53d1\u73b0\u6709\u53ef\u4ee5\u5199\u7684\u5730\u65b9\u540ewrite\uff0c\u4e4b\u540e\u5728foo\u4e2d\u5199\u5165bar\u5bf9\u5e94\u7684\u76ee\u5f55\u9879\uff0c\u5e76\u521d\u59cb\u5316bar\u7684inode\uff0c\u6700\u540e\u66f4\u65b0foo(\u5373\u7236\u76ee\u5f55)\u7684inode\u7684metadata</li> <li><code>write</code>\u7684\u65f6\u5019\u9996\u5148read bar\u7684inode\uff0c\u4e4b\u540eread data bitmap\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u5199\uff0c\u5e76\u5199\u5165\uff0c\u518d\u5199\u5165bar\u7684data block</li> </ul>"},{"location":"OS/os14%20Security%20and%20Protection/","title":"Security and Protection","text":""},{"location":"OS/os14%20Security%20and%20Protection/#security-is-deeply-rooted-in-os","title":"Security is deeply rooted in OS","text":"<ul> <li>OS concept</li> <li>Resource abstractor and allocator</li> <li>Allocation needs control, which is security</li> <li>CPU introduced privileged mode</li> <li>Kernel mode vs user mode</li> <li>Memory introduced partition and paging for memory isolation</li> <li>Partition - Base and limit</li> <li>Paging - Page table</li> <li>IO introduced access control list</li> <li>Permission control</li> </ul> <p>\u4e3a\u4ec0\u4e48\u4e00\u4e2aprocess\u65e0\u6cd5\u8bbf\u95ee\u53e6\u4e00\u4e2aprocess\u7684\u5185\u5b58\uff0c\u56e0\u4e3a\u6709page table</p> <ol> <li> <p>provide a protection system to computer system resource</p> </li> <li> <p>a computer system must be protected against    - Unauthorized access by users and    - Malicious access to system including viruses, worms etc...</p> </li> <li> <p>What are the vulnerabilities</p> </li> </ol> <ul> <li> <p>Physical vulnerabilities (e.g., computer can be stolen)</p> </li> <li> <p>Natural vulnerabilities (e.g., earthquake)</p> </li> <li> <p>Hardware and Software vulnerabilities (e.g., failures)</p> </li> <li> <p>Media vulnerabilities (e.g., hard disks can be stolen)</p> </li> <li> <p>Communication vulnerabilities (e.g., wires can be tapped)</p> </li> <li> <p>Human vulnerabilities (e.g., insiders)</p> <p>Poorly chosen passwords</p> <p>Software bugs (non reliability of software)- buffer overflow attacks</p> </li> </ul>"},{"location":"OS/os14%20Security%20and%20Protection/#system-security-evaluation-criteria","title":"System security evaluation criteria","text":"<ol> <li>TCSEC(Trusted Computer System Evaluation Criteria)    - by DoD in 1983    - Four division \u7531\u4e0a\u5f80\u4e0b\u5b89\u5168\u7a0b\u5ea6\u589e\u52a0<ul> <li>D-Minimal protection</li> <li>C-Discretionary protection</li> <li>B-Mandatory protection</li> <li>A-Verified protection</li> </ul> </li> </ol> <ol> <li> <p>ITSEC (Information Technology Security Evaluation Criteria)</p> </li> <li> <p>CC (Common Criteria) \u901a\u7528\u6807\u51c6</p> </li> <li> <p>GB17859 \u56fd\u6807</p> </li> </ol>"},{"location":"OS/os14%20Security%20and%20Protection/#concepts-in-system-security","title":"Concepts in system security","text":"<ul> <li>\u53ef\u4fe1\u57fa(Trusted Computing Base)</li> <li>\u4e3a\u5b9e\u73b0\u8ba1\u7b97\u673a\u7cfb\u7edf\u5b89\u5168\u4fdd\u62a4\u7684\u6240\u6709\u5b89\u5168\u4fdd\u62a4\u673a\u5236\u7684\u96c6\u5408</li> <li>\u5305\u62ec\u8f6f\u4ef6\u3001\u786c\u4ef6\u548c\u56fa\u4ef6(\u786c\u4ef6\u4e0a\u7684\u8f6f\u4ef6)</li> <li>\u653b\u51fb\u9762(Attacking Surface)</li> <li>\u4e00\u4e2a\u7ec4\u4ef6\u88ab\u5176\u4ed6\u7ec4\u4ef6\u653b\u51fb\u7684\u6240\u6709\u65b9\u6cd5\u7684\u96c6\u5408</li> <li>\u53ef\u80fd\u6765\u81ea\u4e0a\u5c42\u3001\u540c\u5c42\u548c\u5e95\u5c42</li> <li>\u9632\u5fa1\u7eb5\u6df1(Defense in-depth)</li> <li> <p>\u4e3a\u7cfb\u7edf\u8bbe\u7f6e\u591a\u9053\u9632\u7ebf\uff0c\u4e3a\u9632\u5fa1\u589e\u52a0\u5197\u4f59\uff0c\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u653b\u51fb\u96be\u5ea6</p> </li> <li> <p>Threat Model</p> </li> <li>Hack -&gt; software</li> <li>Shack -&gt; Limited Hardware</li> <li>Lab -&gt; Unlimited</li> </ul> <ol> <li>TCB = set of components (hardware, software) that you trust your secrets with</li> </ol> <ul> <li>TCB\u8d8a\u5927\uff0c\u8d8a\u96be\u4fdd\u8bc1\u5b89\u5168</li> <li>TCB should be as simple as possible</li> </ul> <p>if you type your password on a keyboard, you are trusting:</p> <ul> <li>the keyboard manufacturer</li> <li>your computer manufacturer</li> <li>your operating system</li> <li>the password library</li> <li>the application that is checking the password</li> </ul> <ol> <li>TCB in layered systems    - Higher levels depend on lower levels, but lower levels do not depend on higher levels    - Since a component almost always depends upon its lower levels for security, the TCB  usually includes all lower levels.</li> </ol> <ol> <li>The attack surface is the number of all possible points, or attack vectors, where an unauthorized user can access a system and extract data. </li> </ol> <p>\u8d8a\u5c0f\u8d8a\u597d\u4fdd\u62a4</p> <ol> <li>Defense in-depth: multiple layers of security controls (defense) are placed throughout an information technology (IT) system. </li> </ol>"},{"location":"OS/os14%20Security%20and%20Protection/#protection-access-control","title":"Protection - Access Control","text":"<ol> <li>Access control is an essential element of security that determines who is allowed to access certain data, apps, and resources\u2014and in what circumstances.</li> </ol>"},{"location":"OS/os14%20Security%20and%20Protection/#authentication","title":"Authentication","text":"<p>Authentication(\u8ba4\u8bc1): \u9a8c\u8bc1\u67d0\u4e2a\u53d1\u8d77\u8bbf\u95ee\u8bf7\u6c42\u7684\u4e3b\u4f53\u7684\u8eab\u4efd</p> <ul> <li>\u5305\u62ec\u77e5\u9053\u4ec0\u4e48\u3001\u6709\u4ec0\u4e48\u3001\u662f\u4ec0\u4e48</li> <li>\u8fdb\u7a0b\u4e0e\u7528\u6237\u4e4b\u95f4\u5982\u4f55\u7ed1\u5b9a\uff1f</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u7684PCB/cred\u4e2d\u5747\u5305\u542b\u4e86uid\u5b57\u6bb5</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6765\u81ea\u4e8e\u7236\u8fdb\u7a0b\uff0c\u7ee7\u627f\u4e86\u7236\u8fdb\u7a0b\u7684uid</li> <li>\u7528\u6237\u5728\u767b\u5f55\u540e\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff08shell\uff09\uff0c\u521d\u59cb\u5316uid\u5b57\u6bb5</li> <li>\u5728Windows\u4e0b\uff0c\u7a97\u53e3\u7ba1\u7406\u5668\u4f1a\u626e\u6f14\u7c7b\u4f3cshell\u7684\u89d2\u8272</li> </ul>"},{"location":"OS/os14%20Security%20and%20Protection/#authorization","title":"Authorization","text":"<p>Authorization(\u6388\u6743)\uff1a\u6388\u4e88\u67d0\u4e2a\u8eab\u4efd\u4e00\u5b9a\u7684\u6743\u9650\u4ee5\u8bbf\u95ee\u7279\u5b9a\u7684\u5bf9\u8c61</p> <ol> <li>Authorization matrix \u5bf9\u8c61\u4e0e\u5b9e\u4f53\u7684\u5173\u7cfb</li> </ol> <ul> <li>Objects = things that can be accessed</li> <li>Subjects = things that can do the accessing (users or programs)</li> </ul> <ol> <li>Role-Based Access Control(RBAC) \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236,\u5c06\u7528\u6237\uff08\u4eba\uff09\u4e0e\u89d2\u8272\u89e3\u8026\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u6cd5</li> </ol> <ul> <li>\u7528\u6237\u901a\u8fc7\u62e5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u89d2\u8272\uff0c\u95f4\u63a5\u5730\u62e5\u6709\u6743\u9650,\"\u7528\u6237-\u89d2\u8272\"\uff0c\u4ee5\u53ca\"\u89d2\u8272-\u6743\u9650\"\uff0c\u4e00\u822c\u90fd\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb</li> <li>\u4f18\u52bf\uff1a\u66f4\u76f4\u89c2\u3001\u6548\u7387\u66f4\u9ad8\u3001\u89d2\u8272\u4e0e\u6743\u9650\u4e4b\u95f4\u7684\u5173\u7cfb\u6bd4\u8f83\u7a33\u5b9a\uff0c\u800c\u7528\u6237\u548c\u89d2\u8272\u4e4b\u95f4\u7684\u5173\u7cfb\u53d8\u5316\u76f8\u5bf9\u9891\u7e41</li> </ul> <ol> <li>POSIX\u7684\u6587\u4ef6\u6743\u9650</li> </ol> <ul> <li> <p>\u5c06\u7528\u6237\u5206\u4e3a\u4e09\u7c7b</p> </li> <li> <p>\u6587\u4ef6\u62e5\u6709\u8005\u3001\u6587\u4ef6\u62e5\u6709\u7ec4\u3001\u5176\u4ed6\u7528\u6237\u7ec4</p> </li> <li> <p>\u6bcf\u4e2a\u6587\u4ef6\u53ea\u9700\u8981\u75289\u4e2abit\u5373\u53ef\uff1a3\u79cd\u6743\u9650\uff08\u8bfb-\u5199-\u6267\u884c\uff09 x 3 \u7c7b\u7528\u6237</p> </li> <li> <p>\u4f55\u65f6\u68c0\u67e5\u7528\u6237\u6743\u9650\uff1f</p> </li> <li> <p>\u6bcf\u6b21\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u8fdb\u884c\u6743\u9650\u68c0\u67e5\u548c\u6388\u6743</p> <ul> <li>open()\u5305\u542b\u53ef\u8bfb/\u53ef\u5199\u7684\u53c2\u6570\uff0cOS\u6839\u636e\u7528\u6237\u7ec4\u8fdb\u884c\u68c0\u67e5</li> <li>\u5f15\u5165fd\uff0c\u8bb0\u5f55\u672c\u6b21\u6253\u5f00\u6743\u9650\uff08\u6388\u6743\uff09\uff0c\u4f5c\u4e3a\u540e\u7eed\u64cd\u4f5c\u7684\u53c2\u6570</li> </ul> </li> <li> <p>\u6bcf\u6b21\u64cd\u4f5c\u6587\u4ef6\u65f6\uff0c\u6839\u636efd\u4fe1\u606f\u8fdb\u884c\u68c0\u67e5</p> </li> </ul> <ol> <li>\u6700\u5c0f\u7279\u6743\u7ea7\u539f\u5219\uff1asetuid \u673a\u5236</li> </ol> <ul> <li> <p>passwd\u547d\u4ee4\u5982\u4f55\u5de5\u4f5c</p> </li> <li> <p>\u8fd0\u884c passwd \u65f6\u4f7f\u7528 root \u8eab\u4efd\uff08RBAC\u7684\u601d\u60f3\uff09</p> </li> <li> <p>\u5982\u4f55\u4fdd\u8bc1\u7528\u6237\u63d0\u6743\u4e3aroot\u540e\u53ea\u80fd\u8fd0\u884cpasswd\uff1f</p> <ul> <li>\u5728passwd\u7684inode\u4e2d\u589e\u52a0\u4e00\u4e2aSUID\u4f4d\uff0c\u4f7f\u5f97\u7528\u6237\u4ec5\u5728\u6267\u884c\u8be5\u7a0b\u5e8f\u65f6\u624d\u4f1a\u88ab\u63d0\u6743\uff0c\u6267\u884c\u5b8c\u540e\u6062\u590d\uff0c\u4ece\u800c\u5c06\u8fdb\u7a0b\u63d0\u6743\u7684\u65f6\u95f4\u964d\u81f3\u6700\u5c0f</li> </ul> </li> <li> <p>passwd\u7a0b\u5e8f\u672c\u8eab\u7684\u903b\u8f91\u4f1a\u4fdd\u8bc1\u67d0\u4e00\u4e2a\u7528\u6237\u53ea\u80fd\u4fee\u6539\u5176\u81ea\u8eab\u7684\u5bc6\u7801</p> </li> <li> <p>\u98ce\u9669\uff1a\u901a\u5e38\u4ee5root\u8eab\u4efd\u6267\u884c\uff0c\u62e5\u6709\u7684\u6743\u9650\u8fdc\u8d85\u8fc7\u5fc5\u8981</p> </li> <li> <p>\u5fc5\u8981\u6743\u9650\uff1a\u7528\u6237\u80fd\u591f\u8bfb\u5199 /etc/passwd \u6587\u4ef6\u4e2d\u7684\u67d0\u4e00\u884c</p> </li> <li>\u5b9e\u9645\u6743\u9650\uff1a\u7528\u6237\u80fd\u591f\u8bbf\u95ee\u6574\u4e2a /etc/passwd \u6587\u4ef6\uff0c\u7528\u6237\uff08\u77ed\u6682\u5730\uff09\u62e5\u6709root\u7528\u6237\u7684\u6743\u9650</li> </ul> <ol> <li>Capability(\u6743\u80fd)</li> </ol> <ul> <li> <p>\u63d0\u4f9b\u7ec6\u7c92\u5ea6\u63a7\u5236\u8fdb\u7a0b\u7684\u6743\u9650 \u521d\u8877\uff1a\u89e3\u51b3root\u7528\u6237\u6743\u9650\u8fc7\u9ad8\u7684\u95ee\u9898</p> </li> <li> <p>System needs a fine-grained access control</p> </li> <li> <p>\u57fa\u672c\u7684\u601d\u60f3\u662f\u628aroot\u7684\u80fd\u529b\u62c6\u5206\uff0c\u5206\u4e3a\u51e0\u5341\u4e2a\u5c0f\u7684\u80fd\u529b\uff0c\u79f0\u4e3acapability</p> <ul> <li>\u4e0d\u5141\u8bb8\u4f20\u9012\uff0c\u800c\u662f\u5728\u521b\u5efa\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u4e0e\u8be5\u8fdb\u7a0b\u76f8\u7ed1\u5b9a</li> </ul> </li> <li> <p>Linux: \u5728\u5185\u6838\u64cd\u4f5c\u4e2d\u8fdb\u884c\u6743\u9650\u68c0\u67e5</p> <ul> <li>\u95ee\u9898\uff1aCAP_SYS_ADMIN \u5360\u636e\u4e86\u2153\u7684 permission checks</li> </ul> <p></p> </li> </ul> <p>fd\u4e0eCapability\u7684\u7c7b\u4f3c\u4e4b\u5904</p> <ul> <li>\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u53ef\u4ee5\u770b\u505a\u662f\u4e00\u7c7b Capability</li> <li>\u7528\u6237\u4e0d\u80fd\u4f2a\u9020 fd\uff0c\u5fc5\u987b\u901a\u8fc7\u5185\u6838\u6253\u5f00\u6587\u4ef6</li> <li>fd \u53ea\u662f\u4e00\u4e2a\u6307\u5411\u4fdd\u5b58\u5728\u5185\u6838\u4e2d\u6570\u636e\u7ed3\u6784\u7684\"\u6307\u9488\"</li> <li>\u62e5\u6709 fd \u5c31\u62e5\u6709\u4e86\u8bbf\u95ee\u5bf9\u5e94\u6587\u4ef6\u7684\u6743\u9650</li> <li> <p>\u4e00\u4e2a\u6587\u4ef6\u53ef\u4ee5\u5bf9\u5e94\u4e0d\u540c fd\uff0c\u76f8\u5e94\u7684\u6743\u9650\u53ef\u4ee5\u4e0d\u540c</p> </li> <li> <p>fd \u4e5f\u53ef\u4ee5\u5728\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012</p> </li> <li>\u7236\u8fdb\u7a0b\u53ef\u4ee5\u4f20\u9012\u7ed9\u5b50\u8fdb\u7a0b\uff08\u56de\u987epipe\uff09</li> <li>\u975e\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 sendmsg \u4f20\u9012 fd</li> </ul>"},{"location":"OS/os14%20Security%20and%20Protection/#auditing","title":"Auditing","text":"<p>Auditing: record what users and programs are doing for later analysis</p> <ol> <li>Reference monitor    - \u662f\u5b9e\u73b0\u8bbf\u95ee\u63a7\u5236\u7684\u4e00\u79cd\u65b9\u5f0f    - \u4e3b\u4f53\u5fc5\u987b\u901a\u8fc7\u5f15\u7528\uff08reference\uff09\u7684\u65b9\u5f0f\u95f4\u63a5\u8bbf\u95ee\u5bf9\u8c61    - Reference monitor \u4f4d\u4e8e\u4e3b\u4f53\u548c\u5bf9\u8c61\u4e4b\u95f4\uff0c\u8fdb\u884c\u68c0\u67e5    - \u8d1f\u8d23<ul> <li>Authentication\uff1a\u786e\u5b9a\u53d1\u8d77\u8bf7\u6c42\u5b9e\u4f53\u7684\u8eab\u4efd\uff0c\u8ba4\u8bc1</li> <li>Authorization\uff1a\u786e\u5b9a\u5b9e\u4f53\u786e\u5b9e\u62e5\u6709\u8bbf\u95ee\u8d44\u6e90\u7684\u6743\u9650\uff0c\u6388\u6743</li> <li>\u5f15\u7528\u76d1\u89c6\u5668\u673a\u5236\u5fc5\u987b\u4fdd\u8bc1\u5176\u4e0d\u53ef\u88ab\u7ed5\u8fc7(Non-bypassable)\u3002</li> </ul> </li> </ol> <ol> <li>\u81ea\u4e3b\u8bbf\u95ee\u63a7\u5236\uff08DAC: Discretionary Access Control\uff09    - \u6307\u4e00\u4e2a\u5bf9\u8c61\u7684\u62e5\u6709\u8005\u6709\u6743\u9650\u51b3\u5b9a\u8be5\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u88ab\u5176\u4ed6\u4eba\u8bbf\u95ee</li> <li> <p>\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\uff08MAC: Mandatory Access Control\uff09    - \u7531\"\u7cfb\u7edf\"\u589e\u52a0\u4e00\u4e9b\u5f3a\u5236\u7684\u3001\u4e0d\u53ef\u6539\u53d8\u7684\u89c4\u5219</p> </li> <li> <p>MAC\u4e0eDAC\u53ef\u4ee5\u7ed3\u5408\uff0c\u6b64\u65f6MAC\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8</p> </li> </ol>"},{"location":"OS/os14%20Security%20and%20Protection/#security","title":"Security","text":"<ol> <li>\u901a\u8fc7\u5185\u6838\u6f0f\u6d1e</li> </ol> <ul> <li> <p>\u7be1\u6539\u5df2\u6709\u4ee3\u7801</p> </li> <li> <p>\u6ce8\u5165\u65b0\u7684\u4ee3\u7801</p> </li> <li> <p>\u6216\u8005\u8df3\u5230\u7528\u6237\u4ee3\u7801\uff0c\u6bd4\u5982 jump-to-user</p> </li> </ul> <p>\u7cfb\u7edf\u63a7\u5236\u80fd\u529b\u5927</p> <ul> <li> <p>\u53ef\u6267\u884c\u65b0\u4ee3\u7801</p> </li> <li> <p>\u5371\u5bb3\u5927</p> </li> </ul> <ol> <li>Code injection attack</li> </ol> <ul> <li> <p>\u5185\u6838\u4ee3\u7801\u6ce8\u5165\u9632\u62a4</p> <ul> <li> <p>\u4fdd\u62a4\u5df2\u6709\u4ee3\u7801W^X</p> </li> <li> <p>\u786c\u4ef6\u652f\u6301\uff0c\u675c\u7edd\u6ce8\u5165\uff1a\u6570\u636e\u4e0d\u53ef\u6267\u884c\u3001\u7279\u6743\u4e0d\u53ef\u6267\u884c</p> </li> </ul> </li> <li> <p>\u901a\u8fc7\u5185\u6838\u9875\u8868\u6765\u5b9e\u73b0</p> <ul> <li> <p>\u5728\u5185\u6838\u9875\u8868\u8bbe\u7f6e\u76f8\u5e94\u7684\u4fdd\u62a4\u4f4d\uff0c\u5b9e\u73b0\u4fdd\u62a4</p> </li> <li> <p>\u591a\u6570Android\u8bbe\u5907, \u5305\u542bGoogle Pixel</p> </li> </ul> </li> <li> <p>\u901a\u8fc7\u9694\u79bb\u73af\u5883\u4fdd\u62a4\u5185\u6838\u9875\u8868 \u907f\u514dbypass</p> <ul> <li>\u901a\u8fc7\u9694\u79bb\u73af\u5883\uff0c\u907f\u514d\u5185\u6838\u6f0f\u6d1e\u5f71\u54cd</li> <li>\u786c\u4ef6\u652f\u6301\u53ef\u4fe1\u6267\u884c\u73af\u5883</li> <li>\u5b9e\u73b0\u4e86\u7eb5\u6df1\u9632\u5fa1defense-in-depth</li> </ul> </li> </ul> <ol> <li>code reuse attack</li> </ol> <ul> <li> <p>Existing code snippet, called gadget</p> </li> <li> <p>By changing control data to chain them together</p> <ul> <li> <p>Changing return address, termed ROP attack</p> </li> <li> <p>Changing function pointer, termed as JOP attack</p> </li> </ul> </li> </ul> <ol> <li> <p>Return-oriented programming: Attacker has full control of return address on stack</p> <p>A very simple ROP chain that calculates 0xe+ 0x24\u22120x2d.  </p> <p>\u5982\u679c\u8ba1\u7b97\u51fa0\u8d4b\u7ed9uid\uff0c\u5c31\u5f97\u5230\u4e86root</p> <ul> <li>Result is in the eax register</li> </ul> <p></p> </li> <li> <p>Jump-oriented programming: Corrupt function pointer</p> <p>Following example will leak stack pointer</p> <p></p> </li> </ol> <ul> <li>\u4fdd\u62a4\u8fd4\u56de\u5730\u5740: Stack canary, Randomization, Shadow stack</li> </ul> <ol> <li>\u5185\u6838\u6570\u636e\u653b\u51fb</li> </ol> <ul> <li>\u63a7\u5236\u6570\u636e\u88ab\u4fdd\u62a4\u540e\uff0c\u653b\u51fb\u8005\u63d0\u51fa\u975e\u63a7\u5236\u6570\u636e\u653b\u51fb<ul> <li>\u8fd4\u56de\u5730\u5740\u548c\u51fd\u6570\u6307\u9488\u4ee5\u5916\u7684\u6570\u636e</li> <li>\u5f71\u54cd\u5173\u952e\u7684\u5b89\u5168\u7279\u6027</li> <li>\u4ec5\u5229\u7528\u975e\u63a7\u5236\u6570\u636e\u653b\u51fb\u505a\u5230\u5185\u6838\u63d0\u6743-2017</li> </ul> </li> <li>\u975e\u63a7\u5236\u6570\u636e\u9632\u62a4<ul> <li>\u79cd\u7c7b\u7e41\u6742\uff0c\u96be\u4ee5\u5b9e\u884c\u7edf\u4e00\u6709\u6548\u4fdd\u62a4</li> <li>\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf\u5747\u7f3a\u4e4f\u5bf9\u6570\u636e\u653b\u51fb\u7684\u6709\u6548\u9632\u62a4</li> </ul> </li> </ul>"},{"location":"OS/os2%20Processes/","title":"Processes","text":""},{"location":"OS/os2%20Processes/#concept","title":"Concept","text":"<ul> <li> <p>Process: a unit of resource allocation and protection</p> </li> <li> <p>A process is a program in execution</p> </li> <li> <p>Thread: unit of execution</p> </li> <li> <p>A running system consists of multiple processes</p> </li> <li> <p>Process = \u524d\u4e24\u9879\u5728 ELF \u4e2d\uff0c\u5806\u548c\u6808\u662f\u8fd0\u884c\u65f6\u7684\u4fe1\u606f\u5728 ELF \u4e4b\u5916</p> </li> </ul> <p>ELF\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u91cc\u9762\u7684.data\u6bb5\u5c31\u4e0d\u4f1a\u53d8\u4e86</p> <ul> <li>code (text): initially stored on disk in an executable file</li> <li>data section: global variables</li> <li>program counter: \u6307\u5411\u4e0b\u4e00\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\uff0c\u8fd0\u884c\u65f6\u4ea7\u751f</li> <li>processor's registers</li> <li>a stack \u66f4\u5feb \u51fd\u6570\u5185\u7684\u4e34\u65f6\u53d8\u91cf\u5728stack</li> <li>a heap: malloc\u7684\u5728heap</li> </ul>"},{"location":"OS/os2%20Processes/#the-stack","title":"The Stack","text":"<ul> <li>The runtime stack is</li> <li>Items can be pushed or popped</li> <li>The items are called activation records(stack frames)</li> </ul> <p>Simple Stack</p> <p></p> <ul> <li> <p>Any function needs to have some state so it can run</p> </li> <li> <p>Parameters passed to it by whatever function called it</p> </li> <li> <p>Local variables</p> </li> <li> <p>The address of the instruction that should be executed once the function </p> <p>returns: the return address</p> </li> <li> <p>The value that it will return</p> </li> <li> <p>\u6808\u4ece\u4e0a\uff08\u9ad8\u5730\u5740\uff09\u5f80\u4e0b\uff08\u4f4e\u5730\u5740\uff09\uff0c\u5806\u4ece\u4e0b\u5f80\u4e0a\u3002\u5982\u679c\u78b0\u9762\u5c31\u53d1\u751f\u4e86\u6ea2\u51fa(overflow)\u3002</p> </li> </ul> <p>2 processes for the same program</p> <p></p>"},{"location":"OS/os2%20Processes/#process-control-blockpcb","title":"Process Control Block(PCB)","text":"<ul> <li> <p>process metadata</p> </li> <li> <p>Information associated with each process(also called task control block)</p> </li> <li>Each process has and only has a PCB, PCB\u5b58\u5728\u5185\u5b58</li> <li>allocate a PCB on new process creation</li> <li>free PCB on termination</li> <li> <p>Process state: running, waiting, new, ready, terminated ...</p> </li> <li> <p>Program counter: location of instruction to next execute</p> </li> <li>CPU registers: contents of all process-centric registers</li> <li>CPU scheduling information: priorities, scheduling queue pointers</li> <li>Memory-management information: memory allocated to the process</li> <li>Accounting information: CPU used, clock time elapsed since start, time limits</li> <li>I/O status information: I/O devices allocated to process, list of open files</li> </ul> <p>\u7528\u7ed3\u6784\u4f53<code>task_struct</code>\uff0c\u6240\u6709\u53ef\u7528\u5757\u7528\u94fe\u8868\u8fde\u5728\u4e00\u8d77</p>"},{"location":"OS/os2%20Processes/#process-state","title":"Process State","text":""},{"location":"OS/os2%20Processes/#1-process-creation","title":"1. Process Creation","text":"<ul> <li> <p>A process may create new processes, becoming a parent</p> </li> <li> <p>process tree</p> </li> </ul> <ul> <li> <p><code>pid</code> and <code>ppid</code>(parent process id)</p> </li> <li> <p>The child may inherit/share some of the resources of its parent, or may have entirely new ones \u5b50\u8fdb\u7a0b\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684\u8d44\u6e90\uff08\u5982\u6253\u5f00\u7684\u6587\u4ef6\uff09</p> </li> <li> <p>A parent can also pass input to a child</p> </li> <li> <p>Upon creation of a child, the parent can either</p> </li> <li>continue execution, or</li> <li>wait for the child\u2019s completion</li> <li>The child could be either</li> <li>a clone of the parent (i.e., have a copy of the address space), or</li> <li>be an entirely new program</li> </ul>"},{"location":"OS/os2%20Processes/#11-the-fork-system-call","title":"1.1 The <code>fork()</code> System Call","text":"<ul> <li><code>fork()</code> creates a new process</li> <li>child is a copy of the parent, but <code>pid</code>, <code>ppid</code>  are different and resource utilization is set to 0</li> <li>return child's <code>pid</code> to the parent, and 0 to the child</li> <li><code>getpid()</code>, <code>getppid()</code></li> <li>Both processes continue execution after the call to fork()</li> </ul> <p>What does the following code print?</p> <pre><code>int a = 12;\npid = fork();\nif (pid) { // PARENT\n        // ask the OS to put me in waiting\n        sleep(10);\n        fprintf(stdout,\u201da = %d\\n\u201d,a);\n    while (1);\n} else { // CHILD\n        a += 3;\n        while (1);\n}\n</code></pre> <p>The answer should be 12. <code>fork</code> \u4e4b\u540e\u53d8\u91cf\u7684\u503c\u76f8\u540c\uff0c\u4f46\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\u3002\uff08\u76f8\u5f53\u4e8e\u4e00\u4efd\u62f7\u8d1d\uff09</p> <p></p> <p>How many times does this code print \"hello\"?</p> <pre><code>pid1 = fork();\nprintf(\"hello\\n\");\npid2 = fork();\nprintf(\"hello\\n\");\n</code></pre> <p>The answer should be <code>6</code> times.</p> <p>How many processes does this C program create?</p> <p>Typical C coding style: call fork() and if its return value is non-zero and do the if clause</p> <pre><code>int main (int argc, char *arg[])\n{\n fork (); // 2 \n if (fork ()) { // 4\n     fork (); // 2 parents fork, 2 childs don't fork, so 4+2=6\n }\n fork ();  // 12\n}\n</code></pre> <p>The answer should be 12.</p> <ul> <li>Address space</li> <li>Child duplicate of parent</li> <li>Child has a program loaded into it</li> <li> <p><code>strace</code>\u65e0\u6cd5\u8ffd\u8e2a\u5230<code>fork()</code></p> </li> <li> <p>Pros:</p> </li> <li>\u7b80\u6d01\uff1a\u4e0d\u9700\u8981\u53c2\u6570</li> <li>\u5206\u5de5\uff1a<code>fork</code>\u642d\u8d77\u9aa8\u67b6\u3001<code>exec</code>\u8d4b\u4e88\u7075\u9b42</li> <li>\u8054\u7cfb\uff1a\u4fdd\u6301\u8fdb\u7a0b\u548c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>Cons:</li> <li>\u590d\u6742\uff1a\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528</li> <li>\u6027\u80fd\u5dee</li> <li>\u5b89\u5168\u95ee\u9898</li> </ul>"},{"location":"OS/os2%20Processes/#12-the-execve-system-call","title":"1.2 The <code>execve()</code> System Call","text":"<p><code>execve()</code> system call used after a <code>fork()</code> to replace the process\u2019 memory space with a new program. <code>execve()</code> \u4f1a\u628a\u4e4b\u524d\u7684\u8fdb\u7a0b\u8d44\u6e90\u5168\u90e8\u4e22\u6389(\u76f8\u5f53\u4e8e\u76f4\u63a5\u62b9\u6389\u540e\u9762\u7684\u6240\u6709\u4ee3\u7801)\uff0c\u518d load \u65b0\u7684 binary\uff0c\u6620\u5c04\u65b0\u7684\u5185\u5b58\uff0c\u5206\u7684\u65b0\u7684\u5806\u548c\u6808\uff0c\u5e38\u63a5\u5728 <code>fork()</code> \u540e\u9762\u4f7f\u7528\u3002</p> <p>execve\u4e4b\u540e\u7684\u4ee3\u7801\u4e0d\u4f1a\u6267\u884c</p> <p>Demo</p> <pre><code>if (fork()==0) { // run ls\n  char *const argv[] = {\"ls\", \"-l\", \"/tmp/\", NULL};\n  execv(\"/bin/ls\", argv);\n}\n</code></pre>"},{"location":"OS/os2%20Processes/#2-process-terminations","title":"2. Process Terminations","text":"<p>A process terminates itself with the <code>exit()</code> system call. \u8c03\u7528 exit \u540e\u7ec8\u6b62\u8fdb\u7a0b\uff0c\u91ca\u653e\u8d44\u6e90\u3002</p> <ul> <li>This call takes as argument an integer that is called the process\u2019s exit/return/error code.</li> <li>All resources of a process are deallocated by the OS.   <code>exit</code> \u7ec8\u6b62\u4e4b\u540e\u4f1a\u628a\u8d44\u6e90\u90fd\u91ca\u653e\u3002</li> <li>A process can cause the termination of another process.</li> <li>Using something called \u201csignals\u201d and the <code>kill()</code> system call</li> <li>A parent can wait for a child to complete.</li> <li><code>wait()</code> blocks until any child completes.</li> <li><code>waitpid()</code> blocks until a specific child completes, can be non-blocking with <code>WNOHANG</code> options</li> </ul>"},{"location":"OS/os2%20Processes/#21-processes-and-signals","title":"2.1 Processes and Signals","text":"<p>A process can receive signals. And each signal causes a default behavior in the process. e.g. \u5f53\u6211\u4eec\u60f3\u8981\u7ec8\u6b62\u4e00\u4e2a\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6572\u5165 <code>Ctrl+C</code>\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5bf9\u5f53\u524d\u8fdb\u7a0b\u53d1\u9001\u4e86 <code>SIGINT</code> \u4fe1\u53f7\uff0c\u5c31\u4f1a\u7ec8\u6b62\u5f53\u524d\u8fdb\u7a0b\u3002</p> <p>Manipulating Signals</p> <ul> <li> <p>Each signal causes a default behavior in the process</p> </li> <li> <p>The <code>signal()</code> system call allows a process to specify what action to do on a signal   \u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u6709\u4e9b\u4fe1\u53f7\u7684\u5904\u7406\u7a0b\u5e8f\u3002</p> </li> <li>Signals like <code>SIGKILL</code> and <code>SIGSTOP</code> cannot be ignored or handled by the user, for security reasons</li> </ul>"},{"location":"OS/os2%20Processes/#22-zombie","title":"2.2 Zombie","text":"<ul> <li> <p>When a child process terminates</p> </li> <li> <p>remain as a zombie in an undead state</p> </li> <li> <p>until it is reaped(garbage collected) by the OS \u4e00\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u4e86\uff0c\u4f46\u4f9d\u7136\u8fd8\u5728\u5360\u7528\u8d44\u6e90</p> </li> <li> <p>child\u65e0\u6cd5\u81ea\u5df1\u91ca\u653e\u81ea\u5df1\u7684PCB</p> </li> <li>A zombie lingers on until</li> <li>its parent has called <code>wait()</code> for the child</li> <li> <p>or its parent dies</p> </li> <li> <p>Getting rid of zombies</p> </li> <li>child exit\u65f6\u4f1a\u53d1\u9001SIGCHLD\u4fe1\u53f7\u7ed9parent\uff0cparent\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5bf9SIGCHLD\u7684handler\u5e76\u5728\u5176\u4e2dcall <code>wait()</code></li> </ul>"},{"location":"OS/os2%20Processes/#23-orphans","title":"2.3 Orphans","text":"<ul> <li>An orphan process is one whose parent has died</li> <li>the orphan is adopted by the process with pid 1</li> <li> <p>pid 1 \u4f1a\u6536\u517b orphan\uff0c\u56e0\u6b64\u5b64\u513f\u8fdb\u7a0b\u4e0d\u4f1a\u6210\u4e3a zombie\u3002\uff08pid 1 \u8fdb\u7a0b\u4e00\u5b9a\u4f1a\u56de\u6536\u5b50\u8fdb\u7a0b\uff09</p> </li> <li> <p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u5f53\u524d\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\u5b8c\u5168\u65e0\u5173\u7684\u8fdb\u7a0b\uff1a\u5148 <code>fork()</code> \u4e00\u4e2a\u8fdb\u7a0b\uff0c\u968f\u540e\u6740\u6b7b\u81ea\u5df1\uff0c\u90a3\u4e48\u5f53\u524d\u8fdb\u7a0b\u7684\u5b50\u8fdb\u7a0b\u5c31\u4f1a\u88ab pid 1 \u6536\u517b\uff0c\u5c31\u8131\u79bb\u4e86\u539f\u6765\u7684\u7236\u8fdb\u7a0b\u3002</p> </li> </ul>"},{"location":"OS/os2%20Processes/#3-process-scheduling","title":"3. Process Scheduling","text":"<ul> <li>Maintain scheduling queues of processes</li> <li>Ready queue: all processes residing in main memory, ready and waiting to execute \u53ea\u6709\u4e00\u4e2aready queue\uff0c\u4e14\u4e0d\u4e3a\u7a7a\uff0c\u56e0\u4e3aidle\u4e00\u76f4\u5728\u91cc\u9762</li> <li>Wait queue: processes waiting for an event \u5f88\u591a\u4e2a\u7b49\u5f85\u961f\u5217\uff0c\u4e00\u4e2a\u88ab\u7b49\u5f85\u7684\u4e8b\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\u3002\u5f53\u6211\u4eec\u8fd9\u4e2a\u4e8b\u4ef6\u5230\u6765\u4e4b\u65f6\uff0c\u6211\u4eec\u4ece\u4e8b\u4ef6\u5bf9\u5e94\u7684\u961f\u5217\u9009\u62e9\u4e00\u4e2a\u8fdb\u7a0b\u3002</li> <li> <p>Processes migrate among the various queues.</p> </li> <li> <p>\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\uff0c\u76f4\u63a5\u901a\u8fc7\u94fe\u8868\u63d2\u5165\uff0c\u4e4b\u540e\u51cf\u53bb\u504f\u79fb\u91cf\u540e\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e3a<code>task_struct</code></p> </li> </ul> <p>\u9996\u5148\u4ece ready queue \u4e2d\u62ff\u4e00\u4e2a\u8fdb\u7a0b\u53bb CPU\uff0c</p> <ul> <li>\u5982\u679c\u5230\u65f6\u95f4\u4e86\uff08\u8fc7\u4e86\u4e00\u4e2a\u65f6\u95f4\u7247\uff09\uff0c\u5c31\u76f4\u63a5\u628a\u81ea\u5df1\u653e\u5230 ready queue;</li> <li>\u5982\u679c\u8981\u7b49\u5f85 I/O \u4e8b\u4ef6\uff0c\u5c31\u628a\u81ea\u5df1\u653e\u8fdb wait queue\uff0c\u7b49\u5f85 I/O \u4e8b\u4ef6\u53d1\u751f\u540e\u518d\u628a\u81ea\u5df1\u5524\u9192\uff0c\u653e\u56de ready queue.</li> <li>\u521b\u5efa\u5b50\u8fdb\u7a0b\u4e4b\u540e\u5b50\u8fdb\u7a0b\u653e\u5230 ready queue \u4e2d\uff0c\u5982\u679c\u8c03\u7528\u4e86 <code>wait</code>\uff0c\u90a3\u4e48\u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u540e\uff0c\u8fdb\u5165 ready queue.</li> </ul>"},{"location":"OS/os2%20Processes/#31-cpu-switch-from-process-to-process","title":"3.1  CPU Switch From Process to Process (\u5728\u8fd9\u91cc\u5185\u5bb9\u662f\u5bc4\u5b58\u5668)","text":"<ol> <li>A context switch occurs when the CPU switches from one process to another</li> </ol> <ol> <li>save old state, load state for the new state</li> <li>context of a process represented in the PCB</li> <li>context-switch time is overhead \u7cfb\u7edf\u5728\u5207\u6362\u65f6\u4e0d\u505auseful work</li> <li>\u8c03\u7528<code>switch_to</code>\u7684\u51fd\u6570\u4f1a\u5c06return address\u8bbe\u7f6e\u4e3a\u4e0b\u4e00\u884c    - switch\u4e2d\u53ea\u4fdd\u5b58\u90e8\u5206\u5bc4\u5b58\u5668\uff0c\u56e0\u4e3acaller\u5bc4\u5b58\u5668\u4f1a\u5728\u8c03\u7528\u7684\u65f6\u5019\u7531\u8c03\u7528\u8005\u4fdd\u5b58\uff0c\u53ea\u7528\u4fdd\u5b58callee\u5373\u53ef    - \u8fd9\u4e9b\u5bc4\u5b58\u5668\u4fdd\u5b58\u5230PCB\u4e2d\u4f5c\u4e3acpu_context</li> <li>\u5185\u6838\u8fd0\u884c\u65f6\u7684\u5185\u5b58\u5206\u5e03    - kernel\u6001\u7684stack\u6bd4user\u6001\u5728\u9ad8\u5730\u5740\u591a\u4e86pt_regs,\u540c\u65f6kernel\u6808\u5927\u5c0f\u65e0\u9650    - task_struct\u91cc\u7684pc\u5b58\u7684\u662fkernel space\uff0cpt_regs\u91cc\u7684pc\u5b58\u7684\u662fuser space</li> </ol> <ol> <li>context_switch\u4e2d\u6d89\u53ca\u5bc4\u5b58\u5668\u7684\u4fdd\u5b58\u7b49\u7b49\u662fprivileged instruction\uff0c\u56e0\u6b64\u8981\u5728kernel mode\u3002\u5bf9\u4e8e\u4e24\u4e2auser mode\u7684\u7ebf\u7a0b\u5982\u4e0b\u3002\u8fdb\u5165kernel mode\u7684\u65f6\u5019\u8981\u5148\u4fdd\u5b58user context\uff0c\u5b58\u5230kernel\u7684\u6808\u4e0a\uff0c\u5b58\u5728<code>pt_regs</code>\u533a\u57df\u3002</li> </ol> <p>When and where are the context (regs) been saved?</p> <ul> <li>When: In <code>context_switch</code>, more specifically, in cpu_switch_to</li> <li>Where: In PCB, more specifically, in cpu_context</li> <li>All regs are running kernel code, termed kernel context</li> </ul> <ol> <li>How does <code>fork()</code> return new_pid to parent and zero to child    - \u5bf9parent\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a<code>syscall</code>    - \u5bf9child\uff0c\u901a\u8fc7<code>pt_regs</code>, <code>pt_regs[0]=0</code>\u3002\u6ce8\u610f\u5230\u6b64\u65f6\u5b50\u8fdb\u7a0b\u7684 <code>pc</code>\uff08ARM \u91cc\u7684 <code>pc</code> \u7c7b\u4f3c\u4e8e RISC-V \u91cc\u7684 <code>ra</code>\uff0c\u5b58\u50a8\u8fd4\u56de\u5730\u5740\uff09\u88ab\u8bbe\u7f6e\u4e3a\u4e86 <code>ret_from_fork</code>\uff08\u8c03\u7528 <code>ret_to_user</code>\uff0c\u518d\u8c03\u7528 <code>kernel_exit</code>\uff09\uff0c<code>sp</code> \u88ab\u8bbe\u7f6e\u4e3a\u4e86 <code>pt_regs</code>.    - \u8fd4\u56de\u4e24\u4e2a\u503c\uff0c\u901a\u8fc7\u4e24\u4e2auser context</li> </ol> <ul> <li>When does child process start to run and from where?</li> <li>When forked, child is READY \u00e0 context switch to RUN</li> <li>After context switch, run from ret_to_fork</li> <li>ret_from_fork -&gt; ret_to_user -&gt; kernel_exit who restores the </li> </ul>"},{"location":"OS/os3%20Scheduling/","title":"Scheduling","text":""},{"location":"OS/os3%20Scheduling/#cpu-scheduling","title":"CPU Scheduling","text":"<ul> <li> <p>Definition: The decisions made by the OS to figure out which ready processes/threads should run and for how long.</p> </li> <li> <p>The policy is the scheduling strategy. \u600e\u4e48\u9009\u62e9\u4e0b\u4e00\u4e2a\u8981\u6267\u884c\u7684\u8fdb\u7a0b</p> </li> <li>The mechanism is the dispatcher. \u8be5\u673a\u5236\u662f\u8c03\u5ea6\u5668 \u600e\u4e48\u5feb\u901f\u5207\u6362\u5230\u4e0b\u4e00\u8fdb\u7a0b</li> </ul>"},{"location":"OS/os3%20Scheduling/#cpu-io-burst-style","title":"CPU-I/O Burst Style","text":"<ul> <li> <p>Most processes alternate between CPU and I/O activities</p> </li> <li> <p>I/O-bound process: most waiting I/O, many short CPU bursts. \u5927\u90e8\u5206\u64cd\u4f5c\u90fdI/O-bound</p> </li> <li> <p>CPU-bound process: \u6e32\u67d3\u3001\u8ba1\u7b97...</p> </li> <li> <p>Histogram of CPU-burst Times</p> </li> </ul>"},{"location":"OS/os3%20Scheduling/#the-cpu-scheduler","title":"The CPU Scheduler","text":"<ul> <li>Whenever the CPU becomes idle, a ready process must be selected for execution</li> </ul> <p>\u5f53 CPU \u7a7a\u95f2\u65f6\uff0c\u4ece\u6240\u6709\u7684 ready processes \u4e2d\u9009\u4e00\u4e2a\u7ee7\u7eed\u8dd1\u3002</p> <ul> <li>Non-preemptive scheduling: a process holds the CPU until it is willing to give it up.</li> </ul> <p>\u975e\u62a2\u5360\u5f0f\uff0c\u5b83\u4e00\u76f4\u5360\u7740 CPU\uff0c\u76f4\u5230\u5b83\u81ea\u5df1\u653e\u5f03\u3002</p> <ul> <li>Preemptive scheduling: a process can be preempted even though it could have happily continued executing.</li> </ul> <p>\u62a2\u5360\u5f0f\uff0cCPU \u51b3\u5b9a\u6bcf\u4e2a\u8fdb\u7a0b\u80fd\u8dd1\u591a\u4e45\uff0c\u53ef\u4ee5\u5f3a\u5236\u4e2d\u6b62\u6b63\u5728\u8dd1\u7684\u8fdb\u7a0b\u3002 OS\u4e00\u822c\u62a2\u5360\u5f0f</p> <ul> <li>Scheduling Decision Points: scheduling decisions can occur </li> </ul> <p>\u5728\u975e\u62a2\u5360\u5f0f\u7684\u60c5\u51b5\u4e2d\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0d\u4f1a\u53d1\u751f\uff0c\u65e0\u8bba\u5728\u54ea\u79cd\u4e2d\u7b2c\u516d\u79cd\u90fd\u4e0d\u4f1a\u53d1\u751f</p> <ul> <li> <p>A process goes from RUNNING to WAITING</p> <p>e.g. waiting for I/O to complete</p> </li> <li> <p>A process goes from RUNNING to READY</p> <p>e.g. when an interrupt occurs (such as a timer going off)</p> </li> <li> <p>A process goes from WAITING to READY</p> <p>e.g. an I/O operation has completed</p> </li> <li> <p>A process goes from RUNNING to TERMINATED</p> </li> <li> <p>A process goes from NEW to READY</p> </li> <li> <p>A process goes from READY to WAITING</p> </li> </ul>"},{"location":"OS/os3%20Scheduling/#scheduling-objectives","title":"Scheduling Objectives","text":"<ul> <li>Maximize CPU Utilization</li> <li>Maximize Throughput</li> <li>Minimize Turnarround Time \u5468\u8f6c\u65f6\u95f4\uff0c\u6307\u8fdb\u7a0b\u4ece\u521b\u5efa\u5230\u5b8c\u6210\u7684\u65f6\u95f4\u3002</li> <li>Minimize Waiting Time</li> <li>Minimize Response Time \u54cd\u5e94\u65f6\u95f4\uff0c\u6307\u8fdb\u7a0b\u4ece\u521b\u5efa\u5230\u7b2c\u4e00\u6b21\u54cd\u5e94\u88ab\u63a5\u53d7\u7684\u65f6\u95f4\u3002</li> </ul>"},{"location":"OS/os3%20Scheduling/#scheduling-mechanisms","title":"Scheduling Mechanisms","text":""},{"location":"OS/os3%20Scheduling/#dispatcher","title":"Dispatcher","text":"<p>Dispatcher module gives control of the CPU to the process selected by the scheduler.</p> <ul> <li>switching to kernel mode</li> </ul> <p><code>kernel_entry</code>, \u7528\u6237\u6001\u7684\u4fe1\u606f\u5b58\u5728 <code>pt_regs</code> \u4e2d\u3002</p> <ul> <li>switching context</li> </ul> <p>\u4e0a\u4e0b\u6587\u5b58\u5728 PCB \u4e2d\u3002</p> <ul> <li> <p>switching to user mode</p> </li> <li> <p>jumping to the proper location in the user program to restart that program</p> </li> </ul> <p>Dispatch latency \u2013 time it takes for the dispatcher to stop one process and start another to run. \u8fd9\u662f pure overhead\uff0c\u56e0\u4e3a CPU \u6ca1\u6709\u505a\u5b9e\u9645\u7684\u5de5\u4f5c\u3002</p>"},{"location":"OS/os3%20Scheduling/#scheduling-algorithms","title":"Scheduling Algorithms","text":"<ul> <li>The algorithm cannot be overly complicated so that they can be fast</li> </ul>"},{"location":"OS/os3%20Scheduling/#first-come-first-served-scheduling-fcfs","title":"First-Come, First-Served Scheduling (FCFS)","text":"<ul> <li>Waiting time = start time \u2013 arrival time</li> <li>Turnaround time = finish time \u2013 arrival time</li> <li>Convoy effect - short process behind long process   \u6162\u8f66\u5728\u5feb\u8f66\u540e\u9762\uff0c\u6240\u6709\u8f66\u90fd\u5728\u540e\u9762\u7b49\u7740\u3002</li> </ul>"},{"location":"OS/os3%20Scheduling/#shortest-job-firstsjf-scheduling","title":"Shortest-Job-First(SJF) Scheduling","text":"<p>Use these lengths to schedule the process with the shortest time.</p> <p>\u6ce8\u610f\u5206\u4e3a\u62a2\u5360\u5f0f\u548c\u975e\u62a2\u5360\u5f0f\u7684\uff01</p> <p></p> <p>\u6709\u591a\u6bb5\u7684\u6267\u884c\uff0c\u7b49\u5f85\u65f6\u95f4\u6211\u4eec\u8981\u8ba1\u7b97\u8fd9\u4e2a\u8fdb\u7a0b\u5728\u6267\u884c\u7ed3\u675f\u524d\uff0c\u6709\u591a\u5c11\u65f6\u95f4\u6ca1\u6709\u88ab\u6267\u884c\uff0c\u5373 25-10=15\u3002</p> <ul> <li> <p>\u7406\u8bba\u6700\u4f18\uff0c\u4f46\u7531\u4e8e\u4e0d\u77e5\u9053\u6267\u884c\u4e00\u4e2a\u8fdb\u7a0b\u9700\u8981\u591a\u4e45\uff0c\u56e0\u6b64\u6ca1\u6709\u4ef7\u503c</p> </li> <li> <p>Predicting CPU burst durations: \u636e\u4e4b\u524d\u7684\u65f6\u95f4\uff0c\u9884\u6d4b\u4e00\u4e2a\u8fdb\u7a0b\u7684\u4e0b\u4e00\u6b21\u6267\u884c\u65f6\u95f4\uff1a\\(\\tau_{n+1}=\\alpha t_n+(1-\\alpha)\\tau_n\\)</p> </li> </ul>"},{"location":"OS/os3%20Scheduling/#round-robin-scheduling","title":"Round-Robin Scheduling","text":"<p>RR Scheduling is preemptive and designed for time-sharing.</p> <p>\u7ed9\u8fdb\u7a0b\u4e00\u4e2a\u56fa\u5b9a\u65f6\u95f4\u7247\uff0c\u7528\u5b8c\u4e86\u5c31\u8dd1\u5230 ready queue \u672b\u5c3e\u6392\u961f\u3002</p> <p>Ready Queue is a FIFO. Whenever a process changes its state to READY it is placed at the end of the FIFO.</p> <p>Scheduling:</p> <ul> <li>Pick the first process from the ready queue</li> <li>Set a timer to interrupt the process after 1 quantum</li> <li>Dispatch the process</li> </ul> <p></p> <ul> <li>No starvation, so better response time</li> </ul> <p>\u5728 SJF \u4e2d\uff0c\u5982\u679c\u4e0d\u505c\u7684\u6709\u65f6\u95f4\u77ed\u7684\u8fdb\u7a0b\u8fdb\u6765\uff0c\u90a3\u4e48\u957f\u8fdb\u7a0b\u5c31\u53ef\u80fd\u6c38\u8fdc\u65e0\u6cd5\u6267\u884c\uff0c\u79f0\u4e3a starvation\u3002</p> <ul> <li> <p>The wait time is bounded.</p> </li> <li> <p>Trade-off</p> </li> <li> <p>Short quantum: great response/interactivity but high overhead</p> </li> <li> <p>Long quantum: poor response/interactivity, but low overhead</p> </li> <li> <p>In practice, %CPU time spent on switching is very low</p> </li> <li> <p>time quantum: 10ms to 100ms</p> </li> <li>context-switching time: 10\u03bcs </li> </ul>"},{"location":"OS/os3%20Scheduling/#priority-scheduling","title":"Priority Scheduling","text":"<p>\u4f18\u5148\u7ea7\u9ad8\u7684\u5148\u88ab\u8c03\u5ea6\uff0c\u4f18\u5148\u7ea7\u4f4e\u7684\u540e\u88ab\u8c03\u5ea6\u3002\uff08No convention: low number can mean low or high priority\uff09</p> <ul> <li>Priorities can be internal.</li> </ul> <p>e.g. in SJF it\u2019s the predicted burst time, the number of open files.</p> <ul> <li>Priorities can be external.</li> </ul> <p>e.g. set by users to specify relative importance of jobs.</p> <p>Processes with the same priority run round-robin</p> <p></p> <ul> <li>starvation: \u4f18\u5148\u7ea7\u4f4e\u7684\u53ef\u80fd\u6c38\u8fdc\u65e0\u6cd5\u6267\u884c</li> <li>solution: Priority aging: Increase the priority of a process as it ages</li> </ul>"},{"location":"OS/os3%20Scheduling/#multilevel-queue-scheduling","title":"Multilevel Queue Scheduling","text":"<ul> <li>Scheduling within queues</li> <li>\u6bcf\u4e2aqueue\u6709\u81ea\u5df1\u7684\u8c03\u5ea6policy</li> <li>\u5982high-priority\u4f7f\u7528RR\uff0clow-priority\u4f7f\u7528FCFS</li> <li>Scheduling between queues</li> <li>\u62a2\u5360\u5f0f or time-slicing among queues</li> </ul>"},{"location":"OS/os3%20Scheduling/#multilevel-feedback-queues","title":"Multilevel Feedback Queues","text":"<ul> <li>Processes can move among the queues.</li> <li>\u5f53process\u7684characteristic\u53d8\u5316\u65f6\u6539\u53d8queue\uff0c\u540c\u65f6\u662f\u4e00\u4e2agood way to implement priority aging</li> </ul> <p>\u6709\u4e09\u5c42\u961f\u5217\uff0c\u7b2c\u4e00\u3001\u4e8c\u5c42\u662f Round-Robin\u3002\u6765\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u5148\u653e\u5230\u7b2c\u4e00\u4e2a\u961f\u5217\u91cc\u51c6\u5907\u6267\u884c\uff0c\u5982\u679c\u6ca1\u6267\u884c\u5b8c\u5c31\u653e\u5230\u7b2c\u4e8c\u4e2a\u961f\u5217\u91cc\uff0c\u5982\u679c\u8fd8\u6ca1\u6267\u884c\u5b8c\u5c31\u653e\u5230\u7b2c\u4e09\u4e2a\u961f\u5217\u91cc FCFS\u3002\u5982\u679c\u6700\u5f00\u59cb\u5728 Q0 \u5c31\u6267\u884c\u5b8c\u4e86\uff0c\u5f88\u53ef\u80fd\u662f I/O bound \u7684\u8fdb\u7a0b\uff0c\u6211\u4eec\u628a\u5b83\u7684\u4f18\u5148\u7ea7\u8bbe\u7684\u5f88\u9ad8\uff1b\u5426\u5219\u53ef\u80fd\u662f CPU-bound \u6211\u4eec\u5c31\u964d\u4f4e\u5b83\u7684\u4f18\u5148\u7ea7\u3002</p> <p>\u975e CPU-intensive \u7684\u8fdb\u7a0b\u5e94\u8be5\u5c3d\u5feb\u5f97\u5230 CPU\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u80fd\u662f\u4ea4\u4e92\u5f0f\u8fdb\u7a0b\u3002</p> <p>\u53ef\u914d\u7f6e\u6027\u5f88\u9ad8\u3002\u5305\u62ecqueue\u7684\u6570\u91cf\uff0c\u6bcf\u4e2aqueue\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0cqueue\u4e4b\u95f4\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u63d0\u5347\u6216\u964d\u7ea7\u67d0\u4e2aprocess\u7684\u65b9\u6cd5</p> <p>\u4e0d\u540csystem\u4e4b\u95f4\u6700\u597d\u7684\u8c03\u5ea6\u7b97\u6cd5\u53ef\u80fd\u4e0d\u4e00\u6837</p>"},{"location":"OS/os3%20Scheduling/#whats-a-good-scheduling-algorithm","title":"What\u2019s a Good Scheduling Algorithm?","text":"<ul> <li> <p>Few analytical/theoretical results are available</p> </li> <li> <p>Another option: Simulation</p> </li> <li> <p>Finally: Implementation</p> </li> </ul>"},{"location":"OS/os3%20Scheduling/#thread-scheduling","title":"Thread Scheduling","text":"<ul> <li>process-contention scope (PCS)</li> </ul> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u5230\u65f6\u95f4\u7247\u4e00\u6837\uff0c\u7136\u540e\u8fdb\u7a0b\u5185\u90e8\u518d\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u8c03\u5ea6\u3002</p> <ul> <li>system-contention scope (SCS)</li> </ul> <p>\u6240\u6709\u7ebf\u7a0b\u8fdb\u884c\u8c03\u5ea6\u3002</p> <p>\u73b0\u5728\u4e3b\u6d41 CPU \u90fd\u662f\u4ee5\u7ebf\u7a0b\u4e3a\u7c92\u5ea6\u8fdb\u884c\u8c03\u5ea6\u7684\u3002</p>"},{"location":"OS/os3%20Scheduling/#multiple-processor-scheduling","title":"Multiple-Processor Scheduling","text":"<p>Multi-processor may be any one of the following architectures:</p> <ul> <li>Multi-core CPUs</li> <li>Multi-threaded cores</li> </ul>"},{"location":"OS/os3%20Scheduling/#multithreaded-multicore-system","title":"Multithreaded Multicore System","text":"<ul> <li> <p>Symmetric multiprocessing (SMP) is where each processor is self scheduling</p> </li> <li> <p>All threads may be in a common ready queue (a)</p> </li> <li> <p>Each processor may have its own private queue of threads (b)</p> </li> </ul> <p>\u73b0\u5728\u5927\u90e8\u5206\u662f\u8fd9\u79cd\u67b6\u6784\u3002</p> <p>CPU \u4e2d\u8ba1\u7b97\u5355\u5143\u5f88\u5feb\uff0c\u4f46\u662f\u5185\u5b58\u8bbf\u95ee\u662f\u5f88\u6162\u7684\uff0c\u9700\u8981 stall\u3002\u4e3a\u4e86\u5229\u7528\u8fd9\u6bb5 stall \u7684\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u591a\u7528\u4e00\u4e2a thread\uff0c\u5728\u8fd9\u4e2a thread stall \u65f6\u6267\u884c\u53e6\u4e00\u4e2a thread\u3002\uff08hyperthreading\uff09</p> <p>Chip-multithreading (CMT) assigns each core multiple hardware threads. (Intel refers to this as hyperthreading.)</p> <p>hyperthreading \u5c5e\u4e8e\u786c\u4ef6\u7ebf\u7a0b\uff0c\u7531\u786c\u4ef6\u6765\u8c03\u5ea6\uff0c\u4e0d\u540c\u4e8e OS \u91cc\u7684 thread\u3002</p> <ul> <li>Two levels of scheduling:</li> <li>The operating system deciding which software thread to run on a logical CPU</li> <li>How each core decides which hardware thread to run on the physical core.</li> </ul>"},{"location":"OS/os3%20Scheduling/#multiple-processor-scheduling_1","title":"Multiple-Processor Scheduling","text":""},{"location":"OS/os3%20Scheduling/#load-balancing","title":"Load Balancing","text":"<ul> <li> <p>Load balancing attempts to keep workload evenly distributed</p> </li> <li> <p>Push migration \u2013 periodic task checks load on each processor, and if found pushes task from overloaded CPU to other CPUs.</p> </li> </ul> <p>core \u4e0a\u5de5\u4f5c\u592a\u591a\uff0c\u8981\u63a8\u7ed9\u5176\u4ed6\u7684 core\u3002</p> <ul> <li>Pull migration \u2013 idle processors pulls waiting task from busy processor.</li> </ul> <p>core \u4e0a\u5de5\u4f5c\u592a\u5c11\uff0c\u5c31\u4ece\u5176\u4ed6\u7684 core \u4e0a\u62c9\u4e00\u4e9b\u4efb\u52a1\u8fc7\u6765\u3002</p>"},{"location":"OS/os3%20Scheduling/#processor-affinity","title":"Processor Affinity \u76f8\u5173\u6027","text":"<p>\u6709\u7684\u8fdb\u7a0b\u6211\u4eec\u60f3\u8981\u5728\u4e00\u4e2a core \u4e0a\u8dd1\u3002</p> <ul> <li>Soft affinity \u2013 the operating system attempts to keep a thread running on the same processor, but no guarantees.</li> <li>Hard affinity \u2013 allows a process to specify a set of processors it may run on.</li> </ul>"},{"location":"OS/os3%20Scheduling/#linux-scheduling","title":"Linux Scheduling","text":"<ul> <li>Nice command </li> <li>\u6570\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8</li> <li><code>ps -e -o uid,pid,ppid,pri,ni,cmd</code></li> </ul> <p>Round-Robin + priority. \u7b2c\u4e00\u4e2a\u7ea2\u6846 \\(O(N)\\) \u627e <code>counter</code> \u6700\u5927\u7684\u8fdb\u7a0b\uff0c\u5982\u679c <code>counter</code> \u4e0d\u4e3a 0 \u5c31\u6267\u884c\uff0c\u5426\u5219\u8bf4\u660e\u6240\u6709\u7684\u8fdb\u7a0b\u90fd\u5df2\u7ecf\u8dd1\u5b8c\u81ea\u5df1\u7684\u65f6\u95f4\u7247\u4e86\uff0c\u91cd\u65b0\u8d4b\u503c\u65f6\u95f4\u7247\uff0c\u6309\u7167\u4f18\u5148\u7ea7\u8d4b\u503c\u3002\uff08\u5f53\u65f6\u6570\u8d8a\u5927\uff0c\u8bf4\u660e\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u540e\u6765\u76f8\u53cd\u4e86\uff09</p> <ul> <li>0.11</li> </ul> <p></p> <ul> <li>1.2 \u4f7f\u7528circular queue\u5b9e\u73b0</li> <li>2.2  Scheduling classes, Priorities within classes</li> </ul> <p>\u6bcf\u6b21\u627e\u8fdb\u7a0b\u90fd\u8981 \\(O(N)\\)\uff0c\u540e\u6765\u6539\u4e3a\u4e86 \\(O(1)\\) \u7684\u7b97\u6cd5\uff08Linux 2.6\uff09</p> <ul> <li>active task: its time slice hasn\u2019t been fully consumed</li> <li>expired task: has used all of its time slice</li> </ul> <p>The kernel keeps two arrays of round-robin queues</p> <ul> <li>One for active tasks: one Round Robin queue per priority level</li> <li>One for expired tasks: one Round Robin queue per priority level</li> </ul> <p>\u6bcf\u4e2a\u4f18\u5148\u7ea7\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u91cc\u6709\u4e00\u4e2a Round Robin \u961f\u5217\u3002</p> <pre><code>struct prio_array {\n    int nr_active; // total num of tasks\n    unsigned long bitmap[5]; // priority bitmap\n    struct list_head queue[MAX_PRIO]; // the queues\n}\n</code></pre> <p>The bitmap contains one bit for each priority level. <code>bitmap</code> \u5b58\u54ea\u4e2a\u4f18\u5148\u7ea7\u91cc\u8fd8\u6709\u5143\u7d20\uff0c\u6700\u5f00\u59cb\u6240\u6709\u4f4d\u90fd\u662f 0\uff0c\u5982\u679c\u6709\u4f18\u5148\u7ea7\u91cc\u6709\u8fdb\u7a0b\uff0c\u5c31\u628a\u5bf9\u5e94\u7684\u4f4d\u8bbe\u4e3a 1\u3002\u627e\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u5c31\u662f\u4ece\u5de6\u5f80\u53f3\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a 1 \u7684\u4f4d\u3002x86 \u4e0a\u6b63\u597d\u6709\u4e00\u4e2a\u6307\u4ee4 <code>bsfl</code>\uff08bit scan forward - from right to left\uff09\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u5bf9\u5e94\u7684\u4f4d\uff0c\u7136\u540e\u518d\u4ece\u5bf9\u5e94\u7684 <code>task_list</code> \u53d6\u51fa\u4e00\u4e2a\u8fdb\u7a0b\u3002</p> <pre><code>prio_array.head_queue[bsfl(bitmap)].task_struct\n</code></pre> <p>\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u5b8c\u5b83\u7684\u65f6\u95f4\u7247\u540e\uff0c\u5c31\u4ece active array \u79fb\u5230 expired array\u3002\u5f53 active array \u4e3a\u7a7a\u65f6\uff0c\u5c31\u628a expired array \u548c active array \u4ea4\u6362\u3002</p> <p>\u95ee\u9898\u5728\u4e8e\uff1a\u4f18\u5148\u7ea7\u6570\u91cf\u53d7\u9650\u5236\uff1b\u800c\u4e14 policy \u548c mechanism \u7d27\u5bc6\u7ed1\u5b9a\uff0c\u96be\u4ee5\u7ef4\u62a4\uff0c\u6240\u4ee5\u540e\u6765\u6ca1\u6709\u7ee7\u7eed\u4f7f\u7528\u3002</p> <p>CFS: Completely Fair Scheduler</p> <ul> <li>Developed by the developer of \\(O(1)\\), with ideas from others</li> <li>Main idea: keep track of how fairly the CPU has been allocated to tasks, and \u201cfix\u201d the unfairness</li> <li>For each task, the kernel keeps track of its virtual time</li> <li>The sum of the time intervals during which the task was given the CPU since the task started</li> <li>Could be much smaller than the time since the task started</li> <li>Goal of the scheduler: give the CPU to the task with the smallest virtual time. i.e., to the task that\u2019s the least \"happy\"</li> </ul>"},{"location":"OS/os4%20Inter-Process%20Communication/","title":"Inter-Process Communication","text":""},{"location":"OS/os4%20Inter-Process%20Communication/#reasons-for-cooperating-processes","title":"Reasons for cooperating processes","text":"<ul> <li>Information sharing</li> <li>Computation speedup</li> <li>Modularity</li> <li>Convenience</li> </ul>"},{"location":"OS/os4%20Inter-Process%20Communication/#ipc-communication-models","title":"IPC Communication Models","text":"<ul> <li> <p>Most OSes implement both models</p> </li> <li> <p>Message-passing</p> </li> </ul> <p>\u9700\u8981\u5185\u6838\u7a7a\u95f4\u652f\u6301</p> <ul> <li>useful for exchanging small amounts of data</li> <li>simple to implement in the OS</li> <li>sometimes cumbersome for the user as code is sprinkled with send/recv operations</li> <li> <p>high-overhead: one syscall per communication operation</p> </li> <li> <p>Shared memory</p> </li> </ul> <p>\u975e\u5185\u6838\u7a7a\u95f4</p> <ul> <li>low-overhead: a few syscalls initially, and then none</li> <li>more convenient for the user since we\u2019re used to simply reading/writing from/to RAM</li> <li>more difficult to implement in the OS</li> </ul>"},{"location":"OS/os4%20Inter-Process%20Communication/#shared-memory","title":"Shared Memory","text":"<ul> <li>Processes need to establish a shared memory region</li> <li>One process creates a shared memory segment</li> <li> <p>Processes can then \u201cattach\u201d it to their address spaces</p> </li> <li> <p>Processes communicate by reading/writing to the shared memory region</p> </li> <li>They are responsible for not stepping on each other\u2019s toes</li> <li>The OS is not involved at all</li> </ul> <p></p> <p><code>ipcs -a</code> \u53ef\u4ee5\u67e5\u770b\u5f53\u524d IPC \u7684\u72b6\u6001\u3002</p> <ul> <li>Question: How do processes find out the ID of the shared memory segment?</li> <li>Better solution: one could use message-passing to communicate the id!</li> </ul> <p>\u5b58\u5728\u95ee\u9898\uff1a\u4e0d\u5b89\u5168\u3002\u4efb\u4f55\u4eba\u62ff\u5230 <code>share_id</code> \u90fd\u53ef\u4ee5\u628a\u5171\u4eab\u5185\u5b58 attach \u5230\u81ea\u5df1\u8fdb\u7a0b\u4e0a\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\u5176\u4ed6\u8fdb\u7a0b\u7684\u6570\u636e\u3001\u751a\u81f3\u505a DOS \u653b\u51fb\u3002</p>"},{"location":"OS/os4%20Inter-Process%20Communication/#message-passing","title":"Message Passing","text":"<ol> <li>Two fundamental operations:</li> </ol> <ul> <li>send: to send a message (i.e., some bytes)</li> <li>recv: to receive a message (i.e., some bytes)</li> </ul> <p>If processes P and Q wish to communicate they</p> <ul> <li>establish a communication \u201clink\u201d between them</li> </ul> <p>This \u201clink\u201d is an abstraction that can be implemented in many ways (even with shared memory!!)</p> <ul> <li> <p>place calls to <code>send()</code> and <code>recv()</code></p> </li> <li> <p>optionally shutdown the communication \u201clink\u201d</p> </li> </ul> <ol> <li>Implementing Message-Passing</li> </ol> <p>Implementation of communication link</p> <ul> <li> <p>Physical:</p> </li> <li> <p>Shared memory</p> </li> <li>Hardware bus</li> <li> <p>Network</p> </li> <li> <p>Logical:</p> </li> <li> <p>Direct or indirect</p> <ul> <li>Direct</li> </ul> <p>\u6709\u4e00\u4e2a P \u548c Q\uff0c\u76f4\u63a5\u53d1\u4fe1\u606f\u3002\u5982\u679c\u6709 n \u4e2a\u8fdb\u7a0b\uff0c\u9700\u8981\u5efa\u7acb \\(C^2_n\\) \u4e2a\u8fde\u63a5\u3002\u6bcf\u5bf9\u4e4b\u95f4\u4ec5\u5b58\u5728\u4e00\u4e2alink\uff0clink\u901a\u5e38\u662fbi-directional\u7684</p> <ul> <li> <p>Indirect</p> </li> <li> <p>\u6709\u4e00\u4e2a mailbox\uff0c\u53d1\u4fe1\u606f\u76f8\u5f53\u4e8e\u53d1\u7ed9\u4e00\u4e2a mailbox\u3002Each mailbox has a unique id. \u5982\u679c\u6709\u591a\u4e2a\u8fdb\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u662f\u7531\u54ea\u4e2a\u8fdb\u7a0b\u63a5\u6536\u4fe1\u606f\u3002</p> <ul> <li>\u591a\u4e2a\u8fdb\u7a0b\u63a5\u6536\u65f6\uff0c\u6709\u4ee5\u4e0bsolution</li> <li>\u4e00\u4e2alink\u6700\u591a\u53ea\u5141\u8bb8\u4e0e\u4e24\u4e2aprocess\u5efa\u7acb\u8054\u7cfb</li> <li>\u540c\u65f6\u95f4\u53ea\u5141\u8bb8\u6709\u4e00\u4e2aprocess\u6267\u884creceive\u64cd\u4f5c</li> <li>Allow the system to select arbitrarily the receiver </li> </ul> </li> <li> <p>Processes can communicate only if they share a mailbox</p> </li> <li>Each pair of processes may share several communication links \u5141\u8bb8\u7cfb\u7edf\u4efb\u610f\u9009\u62e9\u63a5\u6536\u673a</li> </ul> </li> <li> <p>Synchronous or asynchronous</p> <ul> <li>Synchronous: Blocking is considered synchronous</li> </ul> <p>\u5373\u6211\u4eec\u53d1\u4fe1\u606f\uff0c\u5982\u679c\u63a5\u6536\u8005\u6ca1\u6536\u5230\u4fe1\u606f\uff0c\u53d1\u9001\u8005\u5c31\u5835\u585e\u7740\u4e0d\u8d70\uff1b\u6211\u4eec\u6536\u4fe1\u606f\uff0c\u5982\u679c\u53d1\u9001\u8005\u6ca1\u6709\u53d1\u9001\u4fe1\u606f\uff0c\u63a5\u9001\u8005\u5c31\u5835\u585e\u7740\u4e0d\u8d70\u3002</p> <ul> <li> <p>Asynchronous: Non-blocking is considered asynchronous</p> </li> <li> <p>Non-blocking send -- the sender sends the message and continue</p> <p>Non-blocking receive -- the receiver receives a valid message, or null message</p> </li> <li> <p>\u5f02\u6b65\u6548\u7387\u66f4\u9ad8\uff0c\u540c\u6b65\u65f6\u6548\u6027\u66f4\u9ad8\u3002</p> </li> </ul> </li> <li> <p>Automatic or explicit buffering</p> <ul> <li>Zero capacity - no messages are queued on a link. Sender must wait for receiver.</li> <li>Bounded capacity - finite length of n messages. Sender must wait if link full.X</li> <li>Unbounded capacity - infinite length. Sender never waits.</li> </ul> </li> </ul>"},{"location":"OS/os4%20Inter-Process%20Communication/#pipes","title":"Pipes","text":"<ol> <li>Ordinary Pipes\uff1a\u6ca1\u6709\u540d\u5b57\uff0c\u53ea\u80fd\u901a\u8fc7 <code>fork()</code> \u6765\u4f20\u64ad\u3002 Ordinary pipes are unidirectional    - Producer writes to one end (the write-end of the pipe)    - Consumer reads from the other end (the read-end of the pipe)</li> </ol> <p>\u6ce8\u610f <code>fd[0]</code> \u662f read-end\uff0c<code>fd[1]</code> \u662f write-end\uff08\u5bf9\u4e8e\u53cc\u65b9\u90fd\u662f\uff09</p> <p>Windows calls these anonymous pipes</p> <ol> <li> <p>Named Pipes    - communication\u662f\u53cc\u5411\u7684    - \u4e0d\u9700\u8981parent-child relationship    - \u591a\u4e2a\u8fdb\u7a0b\u95f4\u53ef\u4ee5\u4f7f\u7528named pipes \u8fdb\u884c\u901a\u4fe1</p> </li> <li> <p>In UNIX, a pipe is mono-directional.    \u8981\u5b9e\u73b0\u4e24\u4e2a\u65b9\u5411\u4e00\u5b9a\u9700\u8981\u4e24\u4e2a pipe\u3002</p> </li> </ol> <ul> <li>The command \u201cls | grep foo\u201d creates two processes that communicate via a pipe</li> <li>The ls process writes on the write-end</li> <li>The grep process reads on the read-end</li> </ul>"},{"location":"OS/os4%20Inter-Process%20Communication/#client-server-communication","title":"Client-Server Communication","text":"<p>\u5e7f\u4e49\u4e0a\u7684 IPC\uff0c\u56e0\u4e3a\u662f\u8dd1\u5728\u4e24\u4e2a\u7269\u7406\u673a\u5668\u4e0a\u7684\u4ea4\u4e92\u3002</p> <ul> <li> <p>Sockets</p> </li> <li> <p>RPCs(Remote Procedure Calls)</p> </li> </ul> <p>\u6240\u6709\u7684\u4ea4\u4e92\u90fd\u662f\u548c stub \u901a\u4fe1\uff0cstub \u4f1a\u548c\u8fdc\u7aef\u7684 server \u901a\u4fe1\u3002 \u5b58\u5728\u7f51\u7edc\u95ee\u9898\uff0c\u5982\u4e22\u5305\u3002</p> <ul> <li>Java RMI</li> </ul> <p>RPC in Java</p>"},{"location":"OS/os5%20Threads/","title":"Threads","text":"<ul> <li>Multiple execution units with a process</li> <li>\u6808\u548cpc\u4e0d\u80fd\u5171\u4eab</li> </ul>"},{"location":"OS/os5%20Threads/#definition","title":"Definition","text":"<ul> <li> <p>A thread is a basic unit of execution within a process.</p> </li> <li> <p>Each thread has its own</p> <ul> <li>thread ID</li> <li>program counter</li> <li>register set</li> <li>Stack</li> </ul> </li> <li>It shares the following with other threads within the same process</li> <li>code section</li> <li>data section</li> <li>the heap (dynamically allocated memory): \u901a\u8fc7\u6307\u9488\u8bbf\u95ee\uff0c\u4e0d\u5728cache\u91cc\u6bd4\u8f83\u6162</li> <li> <p>open files and signals</p> </li> <li> <p>Concurrency: A multi-threaded process can do multiple things at once</p> </li> <li> <p>Advantages of Threads</p> </li> <li> <p>Economy</p> <ul> <li>Creating a thread is cheap</li> </ul> <p>\u5982\u679c\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u90a3\u4e48\u6211\u4eec\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u53ea\u9700\u8981\u7ed9\u5b83\u5206\u914d\u4e00\u4e2a\u6808\u3002Code\uff0cdata\uff0cheap \u90fd\u5df2\u7ecf\u5728\u5185\u5b58\u91cc\u5206\u914d\u597d\u4e86\u3002</p> <ul> <li>Context switching between threads is cheap</li> </ul> <p>Cache is hot, no need to cache flush.  </p> </li> <li> <p>Resource Sharing  Threads naturally share memory</p> <p>\u4e0d\u9700\u8981 IPC\u3002</p> <ul> <li>Having concurrent activities in the same address space is very powerful</li> </ul> </li> <li> <p>Responsiveness</p> </li> </ul> <p>\u5982\u5728 web server \u4e2d\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5728\u7b49\u5f85 I/O\uff0c\u5f53\u6709\u8bf7\u6c42\u6765\u65f6\u5c31\u518d\u5206\u914d\u4e00\u4e2a\u7ebf\u7a0b\u53bb\u5904\u7406\u3002\uff08\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u4ee3\u4ef7\u66f4\u5927\uff09</p> <ul> <li> <p>Scalability</p> <ul> <li>multi-core machine</li> </ul> </li> <li> <p>Drawbacks of Threads</p> </li> <li> <p>weak isolation between threads</p> <p>\u5982\u679c\u6709\u4e00\u4e2a\u7ebf\u7a0b\u51fa\u9519\uff0c\u90a3\u4e48\u6574\u4e2a\u8fdb\u7a0b\u90fd\u4f1a\u51fa\u9519\u3002 lead to process-based concurrency</p> </li> <li> <p>thread\u95f4\u6ca1\u6709\u9694\u79bb\uff0c\u4fdd\u62a4\u63aa\u65bd\u4e0d\u591f</p> </li> <li> <p>Typical challenges of multi-threaded programming</p> </li> <li> <p>Deal with data dependency and synchronization</p> </li> <li>Dividing activities among threads</li> <li>Balancing load among threads</li> <li>Split data among threads</li> <li>Testing and debugging</li> </ul>"},{"location":"OS/os5%20Threads/#user-threads-vs-kernel-threads","title":"User Threads vs. Kernel Threads","text":"<p>\u5982\u679c\u5185\u6838\u4e0d\u77e5\u9053\u4f60\u8fd9\u4e2a user thread\uff0c\u5b8c\u5168\u5728 user space \u6267\u884c\uff0c\u5c31\u662f user space-based thread; \u5982\u679c\u5185\u6838\u77e5\u9053\u4f60\u8fd9\u4e2a user thread\uff0c\u5c31\u662f kernel-based thread\u3002</p> <ul> <li> <p>Many-to-One Model</p> </li> <li> <p>\u4f18\u70b9\uff1amulti-threading is efficient and low-overhead.</p> </li> <li>\u7f3a\u70b9\uff1a\u5185\u6838\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u65e0\u6cd5\u53d1\u6325 multi-core \u7684\u4f18\u52bf\uff1b\u4e00\u65e6\u4e00\u4e2a\u7ebf\u7a0b\u88ab\u963b\u585e\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e5f\u4f1a\u88ab\u963b\u585e\u3002</li> </ul> <ul> <li>One-to-One Model</li> </ul> <p>\u628a\u7ebf\u7a0b\u7684\u7ba1\u7406\u53d8\u5f97\u5f88\u7b80\u5355\uff0c\u7ba1\u7406\u5f88\u7b80\u6d01\uff0c\u73b0\u5728 Linux\uff0cWindows \u90fd\u662f\u8fd9\u79cd\u6a21\u578b\u3002\u786c\u4ef6\u4fbf\u5b9c\u4e86</p> <p>\u7f3a\u70b9\uff1aoverhead\u5927</p> <ul> <li>Many-to-Many Model</li> </ul> <p>m to n \u7ebf\u7a0b\uff0c\u6298\u4e2d\u3002\u7f3a\u70b9\u662f\u592a\u590d\u6742\u3002</p> <ul> <li>Two-Level Model</li> </ul> <p>\u53ef\u4ee5\u9009\u62e9 many to many \u6216\u8005 one to one\u3002</p> <ol> <li>implementation</li> </ol> <ul> <li> <p>Java Threads / Kernel Threads: In modern JVMs, application threads are mapped to kernel threads</p> <p></p> </li> </ul>"},{"location":"OS/os5%20Threads/#threading-issues","title":"Threading Issues","text":"<ol> <li>Semantics of <code>fork()</code> and <code>exec()</code></li> </ol> <p>\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u4e86 <code>fork()</code>\uff0c\u53ef\u80fd\u53d1\u751f\u4e24\u79cd\u60c5\u51b5\uff1a\u53ea\u590d\u5236\u8c03\u7528\u7ebf\u7a0b\uff0c\u6216\u8005\u590d\u5236\u6240\u6709\u7ebf\u7a0b\u3002</p> <p>Some OSes provide both options. In Linux the first option above is used</p> <p>\u56e0\u4e3a\u5927\u90e8\u5206\u65f6\u5019 <code>fork</code> \u4e4b\u540e\u4f1a\u63a5 <code>exec</code>\uff0c\u62b9\u6389\u6240\u6709\u7684\u6570\u636e\uff0c\u56e0\u6b64\u76f4\u63a5\u590d\u5236\u8c03\u7528\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4e86\u3002</p> <ol> <li>Signals</li> </ol> <ul> <li> <p>multiple options: signal\u7ed9\u8c03\u7528\u7ebf\u7a0b/\u6240\u6709\u7ebf\u7a0b/certain\u7ebf\u7a0b/\u6307\u5b9a\u4e00\u4e2a\u7ebf\u7a0b\u63a5\u6536\u6240\u6709signal</p> </li> <li> <p>Linux\u5b9e\u73b0\uff1a\u63d0\u4f9b\u591a\u4e2a\u63a5\u53e3\u81ea\u5df1\u9009 dealing with threads and signals is tricky but well understood with many tutorials on the matter and man pages</p> </li> </ul> <ol> <li>Safe Thread Cancellation</li> </ol> <ul> <li>\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\uff1a\u53d6\u6d88\u4e86\u4e00\u4e2a\u6b63\u5728\u5de5\u4f5c\u7684\u7ebf\u7a0b</li> <li>two approach</li> <li>Asynchronous cancellation\uff1a\u7acb\u5373\u7ec8\u6b62<ul> <li>problem: \u53ef\u80fd\u4f1a\u5bfc\u81f4inconsistent state\u6216synchronization problem\uff0cAbsolutely terrible bugs lurking in the shadows</li> </ul> </li> <li>Deferred cancellation: A thread periodically checks whether it should terminate \u7ebf\u7a0b\u4f1a\u81ea\u5df1\u8fdb\u884c\u5468\u671f\u6027\u68c0\u67e5\uff0c\u5982\u679c\u53d6\u6d88\u6389\u4e0d\u4f1a\u5f71\u54cd\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u5c31\u628a\u81ea\u5df1\u53d6\u6d88\u6389\u3002<ul> <li>problem: the code is cumbersome due to multiple cancellation points</li> </ul> </li> <li>Invoking thread cancellation requests cancellation, but actual cancellation depends on thread state</li> </ul>"},{"location":"OS/os5%20Threads/#linux-threads","title":"Linux Threads","text":"<p>In Linux, a thread is also called a light-weight process (LWP)</p> <p>The <code>clone()</code> syscall is used to create a thread or a process</p> <p>TCB \u7528\u6765\u5b58\u50a8\u7ebf\u7a0b\u7684\u4fe1\u606f\uff0cLinux \u5e76\u4e0d\u533a\u5206 PCB \u548c TCB\uff0c\u90fd\u662f\u7528 <code>task_struct</code> \u6765\u8868\u793a\u3002</p> <ul> <li>single-threaded process vs multi-threaded process.</li> <li>\u5171\u4eab\u5185\u5bb9\uff1a\u901a\u8fc7\u6307\u9488\u6307\u5bf9\u5e94\u7ed3\u6784\u4f53</li> </ul> <ul> <li>PID \u5982\u679c\u548c LWP \u76f8\u540c\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8fdb\u7a0b\u53ea\u6709\u8fd9\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u8bf4\u660e\u8fdb\u7a0b\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6b64\u65f6\u8fdb\u7a0b\u7684 PID \u662f\u4e3b\u7ebf\u7a0b\u7684 LWP\u3002</li> </ul> <ul> <li>A process is</li> <li>either a single thread + an address space, PID is thread ID</li> <li> <p>or multiple threads + an address space, PID is the leading thread ID</p> </li> <li> <p>Threads with Process \u2013 What is shared</p> </li> <li><code>mm_struct</code> is shared, <code>task_struct</code>, <code>pid</code>, <code>stack</code> and <code>comm</code> are not shared.</li> </ul> <ul> <li>One task in Linux</li> <li>Same task_struct (PCB) means same thread<ul> <li>One user thread maps to one kernel thread</li> <li>But actually, they are the same thread</li> </ul> </li> <li>Can be executed in user space: User code, user space stack</li> <li>Can be executed in kernel space: Kernel code, kernel space stack</li> </ul> <p>\u4f8b\u5982\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u7ebf\u7a0b\u5207\u6362\u5230\u5185\u6838\u6a21\u5f0f\uff0c\u76f8\u5f53\u4e8e\u662f\u7528\u6237\u7ebf\u7a0b\u5bf9\u5e94\u7684\u5185\u6838\u7ebf\u7a0b\u5728\u6267\u884c\uff0c\u6b64\u65f6\u5c31\u4f7f\u7528\u5185\u6838\u7a7a\u95f4\u7684\u6808\u3002</p> <ul> <li>example</li> </ul>"},{"location":"OS/os6%20Synchronization/","title":"Synchronization","text":""},{"location":"OS/os6%20Synchronization/#race-condition","title":"Race Condition","text":"<p>Several processes (or threads) access and manipulate the same data concurrently and the outcome of the execution depends on the particular order in which the access takes place, is called a race-condition </p> <p>\u5982\u591a\u4e2a\u8fdb\u7a0b\u5e76\u884c\u5730\u5199\u6570\u636e\uff0c\u7ed3\u679c\u53d6\u51b3\u4e8e\u5199\u7684\u5148\u540e\u987a\u5e8f</p> <ul> <li>\u5355\u4e2acall\u4e5f\u53ef\u80fd\u51fa\u73b0race condition</li> </ul>"},{"location":"OS/os6%20Synchronization/#critical-section","title":"Critical Section","text":"<ol> <li>General structure of process</li> </ol> <p>\u6bcf\u4e2aprocess\u90fd\u6709critical section segment</p> <p>\u540c\u65f6\u95f4\u5185critical section\u53ea\u80fd\u6709\u4e00\u4e2a\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u5fc5\u987b\u5728entry section\u83b7\u53d6critical section\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4e4b\u540epermission\u5728exit section\u91ca\u653e</p> <ol> <li>Critical Section Handling in OS</li> </ol> <ul> <li>Single-core system: preventing interrupts</li> <li>Multiple-processor: preventing interrupts are not feasible (depending on if kernel is preemptive or non-preemptive)</li> <li>Preemptive \u2013 allows preemption of process when running in kernel mode</li> <li>Non-preemptive \u2013 runs until exits kernel mode, blocks, or voluntarily yields CPU</li> </ul> <ol> <li>Solution: <code>Three Requirements</code></li> </ol> <p>Mutual Exclusion(\u4e92\u65a5\u8bbf\u95ee)\u3001Progress(\u7a7a\u95f2\u8ba9\u8fdb)\u3001Bounded waiting(\u6709\u9650\u7b49\u5f85)</p> <ul> <li>Mutual Exclusion\uff08\u4e92\u65a5\u8bbf\u95ee\uff09<ul> <li>\u5728\u540c\u4e00\u65f6\u523b\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u4e34\u754c\u533a</li> </ul> </li> <li>Progress\uff08\u7a7a\u95f2\u8ba9\u8fdb\uff09<ul> <li>\u5f53\u6ca1\u6709\u7ebf\u7a0b\u5728\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\u65f6\uff0c\u5fc5\u987b\u5728\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u7684\u7ebf\u7a0b\u4e2d\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5141\u8bb8\u5176\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u6267\u884c\u7684\u8fdb\u5c55</li> </ul> </li> <li>Bounded waiting\uff08\u6709\u9650\u7b49\u5f85\uff09<ul> <li>\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u540e\uff0c\u5fc5\u987b\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u83b7\u5f97\u8bb8\u53ef\u5e76\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4e0d\u80fd\u65e0\u9650\u7b49\u5f85</li> <li>prevent starvation</li> </ul> </li> </ul> <ol> <li>Peterson's Solution</li> </ol> <p>Peterson\u2019s solution solves two-processes/threads synchronization (Only works for two processes case)</p> <ul> <li>It assumes that LOAD and STORE are atomic</li> <li>atomic: execution cannot be interrupted</li> <li>Two processes share two variables</li> <li><code>boolean flag[2]</code>: whether a process is ready to enter the critical section</li> <li><code>int turn</code>: whose turn it is to enter the critical section</li> </ul> <p>\u9a8c\u8bc1\u4e09\u4e2a\u6761\u4ef6</p> <ul> <li> <p>Mutual exclusion</p> </li> <li> <p>P0 enters CS:</p> <ul> <li>Either <code>flag[1]=false</code> or <code>turn=0</code></li> <li>Now prove P1 will not be able to enter CS</li> </ul> </li> <li>Case 1: <code>flag[1]=false</code> -&gt; P1 is out CS</li> <li>Case 2: <code>flag[1]=true</code>, <code>turn=1</code> -&gt; P0 is looping, contradicts with P0 is in CS</li> <li> <p>Case 3: <code>flag[1]=true</code>, <code>turn=0</code> -&gt; P1 is looping</p> </li> <li> <p>Process requirement</p> </li> </ul> <ul> <li>Bounded waiting: Whether P0 enters CS depends on P1; Whether P1 enters CS depends on P0; P0 will enter CS after one limited entry P1</li> </ul> <p>Peterson\u2019s Solution is not guaranteed to work on modern architectures.</p> <ul> <li> <p>Only works for two processes case</p> </li> <li> <p>It assumes that LOAD and STORE are atomic</p> </li> <li> <p>Instruction reorder</p> </li> </ul> <p>\u6307\u4ee4\u4f1a\u4e71\u5e8f\u6267\u884c\u3002</p> <p></p> <p>100 is the expected output. \u4f46\u662f\u7ebf\u7a0b 2 \u7684\u4ee3\u7801\u53ef\u80fd\u88ab\u4e71\u5e8f\uff0c\u4e24\u6761\u6307\u4ee4\u4ea4\u6362\u987a\u5e8f\uff0c\u8fd9\u6837\u8f93\u51fa\u5c31\u53ef\u80fd\u53d8\u6210 0\u3002</p>"},{"location":"OS/os6%20Synchronization/#hardware-support-for-synchronization","title":"Hardware Support for Synchronization","text":"<p>Many systems provide hardware support for critical section code</p> <ul> <li>Uniprocessors: disable interrupts</li> <li>Solutions:</li> <li>Memory barriers</li> <li>Hardware instructions<ul> <li>test-and-set: either test memory word and set value</li> <li>compare-and-swap: compare and swap contents of two memory words</li> </ul> </li> <li>Atomic variables</li> </ul> <ol> <li>Memory Barriers</li> </ol> <p>Memory model are the memory guarantees a computer architecture makes to application programs, may be either:</p> <ul> <li> <p>Strongly ordered \u2013 where a memory modification of one processor is immediately visible to all other processors. \u4e00\u4e2a\u5185\u5b58\u7684\u4fee\u6539\u8981\u7acb\u523b\u88ab\u6240\u6709\u7684 processors \u770b\u5230\u3002</p> </li> <li> <p>Weakly ordered \u2013 where a memory modification of one processor may not be immediately visible to all other processors.</p> </li> </ul> <p>A memory barrier is an instruction that forces any change in memory to be propagated (made visible) to all other processors.</p> <p>\u6dfb\u52a0memory barrier\u4f7f\u4e4b\u524d\u4ee3\u7801\u4e0d\u4f1a\u51fa\u9519</p> <p></p> <ol> <li>Hardware Instructions</li> </ol> <p>Special hardware instructions that allow us to either test-and-modify the content of a word, or two swap the contents of two words atomically (uninterruptable)</p> <ul> <li> <p>test-and-set instruction</p> </li> <li> <p>defined as below, but atomically</p> </li> </ul> <pre><code>bool test_set (bool *target)\n{\n    bool rv = *target;\n    *target = TRUE;\n    return rv:\n}\n</code></pre> <ul> <li>example: lock\u4e3atrue\u65f6\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af\uff0cfalse\u65f6\u8fdb\u5165CS\u3002\u6709\u53ef\u80fd\u4e0d\u6ee1\u8db3bounded-waiting</li> </ul> <pre><code>bool lock = FALSE\ndo {\n    while (test_set(&amp;lock)); // busy wait\n    critical section\n    lock = FALSE;\n    remainder section \n} while (TRUE);\n</code></pre> <ul> <li>\u8fbe\u4e0d\u5230bounded waiting\u7684\u8981\u6c42</li> </ul> <ul> <li>\u6539\u8fdb</li> </ul> <ul> <li> <p>Compare-and-Swap Instruction \u5b9e\u73b0\u4e86</p> </li> <li> <p>Definition: Executed atomically, the swap takes place only under this condition.</p> </li> </ul> <pre><code>int compare_and_swap(int *value, int expected, int new_value)\n{\n int temp = *value;\n if (*value == expected)\n  *value = new_value;\n return temp;\n}\n</code></pre> <ul> <li>Shared integer lock initialized to 0</li> </ul> <pre><code>while (true)\n{\n while (compare_and_swap(&amp;lock, 0, 1) != 0)\n   ; /* do nothing */\n /* critical section */\n lock = 0;\n /* remainder section */\n}\n</code></pre> <ul> <li>in practice: ARM64</li> </ul> <ul> <li> <p>Atomic Variables</p> </li> <li> <p>provide atomic (uninterruptible) updates on basic data types such as integers and booleans</p> <ul> <li>increment(&amp;sequence); for example</li> </ul> <pre><code>void increment(atomic_int *v) {\n    int temp;\n    do {\n      temp = *v;\n  } while (temp != (compare_and_swap(v,temp,temp+1));\n}\n</code></pre> </li> </ul>"},{"location":"OS/os6%20Synchronization/#mutex-locks","title":"Mutex Locks","text":"<ol> <li> <p>Calls to acquire() and release() must be atomic</p> </li> <li> <p>this solution requires busy waiting, this lock therefore called a spinlock</p> </li> </ol> <pre><code>bool locked = false;\nacquire() {\n    while (compare_and_swap(&amp;locked, false, true))\n        ; //busy waiting\n}\nrelease() {\n    locked = false;\n}\n</code></pre> <p>\u95ee\u9898\uff1a\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u6709\u65f6\u95f4\u7247\uff0c\u4f46\u662f\u62ff\u4e0d\u5230\u9501\uff0c\u4e00\u76f4 spin\uff0c\u4f1a\u6d6a\u8d39 CPU \u65f6\u95f4\u3002</p> <ol> <li>reduce busy waiting: yield -&gt; moving from running to sleeping</li> </ol> <pre><code>void init() {\n    flag = 0;\n}\nvoid lock() {\n    while (test_set(&amp;flag, 1) == 1)\n        yield(); // give up the CPU\n}\nvoid unlock() {\n    flag = 0;\n}\n</code></pre> <p>add a queue, when the lock is locked, change process\u2019s state to <code>SLEEP</code>, add to the queue, and call <code>schedule()</code></p>"},{"location":"OS/os6%20Synchronization/#semaphore","title":"Semaphore","text":"<ol> <li> <p>two types    - Counting semaphore \u2013 integer value can range over an unrestricted domain    - Binary semaphore \u2013 integer value can range only between 0 and 1</p> <ul> <li>\u548cmutex lock\u4e00\u6837</li> </ul> </li> <li> <p><code>wait()</code> and <code>signal()</code> (Originally called P() and V() Dutch)</p> </li> </ol> <ul> <li> <p><code>wait()</code> \u60f3\u62ff\u5230\u8fd9\u4e2a semaphore\uff0c\u5982\u679c\u62ff\u4e0d\u5230\uff0c\u5c31\u4e00\u76f4\u7b49\u5f85\u3002</p> <pre><code>wait(S) { \n    while (S &lt;= 0) ; // busy wait\n    S--;\n}\n</code></pre> </li> <li> <p><code>signal()</code> \u91ca\u653e semaphore\u3002</p> <pre><code>signal(S) { \n    S++;\n}\n</code></pre> </li> </ul> <ol> <li>data structure of waiting queue</li> </ol> <pre><code>typedef struct { \n    int value; \n    struct list_head * waiting_queue; \n} semaphore;\n</code></pre> <ol> <li>two operations    - block:\u628a\u5f53\u524d\u7684\u8fdb\u7a0b sleep\uff0c\u653e\u5230 waiting queue \u91cc\u9762\u3002    - wakeup:\u4ece waiting queue \u91cc\u9762\u62ff\u51fa\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u653e\u5230 ready queue \u91cc\u9762\u3002</li> <li>implementation</li> </ol> <pre><code>wait(semaphore *S) {\n    S-&gt;value--;\n    if (S-&gt;value &lt; 0) {\n        add this process to S-&gt;list;\n        block();\n    }\n}\n\nsignal(semaphore *S) {\n    S-&gt;value++;\n    if (S-&gt;value &lt;= 0) {\n        remove a proc.P from S-&gt;list;\n        wakeup(P);\n    }\n}\n</code></pre> <ul> <li>\u9700\u8981\u8fdb\u884c\u539f\u5b50\u4fdd\u62a4\uff0c\u5426\u5219\u591a\u8fdb\u7a0b\u540c\u65f6signal\u5c31\u4f1a\u51fa\u95ee\u9898\uff0c\u901a\u8fc7spinlock\u5b9e\u73b0</li> <li>\u5173\u4e8ebusy waiting: binary\u7684\u6709\uff0ccounting\u7684\u6ca1\u6709\u3002cs\u91cc\u65e0busy waiting\uff08\u6ca1\u6709\u62ff\u5230 semaphore \u5c31\u4f1a sleep\uff0c\u8fd8\u6ca1\u6709\u8d70\u5230 critical section\uff09\uff0c\u53ea\u6709 <code>wait</code> \u548c <code>signal</code> \u91cc\u9700\u8981 busy waiting </li> </ul> <p>Summary: Comparison between mutex and semaphore</p> <ul> <li>Mutex or spinlock</li> <li>Pros: no blocking</li> <li>Cons: Waste CPU on looping</li> <li>Good for short critical section</li> <li>Semaphore</li> <li>Pros: no looping</li> <li>Cons: context switch is time-consuming</li> <li>Good for long critical section</li> </ul> <ol> <li>in practice    - 21\u4e0e22\u884c\u4e92\u6362\u4f1a\u5bfc\u81f4\u6301\u9501sleep\uff0c\u6781\u5927\u964d\u4f4e\u6548\u7387    - spinlock\u4fdd\u8bc1\u64cd\u4f5c\u539f\u5b50\u6027</li> </ol>"},{"location":"OS/os6%20Synchronization/#deadlock-and-starvation","title":"Deadlock and Starvation","text":"<ol> <li> <p>deadlock: two or more processes are waiting indefinitely for an event that can be caused by only one of the waiting processes.</p> </li> <li> <p>starvation: indefinite blocking, a process may never be removed from the semaphore\u2019s waiting queue</p> </li> <li> <p>dealock\u4e00\u5b9a\u5bfc\u81f4starvation</p> </li> </ol>"},{"location":"OS/os6%20Synchronization/#priority-inversion","title":"Priority Inversion","text":"<ol> <li> <p>\u9ad8\u4f18\u5148\u7ea7\u7b49\u4f4e\u4f18\u5148\u7ea7\uff08\u9501\u5148\u88ab\u4f4e\u4f18\u5148\u7ea7\u62ff\u5230\uff09\uff0c\u4f46\u662f\u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u62ff\u4e0d\u5230 CPU\uff0c\u5c31\u65e0\u6cd5\u91ca\u653e\u9501\uff0c\u9ad8\u4f18\u5148\u7ea7\u4e00\u76f4\u7b49\u5f85\u9501</p> </li> <li> <p>solution: priority inheritance, </p> </li> <li> <p>temporary assign the highest priority of waiting process (\\(P_H\\)) to the process holding the lock (\\(P_L\\)) </p> </li> </ol> <p>\u5982\u679c\u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u62ff\u5230\u4e86\u9501\uff0c\u800c\u4e14\u8fd9\u4e2a\u9501\u4e0a\u6709\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u5728\u7b49\uff0c\u5c31\u63d0\u9ad8\u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u7ee7\u627f\u9501\u7684\u4f18\u5148\u7ea7\uff08\u53d6\u51b3\u4e8e\u5728\u8fd9\u4e2a\u9501\u4e0a\u7b49\u5f85\u7684\u8fdb\u7a0b\u7684\u6700\u9ad8\u7684\u4f18\u5148\u7ea7\uff09\u3002</p>"},{"location":"OS/os6%20Synchronization/#linux-synchronization","title":"Linux Synchronization","text":"<p>2.6 \u4ee5\u524d\u7684\u7248\u672c\u7684 kernel \u4e2d\u901a\u8fc7\u7981\u7528\u4e2d\u65ad\u6765\u5b9e\u73b0\u4e00\u4e9b\u77ed\u7684 critical section\uff1b2.6 \u53ca\u4e4b\u540e\u7684\u7248\u672c\u7684 kernel \u662f\u62a2\u5360\u5f0f\u7684\u3002</p> <p>Linux \u63d0\u4f9b\uff1a</p> <ul> <li>Atomic integers</li> <li>Spinlocks</li> <li>Semaphores,\u5728 <code>linux/include/linux/semaphore.h</code> \u4e2d\uff0c<code>down()</code> \u662f lock\uff08\u5982\u679c\u8981\u8fdb\u5165 sleep\uff0c\u5b83\u4f1a\u5148\u91ca\u653e\u9501\u518d\u7761\u7720\uff0c\u5524\u9192\u4e4b\u540e\u4f1a\u7acb\u523b\u91cd\u65b0\u83b7\u5f97\u9501\uff09\uff0c<code>up()</code> \u662f unlock\u3002 </li> <li>Reader-writer locks</li> </ul>"},{"location":"OS/os6%20Synchronization/#posix-synchronization","title":"POSIX Synchronization","text":"<p>POSIX API provides</p> <ul> <li>mutex locks</li> <li>semaphores</li> <li>condition variable</li> </ul>"},{"location":"OS/os6%20Synchronization/#mutex-locks_1","title":"Mutex Locks","text":"<ul> <li>Creating and initializing the lock</li> </ul> <pre><code>#include &lt;pthread.h&gt;\npthread_mutex_t mutex;\n/* create and initialize the mutex lock */\npthread_mutex_init(&amp;mutex, NULL);\n</code></pre> <ul> <li>Acquiring and releasing the lock</li> </ul> <pre><code>/* acquire the mutex lock */\npthread_mutex_lock(&amp;mutex);\n/* critical section */\n/* release the mutex lock */\npthread_mutex_unlock(&amp;mutex);\n</code></pre>"},{"location":"OS/os6%20Synchronization/#semaphores","title":"Semaphores","text":"<p>Named semaphores can be used by unrelated processes, unnamed cannot. <code>sem_open(), sem_init(), sem_wait(), sem_post()</code></p>"},{"location":"OS/os6%20Synchronization/#unamed-semaphores","title":"Unamed Semaphores","text":"<ul> <li>Creating an initializing the semaphore:</li> </ul> <pre><code>#include &lt;semaphore.h&gt;\nsem_t sem;\n/* Create the semaphore and initialize it to 1 */\nsem_init(&amp;sem, 0, 1);\n</code></pre> <ul> <li>Acquiring and releasing the semaphore:</li> </ul> <pre><code>/* acquire the semaphore */\nsem_wait(&amp;sem);\n/* critical section */\n/* release the semaphore */\nsem_post(&amp;sem);\n</code></pre>"},{"location":"OS/os6%20Synchronization/#named-semaphores","title":"Named Semaphores","text":"<ul> <li>Creating an initializing the semaphore:</li> </ul> <pre><code>#include &lt;semaphore.h&gt;\nsem_t *sem;\n/* Create the semaphore and initialize it to 1 */\nsem = sem_open(\"SEM\", O_CREAT, 0666, 1);\n</code></pre> <ul> <li> <p>Another process can access the semaphore by referring to its name SEM.</p> </li> <li> <p>Acquiring and releasing the semaphore:</p> </li> </ul> <pre><code>/* acquire the semaphore */\nsem_wait(sem);\n/* critical section */\n/* release the semaphore */\nsem_post(sem);\n</code></pre>"},{"location":"OS/os6%20Synchronization/#condition-variable","title":"Condition Variable","text":"<p>When should we use condition variables?</p> <p>Operations supported by a condition variable are:</p> <ul> <li><code>wait(condition, lock)</code>: release lock, put thread to sleep until condition is signaled; when thread wakes up again, re-acquire lock before returning.</li> </ul> <p>\u7b49\u5f85\u4e00\u4e2a\u6761\u4ef6\uff08\u5148\u653e\u9501\u7136\u540e\u7761\u7720\uff0c\u7b49\u5f85\u88ab\u5524\u9192\uff0c\u88ab\u5524\u9192\u4e4b\u540e\u91cd\u65b0\u83b7\u5f97\u9501\uff09\u3002</p> <ul> <li><code>signal(condition, lock)</code>: if any threads are waiting on condition, wake up one of them. Caller must hold lock, which must be the same as the lock used in the wait call.</li> </ul> <p>\u5524\u9192\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b\u3002</p> <ul> <li><code>broadcast(condition, lock)</code>: same as signal, except wake up all waiting threads.</li> </ul> <p>\u5524\u9192\u6240\u6709\u7684\u7b49\u5f85\u7ebf\u7a0b\u3002</p> <pre><code>pthread_mutex_t mutex; \npthread_cond_t cond_var;\npthread_mutex_init(&amp;mutex, NULL); \npthread_cond_init(&amp;cond_var, NULL);\n// Thread waiting for the condition a == b to become true:\npthread_mutex_lock(&amp;mutex);\nwhile(a != b)                               // \u4e00\u822c\u8981\u91cd\u590d\u5c1d\u8bd5\uff0c\u6240\u4ee5\u7528 while \u800c\u4e0d\u662f if\n    pthread_cond_wait(&amp;cond_var, &amp;mutex);   // release lock when wait, acquire lock when being signaled\npthread_mutex_unlock(&amp;mutex);\n// Thread signaling another thread waiting on the condition variable:\npthread_mutex_lock(&amp;mutex);\na = b;\npthread_cond_signal(&amp;cond_var);\npthread_mutex_unlock(&amp;mutex);\n</code></pre> <ul> <li>usage scenarios</li> </ul> <ul> <li> <p>Condition variable can wake up all threads, semaphore can only wake up one by one.</p> </li> <li> <p>Sometimes we only care if the queue is empty or not, while don\u2019t care the queue length.</p> </li> </ul> <p>\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u5173\u5fc3\u7b49\u5f85\u961f\u5217\u7684\u957f\u5ea6\uff0c\u90a3\u4e48 semaphore \u7684 val \u5c31\u6ca1\u6709\u7528\u5904\u4e86\u3002</p> <ul> <li>Mutex is used to guarantee that operations are atomic.</li> </ul>"},{"location":"OS/os6%20Synchronization/#examples","title":"Examples","text":""},{"location":"OS/os6%20Synchronization/#bounded-buffer-problem","title":"Bounded-buffer problem","text":"<p>\u5c31\u8003\u5230\u8fd9\u96be\u5ea6</p> <ol> <li>\u5b9a\u4e49</li> </ol> <p>Two processes, the producer and the consumer share n buffers</p> <ul> <li> <p>the producer generates data, puts it into the buffer.</p> </li> <li> <p>the producer won\u2019t try to add data into the buffer if it is full.</p> <p>\u5f53 buffer \u6ee1\u7684\u65f6\u5019\uff0c\u751f\u4ea7\u8005\u4e0d\u80fd\u518d\u653e\u6570\u636e\uff0c\u5e94\u8be5 sleep\u3002</p> </li> <li> <p>the consumer consumes data by removing it from the buffer.</p> </li> <li> <p>the consumer won\u2019t try to remove data from an empty buffer.</p> <p>\u5f53 buffer \u7a7a\u7684\u65f6\u5019\uff0c\u6d88\u8d39\u8005\u4e0d\u80fd\u518d\u53d6\u6570\u636e\uff0c\u5e94\u8be5 sleep\u3002</p> </li> </ul> <ol> <li>Solution: n\u4e2abuffer\uff0c\u6bcf\u4e2a\u653e\u4e00\u4e2aitem\u3002semaphore mutex \u521d\u59cb\u7f6e\u4e3a1\uff0c\u4e92\u65a5\u4fdd\u62a4\u3002\u8fd8\u9700\u8981\u4e24\u4e2a semaphore\uff0c\u5206\u522b\u662ffull-slots\u548cempty-slots\uff0c\u5206\u522b\u521d\u59cb\u4e3a0\u548cN</li> </ol> <ul> <li>The producer process</li> </ul> <pre><code>do {\n    //produce an item\n    ...\n    wait(empty-slots);      // \u628a empty-slots \u51cf\u4e00\uff08\u521d\u59cb\u4e3a N\uff09\n    wait(mutex);\n    //add the item to the buffer\n    ...\n    signal(mutex);\n    signal(full-slots);\n} while (TRUE)\n</code></pre> <p>\u8fd9\u91cc<code>wait()</code>\u7684\u987a\u5e8f\u4e0d\u80fd\u8c03\u6362\uff1a\u5982\u679c\u5148<code>wait(mutex)</code>\uff0c\u90a3\u4e48<code>wait(empty-slots)</code>\u4e4b\u540e\uff0c\u5982\u679c buffer \u7a7a\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u5e26\u7740 mutex \u4f11\u7720\uff0c\u8fd9\u6837\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4e5f\u62ff\u4e0d\u5230\u8fd9\u4e2a\u9501\u4e86\u3002</p> <p>\u540c\u65f6\u4e5f\u4e0d\u80fd\u5148<code>signal(full-slots)</code>\uff0c\u5426\u5219\u5b9e\u9645buffer\u8fd8\u6ca1\u6dfb\u52a0\u5185\u5bb9\uff0c\u5c31\u52a01\u4e86</p> <ul> <li>The consumer process</li> </ul> <pre><code>do {\n    wait(full-slots);           // \u628a full-slots \u51cf\u4e00\uff08\u521d\u59cb\u4e3a 0\uff09\n    wait(mutex);\n    //remove an item from the buffer\n    ...\n    signal(mutex);\n    signal(empty-slots);\n} while (TRUE)\n</code></pre>"},{"location":"OS/os6%20Synchronization/#readers-writers-problem","title":"Readers-writers problem","text":"<ol> <li>\u5b9a\u4e49</li> </ol> <p>A data set is shared among a number of concurrent processes</p> <ul> <li>readers: only read the data set; they do not perform any updates</li> <li>writers: can both read and write</li> </ul> <p>\u591a\u4e2a reader \u53ef\u4ee5\u5171\u4eab\uff0c\u5373\u540c\u65f6\u8bfb\uff1b\u4f46\u53ea\u80fd\u6709\u4e00\u4e2a write \u8bbf\u95ee\u6570\u636e\uff08\u5199\u548c\u8bfb\u4e5f\u4e0d\u5171\u4eab\uff09\u3002</p> <ol> <li>Solution</li> </ol> <ul> <li>semaphore mutex initialized to 1</li> <li>semaphore write initialized to 1</li> <li>integer readcount initialized to 0</li> </ul> <ol> <li>Code(Reader first)</li> </ol> <ul> <li>The writer process</li> </ul> <pre><code>The writer process\ndo {\n    wait(write);\n    //write the shared data\n    ....\n    signal(write);\n} while (TRUE);\n</code></pre> <ul> <li>The reader process</li> </ul> <pre><code>do {\n    wait(mutex);\n    readcount++;\n    if (readcount == 1) \n        wait(write);\n    signal(mutex)\n\n    //reading data\n    ...\n    wait(mutex);\n    readcount--;\n    if (readcount == 0) \n        signal(write);\n    signal(mutex);\n} while(TRUE);\n</code></pre> <p>mutex \u7528\u6765\u4fdd\u62a4<code>readcount</code>\u3002\u8fd9\u91cc\u5982\u679ccount\u662f1\uff0c\u5c31\u83b7\u5f97<code>write</code>\u7684\u9501\u6765\u4fdd\u62a4\u8fd9\u4e2aread\u3002\u5047\u8bbewriter\u62ff\u5230\u4e86\u9501\uff0c\u6765\u4e865\u4e2areader\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u4f1asleep\u5728write\u4e0a\uff0c\u5269\u4e0b4\u4e2areader\u4f1asleep\u5728mutex\u4e0a\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019\u7b2c\u4e00\u4e2areader\u8fd8\u6ca1<code>signal(mutex)</code>\uff0c\u5728\u4e00\u8fdb\u6765\u5c31\u5728<code>wait(mutex)</code>\u4e86\u3002</p> <ol> <li> <p>Two variations of readers-writers problem</p> <ul> <li>Reader first</li> </ul> <p>\u5982\u679c\u6709 reader holds data\uff0cwriter \u6c38\u8fdc\u62ff\u4e0d\u5230\u9501\uff0c\u8981\u7b49\u6240\u6709\u7684 reader \u7ed3\u675f\u3002</p> <ul> <li>Writer first</li> </ul> <p>\u5982\u679c write ready \u4e86\uff0c\u4ed6\u5c31\u4f1a\u5c3d\u53ef\u80fd\u65e9\u5730\u8fdb\u884c\u5199\u64cd\u4f5c\u3002\u5982\u679c\u6709 reader hold data\uff0c\u90a3\u4e48\u9700\u8981\u7b49\u5f85 ready writer \u7ed3\u675f\u540e\u518d\u8bfb\u3002</p> </li> </ol>"},{"location":"OS/os6%20Synchronization/#dining-philosophers-problem","title":"Dining-philosophers problem","text":"<ol> <li>Philosophers spend their lives thinking and eating, they sit in a round table, but don\u2019t interact with each other.</li> </ol> <p>\u6bcf\u6b21\u53ea\u80fd\u62ff\u4e00\u6839\u7b77\u5b50\uff0c\u4f46\u662f\u8981\u62ff\u5230\u4e24\u53ea\u7b77\u5b50\u624d\u80fd\u5403\u996d\u3002\u4f8b\u5982\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u5148\u62ff\u81ea\u5df1\u53f3\u8fb9\u7684\u7b77\u5b50\uff0c\u518d\u51c6\u5907\u62ff\u5de6\u8fb9\u7684\u7b77\u5b50\uff0c\u5c31\u4f1a\u5361\u6b7b</p> <ol> <li>Solution(assuming 5 philosophers): semaphore chopstick[5] initialized to 1</li> </ol> <ul> <li>Philosopher i</li> </ul> <pre><code>do {\n    wait(chopstick[i]);\n    wait(chopstick[(i+1)%5]);\n    eat\n    signal(chopstick[i]);\n    signal(chopstick[(i+1)%5]);\n    think\n} while(TRUE);\n</code></pre> <ul> <li>Another solution: only odd philosophers start left-hand first, and even philosophers start right-hand first. This does not deadlock.</li> </ul>"},{"location":"OS/os7%20Deadlock/","title":"Deadlock","text":""},{"location":"OS/os7%20Deadlock/#deadlock-problem","title":"Deadlock problem","text":"<ol> <li>Deadlock: a set of blocked processes each holding a resource and waiting to acquire a resource held by another process in the set.</li> <li> <p>\u53ef\u4ee5\u7528resource allocation graph\u8868\u793a\uff0c\u6709\u73af\u5219\u6b7b\u9501</p> </li> <li> <p>Four conditions of deadlock</p> </li> </ol> <ul> <li> <p>Mutual exclusion: a resource can only be used by one process at a time.</p> <p>\u4e92\u65a5\uff0c\u8d44\u6e90\u5728\u4e00\u4e2a\u65f6\u95f4\u53ea\u80fd\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u3002</p> </li> <li> <p>Hold and wait: a process holding at least one resource is waiting to acquire additional resources held by other processes.</p> <p>\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u8d44\u6e90\uff0c\u540c\u65f6\u60f3\u8981\u66f4\u591a\u8d44\u6e90\u3002</p> </li> <li> <p>No preemption: a resource can be released only voluntarily by the process holding it, after it has completed its task.</p> <p>\u5df2\u7ecf\u83b7\u5f97\u7684\u8d44\u6e90\u4e0d\u80fd\u88ab\u62a2\u5360\uff0c\u53ea\u80fd\u7531\u81ea\u5df1\u91ca\u653e\u3002</p> </li> <li> <p>Circular wait: there exists a set of waiting processes \\(\\{P_1,P_2,\\dots,P_n\\}\\)</p> <ul> <li>\\(P_0\\) is waiting for a resource that is held by \\(P_1\\)</li> <li>\\(P_1\\) is waiting for a resource that is held by \\(P_2\\) ...</li> <li>\\(P_{n-1}\\) is waiting for a resource that is held by \\(P_{n}\\)</li> <li>\\(P_{n}\\) is waiting for a resource that is held by \\(P_0\\)</li> </ul> </li> </ul> <ol> <li>resource allocation graph</li> </ol> <ul> <li> <p>Two types of nodes:</p> </li> <li> <p>\\(P = \\{P_1, P_2, \\ldots, P_n\\}\\), the set of all the processes in the system</p> </li> <li> <p>\\(R = \\{R_1, R_2, \\ldots,R_m\\}\\), the set of all resource types in the system</p> </li> <li> <p>Two types of edges:</p> </li> <li> <p>request edge: directed edge \\(P_i \\rightarrow R_j\\)</p> <p>\u8fdb\u7a0b\u9700\u8981\u8fd9\u4e2a\u8d44\u6e90\u3002</p> </li> <li> <p>assignment edge: directed edge \\(R_j \\rightarrow P_i\\)</p> <p>\u8d44\u6e90\u5df2\u7ecf\u5206\u914d\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b\u3002</p> </li> </ul> <p></p> <p>\u8fd9\u91cc\u6ca1\u6709\u6b7b\u9501\uff0cP3 \u5148\u6267\u884c\uff0c\u968f\u540e\u91ca\u653e R3\uff0c\u518d\u6267\u884c P2\uff0c\u6700\u540e P1\u3002</p> <p></p> <p>\u6709\u6b7b\u9501\uff0c\u5b58\u5728circular wait</p> <p></p> <p>\u65e0\u6b7b\u9501</p> <ul> <li>Basic Facts</li> <li>If graph contains no cycles \u27a0 no deadlock</li> <li>If graph contains a cycle <ul> <li>if only one instance per resource type,  \u27a0 deadlock</li> <li>if several instances per resource type \u27a0 possibility of deadlock</li> </ul> </li> </ul>"},{"location":"OS/os7%20Deadlock/#handling-deadlocks","title":"Handling deadlocks","text":"<ul> <li> <p>Ensure that the system will never enter a deadlock state</p> </li> <li> <p>Prevention</p> </li> <li> <p>Avoidance</p> </li> <li> <p>Allow the system to enter a deadlock state and then recover - database</p> </li> <li> <p>Deadlock detection and recovery</p> </li> <li> <p>Ignore the problem and pretend deadlocks never occur in the system</p> </li> </ul> <p>\u73b0\u5728\u64cd\u4f5c\u7cfb\u7edf\u90fd\u662f\u8fd9\u6837\u505a\uff0c\u5047\u88c5\u65e0\u4e8b\u53d1\u751f\uff0c\u56e0\u4e3a\u65e0\u6cd5\u63d0\u524d\u9884\u6d4b\u6b7b\u9501\u7684\u53d1\u751f\u3002</p>"},{"location":"OS/os7%20Deadlock/#deadlock-prevention","title":"Deadlock Prevention","text":"<ul> <li> <p>mutual exclusion: sharable \u7684\u53ef\u4ee5\uff0cnon-sharable \u7684\u6ca1\u529e\u6cd5\u3002</p> </li> <li> <p>hold and wait: whenever a process requests a resource, it doesn\u2019t hold any other resources</p> </li> <li> <p>require process to request all its resources before it begins execution</p> </li> <li> <p>allow process to request resources only when the process has none</p> <p>\u7533\u8bf7\u8d44\u6e90\u65f6\u4e0d\u80fd\u6709\u5176\u4ed6\u8d44\u6e90\uff0c\u8981\u4e00\u6b21\u6027\u7533\u8bf7\u6240\u6709\u9700\u8981\u7684\u8d44\u6e90</p> </li> <li> <p>no preemption \u7528\u7684\u4e0d\u591a</p> </li> <li> <p>circular wait</p> </li> <li> <p>impose a total ordering of all resource types</p> <p>\u7ed9\u9501\u4e00\u4e2a\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u53d6\u9501\u7684\u65f6\u5019\u8981\u6c42\u4ece\u9ad8\u5f80\u4f4e\u53d6\u9501\u3002</p> </li> <li> <p>require that each process requests resources in an increasing order</p> </li> <li> <p>Many operating systems adopt this strategy for some locks.</p> </li> </ul>"},{"location":"OS/os7%20Deadlock/#deadlock-avoidance","title":"Deadlock Avoidance","text":"<p>\u5728\u5206\u914d\u8d44\u6e90\u4e4b\u524d\uff0c\u5148\u5224\u65ad\u662f\u5426\u4f1a\u6b7b\u9501\uff0c\u5982\u679c\u4f1a\u6b7b\u9501\u5c31\u4e0d\u5206\u914d\u3002</p>"},{"location":"OS/os7%20Deadlock/#safe-state","title":"Safe State","text":"<ul> <li> <p>there exists a sequence \\(&lt;P_1, P_2, \\ldots, P_m&gt;\\) of all processes in the system</p> </li> <li> <p>for each \\(P_i\\), resources that \\(P_i\\) can still request can be satisfied by currently available resources + resources held by all the \\(P_j\\).</p> </li> </ul> <p>\u5e8f\u5217\u91cc\u7684\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u88ab\u6ee1\u8db3\u3002\uff08\u7a7a\u95f2\u7684\u8d44\u6e90\u548c\u4e4b\u524d\u7684\u8fdb\u7a0b\u91ca\u653e\u7684\u8d44\u6e90\uff09</p> <p>Safe state can guarantee no deadlock. </p> <ul> <li>if \\(P_i\\)\u2019s resource needs are not immediately available: </li> <li>wait until all \\(P_j\\) have finished</li> <li>when \\(P_j\\) has finished, \\(P_i\\) can obtain needed resources, </li> <li>when \\(P_i\\) terminates, \\(P_{i+1}\\) can obtain its needed resources, and so on.</li> </ul> <p>Note</p> <ul> <li>If a system is in safe state \\(\\rightarrow\\) no deadlocks<ul> <li>If a system is in unsafe state \\(\\rightarrow\\) possibility of deadlock</li> <li>Deadlock avoidance \\(\\rightarrow\\) ensure a system never enters an unsafe state</li> </ul> </li> </ul> <p> </p>"},{"location":"OS/os7%20Deadlock/#single-instance-deadlock-avoidance","title":"Single-instance Deadlock Avoidance","text":"<ul> <li> <p>\u76f8\u6bd4\u4e4b\u524d\u7684resource allocation graph\uff0c\u591a\u4e86\u4e00\u4e2aclaim edge\uff0c\u5373\u58f0\u660e\u67d0\u4e2a\u8fdb\u7a0b\u9700\u8981\u8c03\u7528\u67d0\u4e2a\u8d44\u6e90\uff0c\u4f46\u8fd8\u6ca1request\uff0c\u4f7f\u7528dashed line\u8868\u793a\uff0c\u9700\u8981\u4e8b\u5148\u58f0\u660e\u3002</p> </li> <li> <p>Transitions in between edges</p> </li> <li> <p>claim edge converts to request edge when a process requests a resource</p> </li> <li> <p>request edge converts to an assignment edge when the resource is allocated to the process</p> </li> <li> <p>assignment edge reconverts to a claim edge when a resource is released by a process</p> </li> <li> <p>Algorithm</p> </li> <li> <p>Suppose that process \\(P_i\\) requests a resource \\(R_j\\)</p> </li> <li>The request can be granted only if:<ul> <li>converting the request edge to an assignment edge does not result in the formation of a cycle. </li> <li>no cycle \\(\\rightarrow\\) safe state</li> </ul> </li> </ul> <p>\u6bd4\u5982\u8fd9\u91cc\u5206\u914d\u4e4b\u540e\u5c31\u6709\u4e00\u4e2a\u73af\uff0cno safe state. </p>"},{"location":"OS/os7%20Deadlock/#bankers-algorithms","title":"Banker's Algorithms","text":"<p>\u6211\u4eec\u901a\u8fc7 available\uff08\u5f53\u524d\u8fd8\u6ca1\u6709\u88ab\u5206\u914d\u7684\u7a7a\u95f2\u8d44\u6e90\uff09, max\uff08\u8fdb\u7a0b\u6240\u9700\u8981\u7684\u8d44\u6e90\uff09, allocation\uff08\u5df2\u7ecf\u5206\u914d\u7684\u8d44\u6e90\uff09, need\uff08\u8fd8\u9700\u8981\u5206\u914d\u591a\u5c11\u8d44\u6e90\uff09 \u8fd9\u56db\u4e2a\u77e9\u9635\u523b\u753b\u4e00\u4e2a\u65f6\u95f4\u5185\u5404\u4e2a\u8fdb\u7a0b\u5bf9\u5404\u79cd\u8d44\u6e90\u7684\u6301\u6709\u548c\u9700\u6c42\u60c5\u51b5\u3002</p> <p>\u9009\u53d6\u4e00\u4e2a need\uff08\u7684\u6bcf\u4e00\u9879\u90fd\u5bf9\u5e94\u5730\uff09\u5c0f\u4e8e available\uff08\u7684\u5bf9\u5e94\u9879\uff09\u7684\u8fdb\u7a0b\uff0c\u5176\u8fd0\u884c\u5b8c\u540e\u4f1a\u5c06 allocation \u91ca\u653e\u56de work\uff08\u524d\u9762\u7684\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a7a\u95f2\u7684\u8d44\u6e90\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p></p> <ul> <li>\u7b2c\u4e00\u4e2a\u6700\u540e\u53ef\u4ee5\u5b8c\u6210</li> <li>\u7b2c\u4e8c\u4e2a\u4e0d\u884c</li> </ul>"},{"location":"OS/os7%20Deadlock/#deadlock-detection","title":"Deadlock Detection","text":""},{"location":"OS/os7%20Deadlock/#single-instance-resources","title":"Single Instance Resources","text":"<p>\u4f7f\u7528wait-for graph</p> <p>Periodically invoke an algorithm that searches for a cycle in the graph</p> <ul> <li>if there is a cycle, there exists a deadlock</li> </ul> <p>\u6709\u73af\u5c31\u6709 deadlock\u3002</p> <ul> <li> <p>an algorithm to detect a cycle in a graph requires an order of \\(n^2\\) operations,</p> </li> <li> <p>where \\(n\\) is the number of vertices in the graph.</p> </li> <li>\u7b97\u6cd5\uff1a\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u4e24\u6761\u8def\uff0c\u4e00\u6761\u6bcf\u6b21\u8d70\u4e00\u4e2anode\uff0c\u53e6\u4e00\u6761\u6bcf\u6b21\u8d70\u4e24\u4e2anode\uff0c\u4e24\u6761\u8def\u82e5\u5728\u67d0\u65f6\u523b\u7ec8\u70b9\u91cd\u5408\uff0c\u5219\u6709\u73af</li> </ul>"},{"location":"OS/os7%20Deadlock/#multi-instance-resources","title":"Multi-Instance Resources","text":"<p>\u7c7b\u4f3c\u94f6\u884c\u5bb6\u7b97\u6cd5\u3002\u5982\u679c\u627e\u4e0d\u5230\u4efb\u4f55\u5b89\u5168\u5e8f\u5217\uff0c\u5219\u8bf4\u660e\u7cfb\u7edf\u5904\u4e8e\u6b7b\u9501\u72b6\u6001\u3002</p>"},{"location":"OS/os7%20Deadlock/#deadlock-recovery","title":"Deadlock Recovery","text":"<p>Options</p> <ul> <li>Terminate deadlocked processes options</li> <li>abort all deadlocked processes</li> <li>abort one process at a time until the deadlock cycle is eliminated</li> <li>Resource preemption</li> <li>select a victim</li> <li>rollback</li> <li>starvation</li> </ul>"},{"location":"OS/os8%20Main%20Memory/","title":"Main Memory","text":""},{"location":"OS/os8%20Main%20Memory/#background","title":"Background","text":"<ul> <li>Program must be brought (from disk) into memory and placed within a process for it to be run</li> <li>Main memory and registers are only storage that CPU can access directly</li> <li>Register access is done in one CPU clock or less</li> <li>Main memory can take many cycles, causing a stall</li> <li>\u5982\u679cjob\u6bd4physical memory\u5927</li> <li>\u5206\u6cbb</li> <li>\u540c\u65f6\u95f4\u8fd0\u884c\u591a\u4e2aprocess</li> <li>fast switching</li> <li>\u5212\u5206\u7269\u7406\u5185\u5b58\u2014\u2014partitioning</li> <li>partition requirements</li> <li>protection: keep processes from smashing each other</li> <li>Fast execution: memory accesses can\u2019t be slowed by protection mechanisms</li> <li> <p>Fast context switch: can\u2019t take forever to setup mapping of addresses</p> </li> <li> <p>\u52a0\u8f7d\u4e00\u4e2a\u8fdb\u7a0b</p> </li> <li>relocate all addresses relative to start of partition</li> <li>\u4e00\u65e6\u8fdb\u7a0b\u5f00\u542f\uff0c\u7531\u4e8e\u5185\u5b58\u5185\u6709\u5f88\u591a\u6307\u9488\uff0c\u79fb\u52a8\u5185\u5b58\u662f\u4e0d\u73b0\u5b9e\u7684</li> </ul> <ul> <li>problem: \u5f53\u4e0a\u8ff0\u60c5\u51b5\u540e\u6709\u4e00\u4e2a\u8fdb\u7a0b4\u8fdb\u5165\uff0c\u4f46\u9700\u8981\u7684\u7a7a\u95f4\u5927\u4e8e\u5355\u4e2aempty\u90e8\u5206\uff0c\u4f46\u5c0f\u4e8e\u6240\u6709empty\u7684\u548c</li> <li>solution: use logical address instead of physical address, define it as the offset within the partition</li> <li>\u8fd9\u6837\u5c31\u53ef\u4ee5move process\u4e86</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#partition","title":"Partition","text":""},{"location":"OS/os8%20Main%20Memory/#simplest-implementation","title":"Simplest Implementation","text":"<ul> <li> <p>Base and Limit registers</p> </li> <li> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684base\u548climit\uff0c\u6bcf\u6b21\u8fdb\u7a0b\u5207\u6362\u65f6\uff0cOS \u90fd\u4f1a\u5c06 base \u548c limit \u5bc4\u5b58\u5668\u7684\u503c\u66f4\u65b0\u4e3a\u5f53\u524d\u8fdb\u7a0b\u7684\u503c\u3002\u82e5\u8f93\u5165\u5730\u5740\u4e0d\u8d85\u8fc7limit\uff0c\u5219\u4f1a\u52a0\u4e0abase\u540e\u8bbf\u95ee\uff0c\u5426\u5219segment fault</p> </li> </ul> <ul> <li>Hardware Address Protection</li> </ul> <ul> <li> <p>Advantages</p> </li> <li> <p>Built-in protection provided by Limit</p> <ul> <li>No physical protection per page or block</li> </ul> </li> <li> <p>Fast execution</p> <ul> <li>Addition and limit check at hardware speeds within each instruction</li> </ul> </li> <li> <p>Fast context switch</p> <ul> <li>Need only change base and limit registers</li> </ul> </li> <li> <p>No relocation of program addresses at load time</p> <ul> <li>All addresses relative to zero</li> </ul> </li> <li> <p>Partition can be suspended and moved at any time</p> <ul> <li>Process is unaware of change</li> </ul> <p>\u4fee\u6539 base \u5373\u53ef\u79fb\u52a8\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u662f\u610f\u8bc6\u4e0d\u5230\u7684\u3002</p> <ul> <li>Expensive for large processes</li> </ul> <p>\u79fb\u52a8\u8fdb\u7a0b\u9700\u8981\u6539 base\uff0c\u8fd8\u8981\u628a\u65e7\u7684\u5185\u5bb9\u5168\u90e8\u6539\u5230\u65b0\u7684\u4f4d\u7f6e\uff0c\u8017\u65f6\u3002</p> </li> </ul>"},{"location":"OS/os8%20Main%20Memory/#memory-allocation-strategies","title":"Memory Allocation Strategies","text":"<ul> <li>fixed partitions or variable partitions</li> <li>\u53d6\u51b3\u4e8e\u957f\u5ea6\u662f\u5426\u4f1a\u53d1\u751f\u53d8\u5316</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#fixed-partitions","title":"Fixed partitions","text":"<ul> <li>divide memory into equal sized pieces</li> <li>degree of multiprogramming = number of partitions</li> <li>\u6bcf\u4e00\u4e2apartition\u53ef\u4ee5\u4e14\u53ea\u53ef\u4ee5\u653e\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5269\u4e0b\u7684\u7a7a\u95f4\u5c31\u4f1a\u88ab\u6d6a\u8d39 Big waste of memory</li> <li>\u5982\u679c\u5355\u4e2aprocess\u8d85\u8fc7partition\u5927\u5c0f\uff0c\u53ea\u80fd\u91c7\u53d6\u5206\u6cbb\u62c6\u6210\u66f4\u5c0f\u7684process</li> <li>size \u8981\u5207\u591a\u5927\uff1f\u5982\u679c\u5207\u7684\u592a\u5c0f\uff0c\u53ef\u80fd\u6709\u5927\u8fdb\u7a0b\u65e0\u6cd5\u52a0\u8f7d\u8fdb\u6765\uff1b\u5982\u679c\u5207\u7684\u592a\u5927\uff0c\u4f1a\u6709\u5185\u90e8\u788e\u7247</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#variable-partitions","title":"Variable partitions","text":"<ul> <li> <p>Hole: block of available memory, holes of various size scattered throughout memory</p> </li> <li> <p>\u957f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u6309\u9700\u5212\u5206\u3002\u5373\u8981\u7ed9\u4e00\u4e2a\u8fdb\u7a0b\u5206\u914d\u7a7a\u95f4\u65f6\uff0c\u6211\u4eec\u627e\u5230\u6bd4\u4ed6\u5927\u7684\u6700\u5c0f\u7684 partition (best fit)\uff0c\u7136\u540e\u628a\u4ed6\u653e\u8fdb\u53bb\u3002</p> </li> <li>first-fit: allocate from the first block that is big enough</li> <li>best-fit: allocate from the smallest block that is big enough</li> <li> <p>worst-fit: allocate from the largest hole</p> </li> <li> <p>Memory is dynamically divided into partitions based on process needs</p> </li> <li> <p>More complex management problem</p> <ul> <li>Need data structures to track free and used memory</li> <li>New process allocated memory from hole large enough to fit it</li> </ul> </li> <li> <p>Problem \u2013 External Fragmentation</p> </li> <li> <p>Unused memory between partitions too small to be used by any processes</p> <p>\u5728 partition \u4e4b\u5916\u7684\u7a7a\u95f2\u7a7a\u95f4\u592a\u5c0f\uff0c\u65e0\u6cd5\u88ab\u4efb\u4f55\u8fdb\u7a0b\u4f7f\u7528\u3002</p> </li> <li> <p>the request cannot be fulfilled because the free memory is not contiguous.</p> </li> <li> <p>can be reduced by compaction </p> <ul> <li>\u5c06\u6240\u6709free memory\u8fde\u7eed\u653e\u7f6e</li> <li>program needs to be relocatable at runtime</li> <li>performance overhead, timing to do this operation</li> </ul> </li> </ul>"},{"location":"OS/os8%20Main%20Memory/#segmentation","title":"Segmentation","text":"<p><code>readelf</code>\u53ef\u4ee5\u6253\u5370\u6240\u6709\u7684section header</p> <p>\u4e00\u4e2aelf\u81f3\u5c11\u9700\u89815\u4e2apartition\uff0c.text, .data, .bss, heap, stack</p> <ul> <li>\u5229\u7528partition\u7684\u6982\u5ff5\u5b9e\u73b0\u4e86segmentation\u7684\u673a\u5236</li> <li> <p>\u8ba4\u4e3a text\u3001data\u3001stack \u662f\u591a\u4e2a\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a partition \u6765\u4ee3\u8868\u5b83</p> </li> <li> <p>Logical address consists of a pair:</p> </li> <li> <p><code>&lt;segment-number, offset&gt;</code></p> <p>segment-number \u8868\u793a\u5c5e\u4e8e\u7b2c\u51e0\u7ec4\u3002</p> </li> <li> <p>Offset is the address offset within the segment.</p> </li> <li> <p>\u73b0\u5728\u786c\u4ef6\u53ef\u4ee5support\u516b\u5343\u591a\u4e2asegment</p> </li> <li> <p>Segment table where each entry has:</p> <ul> <li>Base: starting physical address</li> <li>Limit: length of segment</li> </ul> </li> <li> <p>\u4e00\u4e2asegment\u53ea\u80fd\u6709\u4e00\u79cd\u6743\u9650</p> </li> <li> <p>Segment Lookup</p> </li> </ul> <ul> <li>\u4ecd\u7136\u5b58\u5728external fragmentation</li> <li>\u65e9\u671fIntel\u5728x86\u5b9e\u73b0\u4e86segmentation\uff0c\u4e00\u76f4\u4fdd\u7559\u5230\u73b0\u5728</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#address-binding","title":"Address Binding","text":"<p>Address binding of instructions and data to memory addresses can happen at three different stages.</p> <ul> <li>Compile time: If memory location known a priori, absolute code can be generated; must recompile code if starting location changes.</li> <li>Load time: Must generate relocatable code if memory location is not known at compile time.</li> <li>Execution time: Binding delayed until run time if the process can be moved during its execution from one memory segment to another.</li> <li>Need hardware support</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#logical-vs-physical-address","title":"Logical vs. Physical Address","text":"<ul> <li> <p>\u76f4\u63a5\u4f7f\u7528\u7269\u7406\u5730\u5740\u65e0\u6cd5\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u903b\u8f91\u5730\u5740</p> </li> <li> <p>\u903b\u8f91\u5730\u5740\u7531CPU\u751f\u6210\uff0c\u4e5f\u88ab\u53eb\u505avirtual address</p> </li> <li>\u903b\u8f91\u5730\u5740\u9700\u8981\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u6765\u5b58\u50a8\uff0c\u903b\u8f91\u5730\u5740\u53ea\u5b58\u5728\u5730\u5740\uff0c\u800c\u6ca1\u6709\u5b9e\u9645\u5b58\u50a8\u7684space</li> <li>\u903b\u8f91\u5730\u5740\u5bf9\u5e94\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff08Logical Address Space\uff09\uff0c\u7269\u7406\u5730\u5740\u5bf9\u5e94\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff08Physical Address Space\uff09</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#memory-management-unit","title":"Memory-Management Unit","text":"<ul> <li>map logical address to physical address</li> <li>CPU uses logical addresses</li> <li>Memory unit uses physical address</li> <li>Like speaking \u201cdifferent languages\u201d, MMU does the translation</li> </ul> <p>\u505a\u5730\u5740\u7684transition</p> <p>The base register now called relocation register</p>"},{"location":"OS/os8%20Main%20Memory/#paging","title":"Paging","text":"<ul> <li>Basic idea: contiguous -&gt; noncontiguous</li> <li> <p>Physical address space of a process can be noncontiguous; process is allocated physical memory whenever the latter is available.     Fixed \u548c Variable \u5212\u5206\u90fd\u662f\u7269\u7406\u8fde\u7eed\u7684\u5206\u914d\uff0cPaging \u662f\u628a\u6240\u6709\u5185\u5b58\u90fd\u53d8\u6210\u4e0d\u8fde\u7eed\u7684\uff0c\u8fd9\u6837\u7a7a\u95f2\u7684\u5185\u5b58\u4e0d\u7ba1\u5728\u54ea\uff0c\u90fd\u53ef\u4ee5\u5206\u914d\u7ed9\u8fdb\u7a0b\uff0c\u907f\u514d\u4e86\u5916\u90e8\u788e\u7247\u3002</p> </li> <li> <p>Basic methods</p> </li> <li> <p>divide physical address into fixed-sized blocks called frames (\u5e27)</p> <ul> <li>Size is power of 2, usually 4KB.</li> </ul> </li> <li> <p>Divide logical address into blocks of same size called pages\uff08\u9875\uff09</p> </li> <li> <p>\u6ce8\u610f\u4ee5\u4e0a\u4e24\u4e2a\u540d\u8bcd\u7684\u5bf9\u5e94\u5173\u7cfb</p> </li> <li> <p>need to keep track of all free frames</p> </li> <li> <p>To run a program of size N pages, need to find N free frames and load program.</p> <p>\u628a N \u4e2a\u5e27\u6620\u5c04\u5230 N \u4e2a\u9875\u3002\uff08\u9875\u548c\u5e27\u662f\u4e00\u6837\u5927\u7684\uff09</p> </li> <li> <p>Set up a mapping to translate logical to physical addresses.</p> <ul> <li>This mapping is called page table.</li> </ul> <p>\u5b58\u50a8\u5e27\u5230\u9875\u7684\u6620\u5c04\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u53eb\u9875\u8868\u3002</p> </li> <li> <p>Paging\u7531\u4e8e\u4f7f\u7528fixed\uff0c\u56e0\u6b64\u6ca1\u6709external fragmentation\uff0c\u53ea\u6709internal fragmentation</p> </li> <li> <p>\u53ea\u53ef\u80fd\u5728\u6700\u540e\u4e00\u9875\u5b58\u5728fragmentation\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u9875\u90fd\u586b\u6ee1\u4e86\u624d\u53ef\u80fd\u7528\u5230\u4e0b\u4e00\u9875</p> </li> <li> <p>\u56e0\u6b64\uff1a\u5e73\u5747internal fragmentation\u662f\u00bd\u7684frame size</p> </li> <li> <p>\u9875\u5c0f\uff0c\u788e\u7247\u5c11\uff0c\u4f46\u5206\u7684\u66f4\u788e\uff0cpage table\u66f4\u5927\uff1b\u9875\u5927\uff0c\u788e\u7247\u66f4\u5927\u4f46\u6620\u5c04\u66f4\u5c11\uff0c\u9875\u8868\u66f4\u5c0f\u3002\u73b0\u5728\u9875\u9010\u6e10\u66f4\u5927\uff0c\u56e0\u4e3a\u5185\u5b58\u4e0d\u503c\u94b1\u4e86\uff0cmac\u5df2\u7ecf64KB\u4e86</p> </li> </ul>"},{"location":"OS/os8%20Main%20Memory/#page-table","title":"Page Table","text":"<ul> <li>frame table: \u4e00\u4e2abitmap\uff0c\u8bb0\u5f55\u54ea\u4e9bframe\u7a7a\u95f2</li> </ul> <ul> <li>page table\u5b58\u7684\u662f\u7269\u7406\u5730\u5740\u7684\u5e27\u53f7\uff0c\u9875\u53f7\u5c31\u662findex</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#address-translation","title":"Address Translation","text":"<p>A logical address is divided into:</p> <ul> <li>page number (p)</li> <li>used as an index into a page table</li> <li>page table entry contains the corresponding physical frame number</li> <li>page offset (d)</li> <li>offset within the page/frame</li> <li>combined with frame number to get the physical address</li> <li>\u628ap\u5bf9\u5e94\u5230page table\u627e\u5230\u5bf9\u5e94\u7269\u7406\u5e27\u53f7\uff0c\u52a0\u4e0aoffset\u5f97\u5230\u7269\u7406\u5730\u5740</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#paging-hardware","title":"Paging Hardware","text":"<p>Simplest Case: \u4f7f\u7528register\u50a8\u5b58\uff0c\u901f\u5ea6\u5feb\uff0c\u4f46\u7f3a\u70b9\u662fregister\u6570\u91cf\u6709\u9650\uff0ctable size\u4f1a\u5f88\u5c0f\uff0c\u4e0a\u4e0b\u6587\u5207\u6362\u9700\u8981\u5b58\u50a8\u548c\u91cd\u65b0\u52a0\u8f7d\u8fd9\u4e9b\u5bc4\u5b58\u5668</p> <p>One big page table maps logical address to physical address</p> <ul> <li> <p>the page table should be kept in main memory</p> </li> <li> <p>page-table base register (PTBR) points to the page table</p> </li> </ul> <p>PTBR \u6307\u5411\u9875\u8868\u7684\u8d77\u59cb\u5730\u5740\u3002\uff08RISC-V \u4e0a\u53eb SATP\uff0cARM \u4e0a\u53eb TTBR\uff0cx86 \u4e0a\u53eb CR3\uff09</p> <ul> <li>page-table length register (PTLR) indicates the size of the page table</li> </ul> <p>\u8fd9\u6837\u4e4b\u540e\u6bcf\u6b21\u53d6\u6570\u636e/\u6307\u4ee4\u90fd\u9700\u8981\u4e24\u6b21memory access\uff0c\u7b2c\u4e00\u6b21\u628a\u9875\u8868\u8bfb\u51fa\u6765\uff0c\u7b2c\u4e8c\u6b21\u518d\u6839\u636e\u9875\u8868\u53bb\u8bfb\u6570\u636e</p> <ul> <li>Solution: \u52a0\u4e00\u5c42cache  </li> </ul> <p>CPU can cache the translation to avoid one memory access </p>"},{"location":"OS/os8%20Main%20Memory/#tlbtranslation-look-aside-buffer","title":"TLB(Translation look-aside buffer)","text":"<ul> <li>TLB hit: if page number is in the TLB, no need to access the page table.</li> <li>TLB miss: if page number is not in the TLB, need to replace one TLB entry.</li> <li>TLB usually use a fast-lookup hardware cache called associative memory</li> <li>TLB is usually small, 64 to 1024 entries</li> </ul> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u81ea\u5df1\u7684\u9875\u8868\uff0c\u6240\u4ee5\u6211\u4eec context switch \u65f6\u4e5f\u8981\u5207\u6362\u9875\u8868\uff0c\u8981\u628a TLB \u6e05\u7a7a\u3002</p> <p>TLB must be consistent with page table</p> <ul> <li> <p>Option I: Flush TLB at every context switch, or,</p> </li> <li> <p>Option II: Tag TLB entries with address-space identifier (ASID) that uniquely identifies a process.</p> </li> </ul> <p>\u901a\u7528\u7684\u5168\u5c40 entries \u4e0d\u5237\u6389\uff0c\u628a\u8fdb\u7a0b\u72ec\u6709\u7684 entries \u5237\u6389\u3002</p> <ul> <li>TLB and OS</li> <li>MIPS: \u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u5904\u7406TLB miss</li> <li>X86\uff1a\u786c\u4ef6\u5904\u7406</li> </ul> <ul> <li> <p>A TLB entry match occurs when the following conditions are met:</p> </li> <li> <p>Its VA, moderated by the page size such as the VA bits[47:12], matches that of the requested address</p> </li> <li> <p>The memory space matches the memory space state of the requests</p> </li> <li> <p>The ASID matches the current ASID held in the CONTEXTIDR, TTBR0, or TTBR1 register or the entry is marked global</p> </li> <li> <p>The VMID matches the current VMID held in the VTTBR register</p> </li> </ul>"},{"location":"OS/os8%20Main%20Memory/#effective-access-time","title":"Effective Access Time","text":"<ul> <li> <p>Hit ratio \u2013 percentage of times that a page number is found in the TLB</p> </li> <li> <p>Effective Access Time (EAT)</p> </li> </ul> <p>Example</p> <p></p>"},{"location":"OS/os8%20Main%20Memory/#memory-protection","title":"Memory Protection","text":"<ul> <li>Each page table entry has a present (aka. valid) bit </li> <li> <p>present: the page has a valid physical frame, thus can be accessed</p> </li> <li> <p>Each page table entry contains some protection bits</p> </li> <li> <p>kernel/user, read/write, execution?, kernel-execution?</p> </li> <li> <p>Any violations of memory protection result in a trap to the kernel</p> </li> <li> <p>XN: protecting code</p> </li> <li> <p>Segregate areas of memory for use by either storage of processor instructions (code) or for storage of data.</p> <p>\u4ee3\u7801\u65e0\u8bba\u5728 user \u8fd8\u662f kernel \u72b6\u6001\u4e0b\u90fd\u4e0d\u80fd\u6267\u884c\u3002</p> <p>e.g. Intel: XD(execute disable), AMD: EVP (enhanced virus protection), ARM: XN (execute never)</p> </li> <li> <p>PXN: Privileged Execute Never</p> </li> <li> <p>A Permission fault is generated if the processor is executing at EL1(kernel) and attempts to execute an instruction fetched from the corresponding memory region when this PXN bit is 1 (usually user space memory)</p> <p>\u5728\u7279\u6743\u6a21\u5f0f\u4e0b\u4e0d\u80fd\u6267\u884c\u3002</p> </li> </ul>"},{"location":"OS/os8%20Main%20Memory/#page-sharing","title":"Page Sharing","text":"<p>Paging allows to share memory between processes</p> <ul> <li>shared memory can be used for inter-process communication</li> <li> <p>shared libraries</p> </li> <li> <p>Reentrant code: non-self-modifying code: never changes between execution</p> </li> </ul>"},{"location":"OS/os8%20Main%20Memory/#structure-of-page-table","title":"Structure of Page Table","text":"<p>Page table must be physically contiguous.</p> <p>\u5982\u679c\u53ea\u6709\u4e00\u7ea7\u7684\u9875\u8868\uff0c\u90a3\u4e48\u9875\u8868\u6240\u5360\u7528\u7684\u5185\u5b58\u5f88\u5927\u3002e.g. 32-bit logical address space and 4KB page size. page table would have 1 million entries (\\(2^{32}\\) / \\(2^{12}\\)). If each entry is 4 bytes -&gt; 4 MB of memory for page table alone.</p> <p>\u6211\u4eec\u9700\u8981\u6709\u65b9\u6cd5\u538b\u7f29\u9875\u8868\u3002</p> <ul> <li>Break up the logical address space into multiple-level of page tables. e.g. two-level page table</li> <li>First-level page table contains the frame# for second-level page tables.</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#two-level-paging","title":"Two-Level Paging","text":"<p>\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u53ea\u8bbf\u95ee\u7b2c\u4e00\u4e2a\u9875\u548c\u6700\u540e\u4e00\u9875\uff0c\u90a3\u4e48\u53ea\u7528\u4e00\u7ea7\u9875\u8868\u9700\u8981 1K \u4e2a\u9875\u7528\u6765\u653e\u9875\u8868\uff08\u8fd9\u4e2a\u9875\u8868\u6709 \\(2^{20}\\) \u4e2a\u6761\u76ee\uff09\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e8c\u7ea7\u9875\u8868\u5c31\u53ea\u9700\u8981 3 \u4e2a\u9875\u8868\uff081 \u4e2a\u4e00\u7ea7\u548c 2 \u4e2a\u4e8c\u7ea7\u9875\u8868\uff09\uff0c\u5373 3 \u4e2a\u9875\u6765\u653e\u9875\u8868\u3002 4MB -&gt; 12KB</p> <p>\u591a\u7ea7\u9875\u8868\u53ea\u6709\u5f53\u9700\u8981\u65f6\u624d\u4f1a\u521b\u5efa\u9875\u8868\uff0c\u4ece\u800c\u505a\u5230\u7701\u7a7a\u95f4 hold</p> <p>A logical address is divided into:</p> <ul> <li>a page directory number (first level page table)</li> <li>a page table number (\\(2^{nd}\\) level page table)</li> <li>a page offset</li> </ul> <p>Example: 2-level paging in 32-bit Intel CPUs</p> <p>\u2022 32-bit address space, 4KB page size</p> <p>\u2022 10-bit page directory number, 10-bit page table number</p> <p>\u2022 each page table entry is 4 bytes, one frame contains 1024 entries (\\(2^{10}\\))</p> <p></p> <p>Page Table in Linux</p> <p></p> <p>\u9875\u8868\u91cc\u5b58\u7684\u90fd\u662f\u7269\u7406\u5730\u5740\uff08\u7269\u7406\u9875\u53f7\uff09</p>"},{"location":"OS/os8%20Main%20Memory/#64-bit-logical-address-space","title":"64-bit Logical Address Space","text":"<ul> <li> <p>\u9875\u8868\u4ecd\u71364KB\uff0centry\u53d8\u62108B\uff0c\u56e0\u6b64page table\u6bcf\u4e2a\u53ef\u4ee5\u5b58\u50a8512\u4e2aentry\uff0c\u5373\\(2^9\\)</p> </li> <li> <p>\u7531\u4e8e\u8fd9\u65f6\u5019\u79bb\u7528\u5b8c64\u4f4d\u8fd8\u5dee\u5f88\u591a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u6dfb\u52a0level</p> </li> <li> <p>usually not support full 64-bit virtual address space</p> </li> </ul> <p>\u2022 AMD-64 supports 48-bit</p> <p>\u2022 ARM64 supports 39-bit, 48-bit</p> <p>Implementation</p> <p>ARM64: 39=9+9+9+12</p> <p> </p> <ul> <li>PTE: \u9875\u8868\u9879\uff08page table entry\uff09</li> <li>PGD(Page Global Directory)</li> <li>P4D \u6ca1\u540d\u5b57\u8d77\u4e86</li> <li>PUD(Page Upper Directory)</li> <li>PMD(Page Middle Directory)</li> </ul> <p>\u9875\u8868\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7701\u5185\u5b58\uff0c\u5982\u679c\u6b21\u7ea7\u9875\u8868\u5bf9\u5e94\u7684\u9875\u90fd\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u5c31\u4e0d\u9700\u8981\u5206\u914d\u8fd9\u4e2a\u9875\u8868\u3002</p>"},{"location":"OS/os8%20Main%20Memory/#hashed-page-tables","title":"Hashed Page Tables","text":"<p>In hashed page table, virtual page# is hashed into a frame#.</p> <ul> <li> <p>the page table contains a chain of elements hashing to the same location</p> </li> <li> <p>Each element contains: page#, frame#, and a pointer to the next element (resolving conflict)</p> </li> </ul> <p>\u54c8\u5e0c\u9875\u8868\u7684\u6bcf\u4e00\u4e2a\u6761\u76ee\u9664\u4e86 page number \u548c frame number \u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u6307\u5411\u6709\u540c\u4e00\u54c8\u5e0c\u503c\u7684\u4e0b\u4e00\u4e2a\u9875\u8868\u9879\u7684\u6307\u9488\u3002\u8fd9\u4e2a\u7ed3\u6784\u4e0e\u4e00\u822c\u7684\u54c8\u5e0c\u8868\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u7528\u94fe\u8868\u5904\u7406\u51b2\u7a81</p> <ul> <li> <p>Hashed page table can be used in address spaces &gt; 32 bits</p> </li> <li> <p>Clustered page tables</p> </li> <li> <p>Each entry refers to several pages</p> </li> </ul>"},{"location":"OS/os8%20Main%20Memory/#inverted-page-table","title":"Inverted Page Table","text":"<ul> <li>tracks allocation of physical frame to a process</li> <li>page table\u7684\u6bcf\u4e2aentry\u5b58process id\u548cpage#</li> </ul> <ul> <li>\u6574\u4e2a\u7cfb\u7edf\u53ea\u6709\u4e00\u4e2a\u9875\u8868\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7269\u7406\u5185\u5b58\u7684 frame \u53ea\u6709\u4e00\u6761\u76f8\u5e94\u7684\u6761\u76ee \uff08\u5bf9\u5e94\u7684index\uff09</li> <li>\u6bcf\u6b21\u8981\u904d\u5386\u6574\u4e2a\u9875\u8868\uff0c\u6548\u7387\u4f4e\u4e0b</li> <li>how to implement shared memory?</li> <li>a physical frame can only be mapped into one process! </li> <li>Because one physical memory page cannot have multiple virtual page entry!</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#swapping","title":"Swapping","text":"<ul> <li>Swapping extends physical memory with backing disks</li> <li>A process can be swapped temporarily out of memory to a backing store</li> <li>Backing store is usually a (fast) disk</li> <li>The process will be brought back into memory for continued execution</li> <li>Context switch time can become very high due to swapping</li> <li>If the next process to be run is not in memory, need to swap it in</li> <li>Disk I/O has high latency</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#swapping-with-paging","title":"Swapping with Paging","text":"<ul> <li>swap pages instead of entire process</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#swapping-on-mobile-systems","title":"Swapping on Mobile Systems","text":"<ul> <li> <p>\u4e00\u822c\u4e0d\u652f\u6301\uff0c\u6bd4\u5982U\u76d8swapping\u6709\u6b21\u6570\u9650\u5236</p> </li> <li> <p>Instead use other methods to free memory if low</p> </li> <li>iOS asks apps to voluntarily relinquish allocated memory<ul> <li>Read-only data thrown out and reloaded from flash if needed</li> <li>Failure to free can result in termination</li> </ul> </li> <li>Android terminates apps if low free memory, but first writes application state to flash for fast restart</li> </ul>"},{"location":"OS/os8%20Main%20Memory/#virtual-address-format","title":"Virtual address format","text":"<ul> <li>48-bit VA with 4KB page</li> </ul> <ul> <li>48-bit VA with 64KB page</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/","title":"Virtual Memory","text":""},{"location":"OS/os9%20Virtual%20Memory/#background","title":"Background","text":"<ol> <li>only part of the program needs to be in memory for execution</li> <li> <p>allow memory to be shared by several processes    - better IPC performance</p> </li> <li> <p>Code needs to be in memory to execute, but entire program rarely needed or used at the same time</p> </li> <li> <p>Virtual memory is larger than physical memory.    \u9700\u8981\u6ce8\u610f\u7684\u662f\u865a\u62df\u5730\u5740\u53ea\u662f\u8303\u56f4\uff0c\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u5b58\u50a8\u6570\u636e\uff0c\u6570\u636e\u53ea\u80fd\u5b58\u5728\u7269\u7406\u7a7a\u95f4\u91cc\u3002</p> </li> </ol> <p>Virtual-address Space</p> <p>\u5171\u4eablibc</p> <p></p>"},{"location":"OS/os9%20Virtual%20Memory/#demand-paging","title":"Demand Paging","text":"<ul> <li>Demand paging brings a page into memory only when it is demanded </li> </ul> <p>\u53ea\u6709\u7528\u7684\u65f6\u5019\u624d\u5206\u914d\uff0c\u7701\u5185\u5b58 \u4f46\u8fd9\u65f6\u4f7f\u7528\u5c31\u4f1a\u6d6a\u8d39\u65f6\u95f4</p> <p>\u7528\u65f6\u95f4\u6362\u7a7a\u95f4</p> <ul> <li> <p>demand means access (read/write) </p> </li> <li> <p>if page is invalid (error) \u27a0 abort the operation</p> </li> <li> <p>if page is valid but not in memory \u27a0 bring it to memory</p> <ul> <li>page fault</li> </ul> </li> <li> <p>What causes page fault\uff1f</p> </li> <li> <p>User space program accesses an address</p> </li> <li> <p>Which hardware issues page fault?</p> </li> <li> <p>MMU</p> </li> <li> <p>Who handles page fault\uff1f</p> </li> <li> <p>Operating system</p> </li> <li> <p>Demand paging needs hardware support</p> </li> <li>page table entries with valid / invalid bit</li> <li>backing storage (usually disks)</li> <li>instruction restart</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#what-causes-page-fault","title":"What causes page fault?","text":"<p><code>malloc</code> \u6700\u540e\u4e5f\u4f1a\u8c03\u7528 <code>brk()</code>\uff0c\u589e\u957f\u5806\u7684\u5927\u5c0f\u3002 VMA \u662f Virtual Memory Area\uff0c<code>brk()</code> \u53ea\u662f\u589e\u5927\u4e86 VMA \u7684\u5927\u5c0f\uff08\u4fee\u6539 <code>vm_end</code>\uff09\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u5206\u914d\u5185\u5b58\uff0c\u53ea\u6709\u5f53\u6211\u4eec\u771f\u6b63\u8bbf\u95ee\u8fd9\u4e2a\u5730\u5740\u7684\u65f6\u5019\uff0c\u4f1a\u89e6\u53d1 page fault\uff0c\u7136\u540e\u627e\u4e00\u4e2a\u7a7a\u95f2\u5e27\u771f\u6b63\u5206\u914d\u5185\u5b58\uff0c\u5e76\u505a\u4e86\u6620\u5c04\u3002</p> <ul> <li>\u84dd\u8272\u4ee3\u8868virtual address\uff0c\u7eff\u8272\u4ee3\u8868\u7269\u7406\u5e27</li> <li>\u5728virtual address\u4e2d\uff0cupper part\u5b58\u7740kernel\uff0clower part\u5b58\u7740user</li> <li>on 32-bit, the split is at <code>0xC0000000</code>\uff0c\u9ad8\u4e8e\u6b64\u5c31\u662fkernel\uff0c\u4f4e\u7684\u5c31\u662fuser\uff0c3G for user\uff0c1G for kernel</li> </ul> <ul> <li> <p>\u67e5\u7684\u662fVMA</p> </li> <li> <p>Each page table entry has a valid\u2013invalid (present) bit</p> </li> <li>\\(v\\) means frame mapped, \\(i\\) means frame not mapped</li> <li>\u4e00\u5f00\u59cb\u6240\u6709entry\u7684\u8fd9\u4e00\u4f4d\u90fd\u88ab\u8bbe\u7f6e\u4e3a\\(i\\)</li> <li>during address translation, if the entry is invalid, it will trigger a page fault</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#who-handles-page-fault","title":"Who handles page fault?","text":"<p>Linux implementation</p> <p>Page Fault \u51fa\u73b0\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u5730\u5740\u672c\u8eab\u8d85\u8fc7\u4e86 <code>vma</code> \u7684\u8303\u56f4\uff0c\u6216\u8005\u843d\u5728 Heap \u5185\u4f46\u6743\u9650\u4e0d\u5bf9\uff0c\u8fd9\u79cd\u60c5\u51b5\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6740\u6b7b\u8fdb\u7a0b\uff1b\u4e00\u79cd\u662f\u843d\u5728 Heap \u91cc\uff0c\u800c\u4e14\u6743\u9650\u4e5f\u6b63\u786e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019 OS \u5c31\u4f1a\u5206\u914d\u4e00\u4e2a\u7a7a\u95f2\u5e27\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u9875\u6620\u5c04\u5230\u8fd9\u4e2a\u5e27\u4e0a\u3002</p> <p>\u4e3a\u4e86\u5224\u65ad\u5730\u5740\u662f\u5426\u843d\u5728 vma \u91cc\uff0cLinux \u4f7f\u7528\u4e86\u7ea2\u9ed1\u6811\u6765\u52a0\u901f\u67e5\u627e\u3002</p> <p>Page Fault Handling</p>"},{"location":"OS/os9%20Virtual%20Memory/#page-fault","title":"Page Fault","text":"<ul> <li>\u5206\u6210major page fault\u548cminor page fault</li> <li>major: \u9700\u8981\u8bbf\u95ee\u786c\u76d8</li> <li> <p>minor: \u4e0d\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u4f46\u662f\u5728\u7269\u7406\u5185\u5b58</p> </li> <li> <p>First reference to a non-present page will trap to kernel: page fault.</p> </li> <li> <p>Operating system looks at memory mapping to decide:</p> </li> <li> <p>invalid reference -&gt; deliver an exception to the process</p> <ul> <li>Via check vma in Linux</li> </ul> <p>\u6ce8\u610f\u8fd9\u91cc\u7684 valid \u4e0d\u662f\u6307 page table \u7684\u6709\u6548\uff0c\u800c\u662f\u8bbf\u95ee\u7684\u5730\u5740\u5728 vma \u91cc\uff0c\u800c\u4e14\u6743\u9650\u6b63\u786e\u3002</p> </li> <li> <p>valid but not in physical memory -&gt; bring in</p> <ul> <li>get an empty physical frame</li> <li>bring page into frame via disk operation</li> <li>set page table entry to indicate the page is now in memory</li> <li>restart the instruction that caused the page fault</li> </ul> </li> <li> <p>extreme case: \u5f00\u59cb\u8fdb\u7a0b\u65f6memory\u5185\u6ca1\u6709frame\uff0c\u53c8\u53ebpure demand paging</p> </li> <li> <p>OS sets instruction pointer to first instruction of process</p> <ul> <li>invalid page \u27a0 page fault</li> </ul> </li> <li>every page is paged in on first access<ul> <li>program locality reduces the overhead</li> <li>an instruction could access multiple pages \u27a0 multiple page </li> </ul> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#swapper","title":"Swapper","text":"<ul> <li>Lazy swapper: never swaps a page in memory unless it will be needed</li> <li>the swapper that deals with pages is also caller a pager</li> <li>Pre-Paging: pre-page all or some of pages a process will need, before they are referenced</li> <li>it can reduce the number of page faults during execution</li> <li>if pre-paged pages are unused, I/O and memory was wasted<ul> <li>although it reduces page faults, total I/O# likely is higher</li> </ul> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#get-free-frame","title":"Get Free Frame","text":"<ul> <li> <p>Most operating systems maintain a free-frame list -- a pool of free frames for satisfying such requests</p> </li> <li> <p>Operating system typically allocate free frames using a technique known as zero-fill-on-demand -- the content of the frames zeroed-out before being allocated</p> </li> </ul> <p>\u4e3a\u4e86\u9632\u6b62\u4fe1\u606f\u6cc4\u9732\uff0c\u5728\u5206\u914d\u65f6\u628a\u5e27\u7684\u6240\u6709\u4f4d\u90fd\u7f6e 0\u3002</p>"},{"location":"OS/os9%20Virtual%20Memory/#stages-in-demand-paging-worse-case","title":"Stages in Demand Paging \u2013 Worse Case","text":"<ol> <li>Trap to the operating system.</li> <li>Save the user registers and process state. (<code>pt_regs</code>)</li> <li>Determine that the interrupt was a page fault.</li> <li>Check that the page reference was legal and determine the location of the page on the disk.</li> <li>Issue a read from the disk to a free frame:    - Wait in a queue for this device until the read request is serviced.    - Wait for the device seek and/or latency time.    - Begin the transfer of the page to a free frame.</li> <li>While waiting, allocate the CPU to other process. \u7b49\u5f85\u8bfb\u53d6\u7684\u8fc7\u7a0b\u4e2d\uff0cCPU\u5206\u914d\u7ed9\u5176\u4ed6process</li> <li>Receive an interrupt from the disk I/O subsystem. (I/O completed)    - Determine that the interrupt was from the disk.    - Mark page fault process ready. \u7b2c\u4e00\u6b21mark\u4e3aready</li> <li>Handle page fault: wait for the CPU to be allocated to this process again. \u7b49\u5f85\u7b2c\u4e8c\u6b21    - Save registers and process state for other process.    - Context switch to page fault process.    - Correct the page table and other tables to show page is now in memory.</li> <li>Return to user: restore the user registers, process state, and new page table, and then resume the interrupted instruction.</li> </ol>"},{"location":"OS/os9%20Virtual%20Memory/#demand-paging-eat","title":"Demand Paging: EAT","text":"<ul> <li> <p>page fault rate: \\(0\\leq p\\leq1\\)</p> </li> <li> <p>Effective Access Time(EAT):   $$ \\begin{aligned} (1-p)\\times\\text{memory access} + p\\times(\\text{page fault overhead} + \\text{swap page out} + \\newline \\text{swap page in} + \\text{instruction restart overhead}) \\end{aligned} $$</p> </li> </ul> <p>Example</p> <p></p>"},{"location":"OS/os9%20Virtual%20Memory/#demand-paging-optimizations","title":"Demand Paging Optimizations","text":"<ul> <li> <p>Swap space I/O faster than file system I/O even if on the same device.</p> </li> <li> <p>Swap allocated in larger chunks, less management needed than file system.</p> </li> <li> <p>Copy entire process image from disk to swap space at process load time</p> </li> <li> <p>Then page in and out of swap space</p> </li> <li> <p>Used in older BSD Unix</p> </li> <li> <p>Demand page in from program binary on disk, but discard rather than paging out when freeing frame (and reload from disk next time)</p> </li> <li> <p>Following cases still need to write to swap space</p> <ul> <li>Pages not associated with a file (like stack and heap) \u2013 anonymous memory</li> <li>Pages modified in memory but not yet written back to the file system \u810f\u6570\u636e</li> </ul> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#copy-on-write","title":"Copy-on-Write","text":"<ul> <li>Copy-on-write (COW) allows parent and child processes to initially share the same </li> </ul> <p>pages in memory</p> <ul> <li> <p>the page is shared as long as no process modifies it</p> </li> <li> <p>if either process modifies a shared page, only then is the page copied</p> <p>\u88ab\u5199\u540e\u624d\u771f\u6b63\u7684\u8fdb\u884ccopy\uff0c\u63d0\u5347fork\u7684\u6548\u7387</p> </li> </ul> <p>vfork syscall optimizes the case that child calls exec immediately after fork.</p> <ul> <li> <p>parent is suspend until child exits or calls exec.</p> </li> <li> <p>child shares the parent resource, including the heap and the stack.</p> </li> <li> <p>child cannot return from the function or call <code>exit</code>, should call <code>_exit</code>.</p> <p>\u5171\u4eab\u5806\u548c\u6808\uff0c\u6240\u4ee5\u5982\u679c\u8c03\u7528 <code>exit</code> \u5c31\u4f1a\u5f04\u4e71\u7236\u8fdb\u7a0b\u7684\u5806\u548c\u6808\uff0c\u56e0\u6b64\u53ea\u80fd\u8c03\u7528 <code>_exit</code>\u3002</p> </li> <li> <p>vfork could be fragile, it is invented when COW has not been implemented.</p> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#page-replacement","title":"Page Replacement","text":"<p>\u6ca1\u6709\u7a7a\u95f2\u7684\u7269\u7406\u5e27\u65f6\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4ea4\u6362\u51fa\u53bb\u4e00\u6574\u4e2a\u8fdb\u7a0b\u4ece\u800c\u91ca\u653e\u5b83\u7684\u6240\u6709\u5e27\uff1b\u66f4\u5e38\u89c1\u5730\uff0c\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u5f53\u524d\u4e0d\u5728\u4f7f\u7528\u7684\u5e27\uff0c\u5e76\u91ca\u653e\u5b83\u3002</p> <p>Page replacement \u2013 find some page in memory, but not really in use, page it out.</p> <p>\u4e0e\u7269\u7406\u5730\u5740\u65e0\u5173</p>"},{"location":"OS/os9%20Virtual%20Memory/#page-fault-handler","title":"Page Fault Handler","text":"<ul> <li> <p>To page in a page:</p> </li> <li> <p>find the location of the desired page on disk</p> </li> <li> <p>find a free frame:</p> <ul> <li>if there is a free frame, use it</li> <li>if there is none, use a page replacement policy to pick a victim frame, write victim frame to disk if dirty</li> </ul> </li> <li> <p>bring the desired page into the free frame; update the page tables</p> </li> <li>restart the instruction that caused the trap</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#page-replacement-algorithms","title":"Page Replacement Algorithms","text":"<ul> <li>Page-replacement algorithm should have lowest page-fault rate on both first access and re-access</li> <li>FIFO, optimal, LRU, LFU, MFU\u2026</li> <li>evaluate\uff1a\u7528\u4e00\u4e32 memory reference string\uff0c\u6bcf\u4e2a\u6570\u5b57\u90fd\u662f\u4e00\u4e2a\u9875\u53f7\uff0c\u7ed9\u51fa\u7269\u7406\u9875\u7684\u6570\u91cf\uff0c\u770b\u6709\u591a\u5c11\u4e2a page faults\u3002</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#fifo","title":"FIFO","text":"<ul> <li>replace the first page loaded </li> </ul> <ul> <li>\u4ee5\u4e0a\u7b2c\u4e8c\u4e2a\u5e8f\u5217\uff0c3\u4e2aframe\u53ea\u67099\u4e2apage fault\uff0c\u4f464\u4e2aframe\u5374\u670910\u4e2a\u3002\u8fd9\u4e2a\u95ee\u9898\u79f0\u4e3aBelady's Anomaly</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#optimal-algorithm","title":"Optimal Algorithm","text":"<ul> <li>Optimal : replace page that will not be used for the longest time</li> <li>\u4f46\u5b9e\u9645\u6211\u4eec\u5b8c\u5168\u4e0d\u77e5\u9053\u54ea\u4e00\u9875\u4e0d\u7528\u7684\u65f6\u95f4\u6700\u4e45\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u9884\u6d4b\u672a\u6765\uff0c\u7528\u6765\u8861\u91cf\u7b97\u6cd5\u7684\u6027\u80fd</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#least-recently-usedlru","title":"Least Recently Used(LRU)","text":"<ul> <li> <p>LRU replaces pages that have not been used for the longest time</p> </li> <li> <p>LRU and OPT do NOT have Belady\u2019s Anomaly.</p> </li> </ul> <ul> <li> <p>implement: </p> </li> <li> <p>counter-based: \u82b1\u9500\u592a\u5927\u4e86</p> </li> <li> <p>stack-based</p> <ul> <li>keep a stack of page numbers (in double linked list)</li> <li>when a page is referenced, move it to the top of the stack</li> <li>each update is more expensive, but no need to search for replacement \u6808\u66f4\u65b0\u5f88\u8017\u65f6\u95f4</li> </ul> <p></p> </li> <li> <p>approximation implementation: LRU approximation with a reference bit</p> <ul> <li>associate with each page a reference bit, initially set to 0</li> <li>when page is referenced, set the bit to 1 (done by the hardware)</li> <li>replace any page with reference bit = 0 (if one exists)</li> </ul> </li> <li> <p>Additional-Reference-Bits Algorithm \u6dfb\u52a0\u52308\u4f4d</p> <ul> <li> <p>Suppose we have 8-bits byte for each page</p> </li> <li> <p>During a time interval (100ms), shifts bit rights by 1 bit, sets the high bit if used, and then discards the low-order bits</p> </li> </ul> <p>\u6bcf\u9694\u4e00\u5b9a\u65f6\u95f4\u53f3\u79fb1\u4f4d\uff0c\u82e5\u8fd9\u6b21\u7684\u95f4\u9694\u5185\u8bbf\u95ee\u4e86\u5c31\u5c06\u6700\u9ad8\u4f4d\u7f6e\u4e3a1\uff0c\u5426\u5219\u7f6e0</p> <ul> <li> <p>00000000 =&gt; has not been used in 8 time intervals</p> </li> <li> <p>11111111 =&gt; has been used in all time intervals</p> </li> <li> <p>11000100 vs 01110111 : which one is used more recently?</p> </li> <li> <p>\u5de6\u8fb9\u7684\uff0c\u56e0\u4e3a\u9ad8\u4f4d\u662f1</p> </li> </ul> </li> <li> <p>Second-chance algorithm</p> <ul> <li>Clock replacement</li> <li>If page to be replaced has</li> <li>Reference bit = 0 -&gt; replace it</li> <li>reference bit = 1 then: \u662f1\u7684\u5c31\u7ed9\u4e24\u6b21\u673a\u4f1a<ul> <li>set reference bit 0, leave page in memory</li> <li>replace next page, subject to same rules</li> </ul> </li> </ul> <p></p> </li> <li> <p>Enhanced Second-Chance Algorithm</p> <ul> <li>Improve algorithm by using reference bit and modify bit (if available) in concert.</li> <li>Take ordered pair (reference, modify):</li> <li>(0, 0) neither recently used not modified \u2013 best page to replace.</li> <li>(0, 1) not recently used but modified \u2013 not quite as good, must write out before replacement.</li> <li>(1, 0) recently used but clean \u2013 probably will be used again soon.</li> <li>(1, 1) recently used and modified \u2013 probably will be used again soon and need to write out before replacement.</li> </ul> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#counting-based-page-replacement","title":"Counting-based Page Replacement","text":"<ul> <li> <p>Keep the number of references made to each page</p> </li> <li> <p>Least Frequently Used (LFU) replaces page with the smallest counter</p> </li> <li> <p>A page is heavily used during process initialization and then never used</p> </li> <li> <p>Most Frequently Used (MFU) replaces page with the largest counter</p> </li> <li> <p>based on the argument that page with the smallest count was probably just brought in and has yet to be used</p> </li> <li> <p>LFU and MFU are not common</p> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#page-buffering-algorithms","title":"Page-Buffering Algorithms","text":"<ul> <li> <p>Keep a pool of free frames, always</p> </li> <li> <p>frame available when needed, no need to find at fault time.</p> <p>\u7ef4\u6301\u4e00\u4e2a\u7a7a\u95f2\u5e27\u7684\u6c60\u5b50\uff0c\u5f53\u9700\u8981\u7684\u65f6\u5019\u76f4\u63a5\u4ece\u6c60\u5b50\u91cc\u53d6\u4e00\u4e2a\u5373\u53ef\u3002</p> </li> <li> <p>When convenient, evict victim.</p> <p>\u7cfb\u7edf\u4e0d\u7e41\u5fd9\u7684\u65f6\u5019\uff0c\u5c31\u628a\u4e00\u4e9b victime frame \u91ca\u653e\u6389\u3002\uff08\u5199\u56de\u5230\u78c1\u76d8\uff0c\u8fd9\u6837\u5e27\u53ef\u4ee5\u52a0\u5230 free list \u91cc\uff09</p> </li> <li> <p>Possibly, keep list of modified pages.</p> </li> <li> <p>Possibly, keep free frame contents intact and note what is in them - a kind of cache.</p> </li> <li> <p>If referenced again before reused, no need to load contents again from disk</p> <ul> <li>cache hit</li> </ul> </li> </ul> <p>Memory intensive applications can cause double buffering - a waste of memory. User \u548c OS \u90fd\u7f13\u5b58\u4e86\u540c\u4e00\u4efd\u5185\u5bb9\uff0c\u5bfc\u81f4\u4e00\u4e2a\u6587\u4ef6\u5360\u7528\u4e86\u4e24\u4e2a\u5e27\u3002</p> <p>Operating system can given direct access to the disk, getting out of the way of the applications </p> <ul> <li>Raw disk mode.   \u8d4b\u4e88\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u8bbf\u95ee\u78c1\u76d8\u7684\u6743\u9650\u3002</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#allocation-of-frames","title":"Allocation of Frames","text":"<ul> <li> <p>Each process needs minimum number of frames -according to instructions semantics</p> </li> <li> <p>type</p> </li> <li> <p>Equal allocation</p> </li> <li> <p>Proportional allocation</p> <ul> <li>Allocate according to the size of process</li> <li>Dynamic as degree of multiprogramming, process sizes change</li> </ul> <p></p> </li> <li> <p>global vs. local allocation</p> </li> <li> <p>global: process selects a replacement frame from the set of all frames; one process can take a frame from another</p> <ul> <li>Reclaiming Pages: page replacement is triggered when the list falls below a certain threshold.</li> </ul> <p>\u5982\u679c free list \u91cc\u7684\u5e27\u6570\u4f4e\u4e8e\u9608\u503c\uff0c\u5c31\u89e6\u53d1 page replacement\u3002\u8fd9\u4e2a\u7b56\u7565\u5e0c\u671b\u4fdd\u8bc1\u8fd9\u91cc\u6709\u5145\u8db3\u7684\u81ea\u7531\u5185\u5b58\u6765\u6ee1\u8db3\u65b0\u7684\u9700\u6c42\u3002</p> <p></p> </li> <li> <p>local: each process selects from only its own set of allocated frames</p> <p>\u53ea\u80fd\u4ece\u81ea\u5df1\u7684\u5e27\u91cc\u9009\u3002</p> </li> <li> <p>Major and minor page faults</p> </li> <li>Major: page is referenced but not in memory</li> <li>Minor: mapping does not exist, but the page is in memory<ul> <li>Shared library</li> <li>Reclaimed and not freed yet</li> </ul> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#non-uniform-memory-access","title":"Non-Uniform Memory Access","text":"<p>\u4e0d\u540c CPU \u8ddd\u79bb\u4e0d\u540c\u7684\u5185\u5b58\u7684\u8ddd\u79bb\u4e0d\u540c\uff0c\u56e0\u6b64\u8bbf\u95ee\u65f6\u95f4\u4e5f\u4e0d\u540c\u3002</p>"},{"location":"OS/os9%20Virtual%20Memory/#thrashing","title":"Thrashing","text":"<p>Thrashing: a process is busy swapping pages in and out.</p> <p>\u5982\u679c\u6211\u4eec\u7684\u8fdb\u7a0b\u4e00\u76f4\u5728\u6362\u8fdb\u6362\u51fa\u9875\uff0c\u90a3\u4e48 CPU \u4f7f\u7528\u7387\u53cd\u800c\u4f1a\u964d\u4f4e\u3002\u8fdb\u7a0b\u8d8a\u591a\uff0c\u53ef\u80fd\u53d1\u751f\u4e00\u4e2a\u8fdb\u7a0b\u7684\u9875\u521a\u52a0\u8f7d\u8fdb\u6765\u53c8\u88ab\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u6362\u51fa\u53bb\uff0c\u6700\u540e\u5927\u90e8\u5206\u8fdb\u7a0b\u90fd\u5728 sleep\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\u76f4\u63a5kill\u6389\u4e00\u4e9b\u8fdb\u7a0b\u5c31\u597d</p> <ul> <li> <p>Why does demand paging work?</p> </li> <li> <p>process memory access has high locality.</p> </li> <li> <p>process migrates from one locality to another, localities may overlap.</p> </li> <li> <p>Why does thrashing occur?</p> </li> <li> <p>total memory size &lt; total size of locality</p> <p>\u4e00\u4e2a locality \u5927\u5c0f\u6bd4\u5185\u5b58\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5f97\u4e0d\u4e00\u76f4\u6362\u8fdb\u6362\u51fa\u9875\u3002</p> </li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#resolve-thrashing","title":"Resolve thrashing","text":"<ol> <li>Limit thrashing effects by using local page replacement    - One process starts thrashing does not affect others -&gt; it cannot cause other processes thrashing    - Select swap out page from the same process</li> </ol> <ol> <li>Working-Set Model</li> </ol> <ul> <li>Working-set window(\\(\\Delta\\)): a fixed number of page references</li> </ul> <p>\u628a\u6240\u6709\u7684 locality \u79f0\u4e3a\u4e00\u4e2a\u5de5\u4f5c\u96c6\uff0cwindows \u662f\u4e00\u4e2a\u5173\u4e8e\u65f6\u95f4\u7684\u7a97\u53e3\uff0c\u4ee3\u8868\u6700\u8fd1 \\(\\Delta\\) \u6b21\u5bf9\u9875\u9762\u7684\u8bbf\u95ee\u3002</p> <ul> <li> <p>Working set of process \\(p_i\\) (WSSi): total number of pages referenced in the most recent \\(\\Delta\\) (varies in time)</p> </li> <li> <p>Total working sets: \\(D = \\sum\\) WSSi</p> </li> </ul> <p>\u786e\u5b9a\u4e00\u4e2a\u8fdb\u7a0b\u9891\u7e41\u8bbf\u95ee\u7684\u9875\u9762\uff0c\u4fdd\u8bc1\u8fd9\u4e9b\u9875\u9762\u4e0d\u88ab\u6362\u51fa\uff1b\u9700\u8981\u8c03\u9875\u65f6\u4ece\u5269\u4f59\u7684\u9875\u9762\u8fdb\u884c\u4ea4\u6362\u3002\u5982\u679c\u9891\u7e41\u8bbf\u95ee\u7684\u9875\u9762\u6570\u5df2\u7ecf\u5927\u4e8e\u4e86\u5f53\u524d\u8fdb\u7a0b\u53ef\u7528\u7684\u9875\u9762\u6570\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e94\u5f53\u628a\u6574\u4e2a\u8fdb\u7a0b\u6362\u51fa\uff0c\u4ee5\u9632\u6b62\u51fa\u73b0\u6296\u52a8\u73b0\u8c61\u3002</p> <ul> <li>\\(\\Delta=10\\)</li> </ul> <p></p> <p>\u600e\u6837\u627e\u5230\u5de5\u4f5c\u96c6\uff1f an interval timer + a reference bit\uff0c\u8bbf\u95ee\u4e86\u8fd9\u4e2a\u754c\u9762\u5c31\u628a reference bit \u7f6e 1\uff0c\u5f53\u5b9a\u65f6\u5668\u5230\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e reference bit \u6765\u5c06\u8fd9\u4e2a\u9875\u9762\u653e\u5230\u5de5\u4f5c\u96c6\u4e2d\u3002</p> <p></p>"},{"location":"OS/os9%20Virtual%20Memory/#other-considerations","title":"Other Considerations","text":"<ol> <li> <p><code>kmalloc</code>: \u8981\u6c42\u865a\u62df\u5730\u5740\u8fde\u7eed\uff0c\u7269\u7406\u5730\u5740\u4e5f\u8fde\u7eed</p> </li> <li> <p><code>vmalloc</code>: \u8981\u6c42\u865a\u62df\u5730\u5740\u8fde\u7eed\uff0c\u7269\u7406\u5730\u5740\u53ef\u4ee5\u4e0d\u8fde\u7eed</p> </li> <li> <p>prepaging: To reduce the large number of page faults that occurs at process startup</p> </li> </ol> <ul> <li>Prepage all or some of the pages a process will need, before they are referenced</li> <li>But if prepaged pages are unused, I/O and memory was wasted</li> </ul> <ol> <li>page size:</li> </ol> <ul> <li>Fragmentation -&gt; small page size</li> <li>Page table size -&gt; large page size</li> <li>Resolution -&gt; small page size</li> <li>I/O overhead -&gt; large page size</li> <li>Number of page faults -&gt; large page size</li> <li>Locality -&gt; small page size</li> <li>TLB size and effectiveness -&gt; large page size</li> </ul> <p>\u73b0\u5728\u503e\u5411\u4e8elarge\uff0c\u56e0\u4e3a\u5185\u5b58\u4fbf\u5b9c\u4e86</p> <ol> <li>TLB reach: the amount of memory accessible from the TLB</li> </ol> <ul> <li>= TLB size x page size</li> <li>Increase the page size to reduce TLB pressure</li> </ul> <ol> <li>program structure can affect page faults (\u5982\u591a\u5c42for\u5faa\u73af\u7684\u987a\u5e8f)</li> </ol> <ol> <li>I/O interlock: Pages that are used for copying a file from a device must be locked from being selected for eviction by a page replacement algorithm</li> </ol>"},{"location":"OS/os9%20Virtual%20Memory/#linux-buddy-system","title":"Linux Buddy System","text":"<p>Buddy system \u4ece\u7269\u7406\u8fde\u7eed\u7684\u6bb5\u4e0a\u5206\u914d\u5185\u5b58\uff1b\u6bcf\u6b21\u5206\u914d\u5185\u5b58\u5927\u5c0f\u662f 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4f8b\u5982\u8bf7\u6c42\u662f 11KB\uff0c\u5219\u5206\u914d 16KB\u3002</p> <p>split the unit into two \u201cbuddies\u201d until a proper sized chunk is available</p> <p>\u5f53\u5206\u914d\u65f6\uff0c\u4ece\u7269\u7406\u6bb5\u4e0a\u5207\u5206\u51fa\u5bf9\u5e94\u7684\u5927\u5c0f\uff08\u6bcf\u6b21\u5207\u5206\u90fd\u662f\u5e73\u5206\uff09\u3002</p> <p>\u5b83\u88ab\u91ca\u653e\u65f6\uff0c\u4f1a\u5408\u5e76 (coalesce) \u76f8\u90bb\u7684\u5757\u5f62\u6210\u66f4\u5927\u7684\u5757\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002</p> <ul> <li>advantage: it can quickly merge unused chunks into larger chunk.</li> </ul> <p>\u53ef\u4ee5\u8fc5\u901f\u7ec4\u88c5\u6210\u5927\u5185\u5b58\uff08\u91ca\u653e\u540e\u5373\u53ef\u5408\u5e76\uff09\u3002</p> <ul> <li>disadvantage: internal fragmentation</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#slab-allocation","title":"Slab Allocation","text":"<p>\u8981\u5206\u914d\u5f88\u591a <code>task_struct</code>\uff0c\u5982\u4f55\u8fc5\u901f\u5206\u914d\u3002\u6211\u4eec\u628a\u591a\u4e2a\u8fde\u7eed\u7684\u9875\u9762\u653e\u5230\u4e00\u8d77\uff0c\u5c06 objects \u7edf\u4e00\u5206\u914d\u5230\u8fd9\u4e9b\u9875\u9762\u4e0a\u3002</p> <p>Slab allocator is a cache of objects.</p> <ul> <li>a cache in a slab allocator consists of one or more slabs</li> <li>a slab contains one or more pages, divided into equal-sized objects</li> </ul> <p>Upon request, slab allocator</p> <ul> <li>Uses free struct in partial slab</li> <li>If none, takes one from empty slab</li> <li>If no empty slab, create new empty</li> </ul> <p>A 12k slab (3 pages) can store 4 3k objects.</p> <p></p> <ul> <li>mm_struct\u91cc\u5b58\u7684\u662fuser page table</li> </ul>"},{"location":"OS/os9%20Virtual%20Memory/#large-physical-ram","title":"Large physical RAM","text":"<ul> <li>how about large physical RAM &gt;= 1GB, even larger than the kernel AS</li> <li>For large memory systems (more than ~1GBRAM), not all of the physical RAM can be linearly mapped into the kernel's address space.</li> <li>Kernel address space is the top 1GB of virtual address space, by default.</li> <li>Further, 128 MB is reserved at the top of the kernel's memory space for non-contiguous allocations</li> <li>kernel logical address\u90e8\u5206\u662flinear mapping\u7684\uff0cvirtual address\u90e8\u5206\u662fnonlinear mapping</li> </ul> <ul> <li>ARM64 \u6bcf\u6b21\u8fdb\u7a0b\u5207\u6362\u6362\u7684\u662fTTBR0</li> </ul> <ul> <li>only the bottom part of physical RAM has a kernel logical address</li> <li>\u53ea\u6709\u4f4e896MB\u53ef\u4ee5\u88ab\u6620\u5c04</li> </ul> <ul> <li>RMAP: maps physical frames to virtual addresses</li> </ul>"},{"location":"OpenGL/learnopengl/","title":"LearnOpenGL","text":""},{"location":"OpenGL/learnopengl/#_1","title":"\u5165\u95e8","text":""},{"location":"OpenGL/learnopengl/#_2","title":"\u57fa\u672c\u5185\u5bb9","text":"<ol> <li>\u8f93\u5165\u63a7\u5236</li> </ol> <pre><code>void processInput(GLFWwindow *window)\n{\n    if(glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)\n        glfwSetWindowShouldClose(window, true);\n}\n\nwhile (!glfwWindowShouldClose(window))\n{\n    processInput(window);\n\n    glfwSwapBuffers(window);\n    glfwPollEvents();\n}\n</code></pre> <ol> <li> <p>\u56fe\u5143\u5305\u62ec: <code>GL_POINTS</code>, <code>GL_TRIANGLES</code>, <code>GL_LINE_STRIP</code></p> </li> <li> <p>\u4f7f\u7528glGenBuffers\u51fd\u6570\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u7f13\u51b2ID\u7684VBO(Vertex Buffer Objects)\u5bf9\u8c61</p> <pre><code>unsigned int VBO;\nglGenBuffers(1, &amp;VBO);\n</code></pre> </li> </ol> <p>\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u7f13\u51b2\u7c7b\u578b\u662fGL_ARRAY_BUFFER\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u540c\u65f6\u7ed1\u5b9a\u591a\u4e2a\u7f13\u51b2\uff0c\u53ea\u8981\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u7f13\u51b2\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528glBindBuffer\u51fd\u6570\u628a\u65b0\u521b\u5efa\u7684\u7f13\u51b2\u7ed1\u5b9a\u5230GL_ARRAY_BUFFER\u76ee\u6807\u4e0a\uff1a</p> <pre><code>```c++\nglBindBuffer(GL_ARRAY_BUFFER, VBO);  \n```\n</code></pre> <p>\u4ece\u8fd9\u4e00\u523b\u8d77\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u4efb\u4f55\uff08\u5728GL_ARRAY_BUFFER\u76ee\u6807\u4e0a\u7684\uff09\u7f13\u51b2\u8c03\u7528\u90fd\u4f1a\u7528\u6765\u914d\u7f6e\u5f53\u524d\u7ed1\u5b9a\u7684\u7f13\u51b2(VBO)\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8c03\u7528glBufferData\u51fd\u6570\uff0c\u5b83\u4f1a\u628a\u4e4b\u524d\u5b9a\u4e49\u7684\u9876\u70b9\u6570\u636e\u590d\u5236\u5230\u7f13\u51b2\u7684\u5185\u5b58\u4e2d\uff1a</p> <pre><code>```c++\nglBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n```\n</code></pre> <p>glBufferData\u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u628a\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\u590d\u5236\u5230\u5f53\u524d\u7ed1\u5b9a\u7f13\u51b2\u7684\u51fd\u6570\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u6807\u7f13\u51b2\u7684\u7c7b\u578b\uff1a\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u5f53\u524d\u7ed1\u5b9a\u5230GL_ARRAY_BUFFER\u76ee\u6807\u4e0a\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u4f20\u8f93\u6570\u636e\u7684\u5927\u5c0f(\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d)\uff1b\u7528\u4e00\u4e2a\u7b80\u5355\u7684<code>sizeof</code>\u8ba1\u7b97\u51fa\u9876\u70b9\u6570\u636e\u5927\u5c0f\u5c31\u884c\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u5e0c\u671b\u53d1\u9001\u7684\u5b9e\u9645\u6570\u636e\u3002</p> <p>\u7b2c\u56db\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u6211\u4eec\u5e0c\u671b\u663e\u5361\u5982\u4f55\u7ba1\u7406\u7ed9\u5b9a\u7684\u6570\u636e\u3002\u5b83\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a</p> <pre><code>  - GL_STATIC_DRAW \uff1a\u6570\u636e\u4e0d\u4f1a\u6216\u51e0\u4e4e\u4e0d\u4f1a\u6539\u53d8\u3002\n  - GL_DYNAMIC_DRAW\uff1a\u6570\u636e\u4f1a\u88ab\u6539\u53d8\u5f88\u591a\u3002\n  - GL_STREAM_DRAW \uff1a\u6570\u636e\u6bcf\u6b21\u7ed8\u5236\u65f6\u90fd\u4f1a\u6539\u53d8\u3002\n</code></pre> <p>\u4e09\u89d2\u5f62\u7684\u4f4d\u7f6e\u6570\u636e\u4e0d\u4f1a\u6539\u53d8\uff0c\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u65f6\u90fd\u4fdd\u6301\u539f\u6837\uff0c\u6240\u4ee5\u5b83\u7684\u4f7f\u7528\u7c7b\u578b\u6700\u597d\u662fGL_STATIC_DRAW\u3002\u5982\u679c\uff0c\u6bd4\u5982\u8bf4\u4e00\u4e2a\u7f13\u51b2\u4e2d\u7684\u6570\u636e\u5c06\u9891\u7e41\u88ab\u6539\u53d8\uff0c\u90a3\u4e48\u4f7f\u7528\u7684\u7c7b\u578b\u5c31\u662fGL_DYNAMIC_DRAW\u6216GL_STREAM_DRAW\uff0c\u8fd9\u6837\u5c31\u80fd\u786e\u4fdd\u663e\u5361\u628a\u6570\u636e\u653e\u5728\u80fd\u591f\u9ad8\u901f\u5199\u5165\u7684\u5185\u5b58\u90e8\u5206\u3002</p> <ol> <li> <p><code>gl_Position</code>\u662f<code>vec4</code>\u7c7b\u578b\u7684</p> </li> <li> <p>\u7f16\u8bd1\u7740\u8272\u5668</p> <pre><code>const char *vertexShaderSource = \"#version 330 core\\n\"\n    \"layout (location = 0) in vec3 aPos;\\n\"\n    \"void main()\\n\"\n    \"{\\n\"\n    \"   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n\"\n    \"}\\0\";\nunsigned int vertexShader;\nvertexShader = glCreateShader(GL_VERTEX_SHADER);\nglShaderSource(vertexShader, 1, &amp;vertexShaderSource, NULL);\nglCompileShader(vertexShader);\n</code></pre> </li> <li> <p>\u7247\u6bb5\u7740\u8272\u5668</p> <pre><code>unsigned int fragmentShader;\nfragmentShader = glCreateShader(GL_FRAGMENT_SHADER);\nglShaderSource(fragmentShader, 1, &amp;fragmentShaderSource, NULL);\nglCompileShader(fragmentShader);\n</code></pre> </li> <li> <p>\u7740\u8272\u5668\u7a0b\u5e8f</p> <pre><code>unsigned int shaderProgram;\nshaderProgram = glCreateProgram();\nglAttachShader(shaderProgram, vertexShader);\nglAttachShader(shaderProgram, fragmentShader);\nglLinkProgram(shaderProgram);\n// \u5728glUseProgram\u51fd\u6570\u8c03\u7528\u4e4b\u540e\uff0c\u6bcf\u4e2a\u7740\u8272\u5668\u8c03\u7528\u548c\u6e32\u67d3\u8c03\u7528\u90fd\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u5bf9\u8c61\nglUseProgram(shaderProgram);\n// \u5728\u628a\u7740\u8272\u5668\u5bf9\u8c61\u94fe\u63a5\u5230\u7a0b\u5e8f\u5bf9\u8c61\u4ee5\u540e\uff0c\u8bb0\u5f97\u5220\u9664\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u5b83\u4eec\u4e86\nglDeleteShader(vertexShader);\nglDeleteShader(fragmentShader);\n</code></pre> </li> <li> <p>\u94fe\u63a5\u9876\u70b9\u5c5e\u6027</p> <pre><code>glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);\nglEnableVertexAttribArray(0);\n</code></pre> <ul> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u6211\u4eec\u8981\u914d\u7f6e\u7684\u9876\u70b9\u5c5e\u6027\u3002<code>layout(location = 0)</code>\u5b9a\u4e49\u4e86position\u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u503c(Location)\u5417\uff1f\u5b83\u53ef\u4ee5\u628a\u9876\u70b9\u5c5e\u6027\u7684\u4f4d\u7f6e\u503c\u8bbe\u7f6e\u4e3a<code>0</code>\u3002\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u628a\u6570\u636e\u4f20\u9012\u5230\u8fd9\u4e00\u4e2a\u9876\u70b9\u5c5e\u6027\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4f20\u5165<code>0</code>\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u9876\u70b9\u5c5e\u6027\u7684\u5927\u5c0f\u3002\u9876\u70b9\u5c5e\u6027\u662f\u4e00\u4e2a<code>vec3</code>\uff0c\u5b83\u75313\u4e2a\u503c\u7ec4\u6210\uff0c\u6240\u4ee5\u5927\u5c0f\u662f3\u3002</li> <li>\u7b2c\u4e09\u4e2a\u53c2\u6570\u6307\u5b9a\u6570\u636e\u7684\u7c7b\u578b\u3002</li> <li>\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u4e3aGL_TRUE\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u88ab\u6620\u5c04\u52300\uff08\u5bf9\u4e8e\u6709\u7b26\u53f7\u578bsigned\u6570\u636e\u662f-1\uff09\u52301\u4e4b\u95f4\u3002\u6211\u4eec\u628a\u5b83\u8bbe\u7f6e\u4e3aGL_FALSE\u3002</li> <li>\u7b2c\u4e94\u4e2a\u53c2\u6570\u53eb\u505a\u6b65\u957f(Stride)\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u5728\u8fde\u7eed\u7684\u9876\u70b9\u5c5e\u6027\u7ec4\u4e4b\u95f4\u7684\u95f4\u9694\u3002\u7531\u4e8e\u4e0b\u4e2a\u7ec4\u4f4d\u7f6e\u6570\u636e\u57283\u4e2a<code>float</code>\u4e4b\u540e\uff0c\u6211\u4eec\u628a\u6b65\u957f\u8bbe\u7f6e\u4e3a<code>3 * sizeof(float)</code>\u3002\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u6570\u7ec4\u662f\u7d27\u5bc6\u6392\u5217\u7684\uff08\u5728\u4e24\u4e2a\u9876\u70b9\u5c5e\u6027\u4e4b\u95f4\u6ca1\u6709\u7a7a\u9699\uff09\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\u6765\u8ba9OpenGL\u51b3\u5b9a\u5177\u4f53\u6b65\u957f\u662f\u591a\u5c11\uff08\u53ea\u6709\u5f53\u6570\u503c\u662f\u7d27\u5bc6\u6392\u5217\u65f6\u624d\u53ef\u7528\uff09\u3002\u4e00\u65e6\u6211\u4eec\u6709\u66f4\u591a\u7684\u9876\u70b9\u5c5e\u6027\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u66f4\u5c0f\u5fc3\u5730\u5b9a\u4e49\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u6211\u4eec\u5728\u540e\u9762\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\uff08\u8bd1\u6ce8: \u8fd9\u4e2a\u53c2\u6570\u7684\u610f\u601d\u7b80\u5355\u8bf4\u5c31\u662f\u4ece\u8fd9\u4e2a\u5c5e\u6027\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u5730\u65b9\u5230\u6574\u4e2a\u6570\u7ec40\u4f4d\u7f6e\u4e4b\u95f4\u6709\u591a\u5c11\u5b57\u8282\uff09\u3002</li> <li>\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u662f<code>void*</code>\uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u8fdb\u884c\u8fd9\u4e2a\u5947\u602a\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002\u5b83\u8868\u793a\u4f4d\u7f6e\u6570\u636e\u5728\u7f13\u51b2\u4e2d\u8d77\u59cb\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf(Offset)\u3002</li> </ul> </li> <li> <p>\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61</p> <pre><code>// ..:: \u521d\u59cb\u5316\u4ee3\u7801\uff08\u53ea\u8fd0\u884c\u4e00\u6b21 (\u9664\u975e\u4f60\u7684\u7269\u4f53\u9891\u7e41\u6539\u53d8)\uff09 :: ..\n// 1. \u7ed1\u5b9aVAO\nglBindVertexArray(VAO);\n// 2. \u628a\u9876\u70b9\u6570\u7ec4\u590d\u5236\u5230\u7f13\u51b2\u4e2d\u4f9bOpenGL\u4f7f\u7528\nglBindBuffer(GL_ARRAY_BUFFER, VBO);\nglBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n// 3. \u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);\nglEnableVertexAttribArray(0);\n\n// ..:: \u7ed8\u5236\u4ee3\u7801\uff08\u6e32\u67d3\u5faa\u73af\u4e2d\uff09 :: ..\n// 4. \u7ed8\u5236\u7269\u4f53\nglUseProgram(shaderProgram);\nglBindVertexArray(VAO);\nsomeOpenGLFunctionThatDrawsOurTriangle();\n</code></pre> </li> <li> <p><code>glDrawArrays(GL_TRIANGLES, 0, 3);</code></p> </li> <li> <p>\u5143\u7d20\u7f13\u51b2\u5bf9\u8c61\uff0c\u7d22\u5f15\u7ed8\u5236</p> <pre><code>float vertices[] = {\n    0.5f, 0.5f, 0.0f,   // \u53f3\u4e0a\u89d2\n    0.5f, -0.5f, 0.0f,  // \u53f3\u4e0b\u89d2\n    -0.5f, -0.5f, 0.0f, // \u5de6\u4e0b\u89d2\n    -0.5f, 0.5f, 0.0f   // \u5de6\u4e0a\u89d2\n};\n\nunsigned int indices[] = {\n    // \u6ce8\u610f\u7d22\u5f15\u4ece0\u5f00\u59cb! \u8fd9\u6837\u53ef\u4ee5\u7531\u4e0b\u6807\u4ee3\u8868\u9876\u70b9\u7ec4\u5408\u6210\u77e9\u5f62\n\n    0, 1, 3, // \u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\n    1, 2, 3  // \u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\n};\n\nunsigned int EBO;\nglGenBuffers(1, &amp;EBO);\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW);\n\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);\nglDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0);\n</code></pre> <ul> <li>\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u6253\u7b97\u7ed8\u5236\u9876\u70b9\u7684\u4e2a\u6570\uff0c\u8fd9\u91cc\u586b6\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e00\u5171\u9700\u8981\u7ed8\u52366\u4e2a\u9876\u70b9\u3002\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u7d22\u5f15\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u662fGL_UNSIGNED_INT\u3002\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u91cc\u6211\u4eec\u53ef\u4ee5\u6307\u5b9aEBO\u4e2d\u7684\u504f\u79fb\u91cf\uff08\u6216\u8005\u4f20\u9012\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4\uff0c\u4f46\u662f\u8fd9\u662f\u5f53\u4f60\u4e0d\u5728\u4f7f\u7528\u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61\u7684\u65f6\u5019\uff09\uff0c\u4f46\u662f\u6211\u4eec\u4f1a\u5728\u8fd9\u91cc\u586b\u51990\u3002</li> </ul> </li> <li> <p>\u6700\u540e</p> <p></p> <pre><code>// ..:: \u521d\u59cb\u5316\u4ee3\u7801 :: ..\n// 1. \u7ed1\u5b9a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\nglBindVertexArray(VAO);\n// 2. \u628a\u6211\u4eec\u7684\u9876\u70b9\u6570\u7ec4\u590d\u5236\u5230\u4e00\u4e2a\u9876\u70b9\u7f13\u51b2\u4e2d\uff0c\u4f9bOpenGL\u4f7f\u7528\nglBindBuffer(GL_ARRAY_BUFFER, VBO);\nglBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n// 3. \u590d\u5236\u6211\u4eec\u7684\u7d22\u5f15\u6570\u7ec4\u5230\u4e00\u4e2a\u7d22\u5f15\u7f13\u51b2\u4e2d\uff0c\u4f9bOpenGL\u4f7f\u7528\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW);\n// 4. \u8bbe\u5b9a\u9876\u70b9\u5c5e\u6027\u6307\u9488\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);\nglEnableVertexAttribArray(0);\n\n[...]\n\n// ..:: \u7ed8\u5236\u4ee3\u7801\uff08\u6e32\u67d3\u5faa\u73af\u4e2d\uff09 :: ..\nglUseProgram(shaderProgram);\nglBindVertexArray(VAO);\nglDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0);\nglBindVertexArray(0);\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_3","title":"\u7740\u8272\u5668","text":"<ol> <li>\u5411\u91cf\uff1a\u5927\u591a\u6570\u65f6\u5019\u4f7f\u7528<code>vecn</code>\uff0cfloat\u8db3\u591f\u4e86\uff0c\u4f7f\u7528<code>.x</code>\u3001<code>.y</code>\u3001<code>.z</code>\u548c<code>.w</code>\u6765\u83b7\u53d6\u5b83\u4eec\u7684\u7b2c1\u30012\u30013\u30014\u4e2a\u5206\u91cf</li> </ol> \u7c7b\u578b \u542b\u4e49 <code>vecn</code> \u5305\u542b<code>n</code>\u4e2afloat\u5206\u91cf\u7684\u9ed8\u8ba4\u5411\u91cf <code>bvecn</code> \u5305\u542b<code>n</code>\u4e2abool\u5206\u91cf\u7684\u5411\u91cf <code>ivecn</code> \u5305\u542b<code>n</code>\u4e2aint\u5206\u91cf\u7684\u5411\u91cf <code>uvecn</code> \u5305\u542b<code>n</code>\u4e2aunsigned int\u5206\u91cf\u7684\u5411\u91cf <code>dvecn</code> \u5305\u542b<code>n</code>\u4e2adouble\u5206\u91cf\u7684\u5411\u91cf <pre><code>  - \u91cd\u7ec4\uff1a\n\n    ```c++\n    vec2 someVec;\n    vec4 differentVec = someVec.xyxx;\n    vec3 anotherVec = differentVec.zyw;\n    vec4 otherVec = someVec.xxxx + anotherVec.yxzy;\n    ```\n</code></pre> <ol> <li> <p>\u8f93\u5165\u4e0e\u8f93\u51fa</p> <ul> <li> <p>\u9876\u70b9\u7740\u8272\u5668</p> <pre><code>#version 330 core\nlayout (location = 0) in vec3 aPos; // \u4f4d\u7f6e\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a0\n\nout vec4 vertexColor; // \u4e3a\u7247\u6bb5\u7740\u8272\u5668\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\u8f93\u51fa\n\nvoid main()\n{\n    gl_Position = vec4(aPos, 1.0); // \u6ce8\u610f\u6211\u4eec\u5982\u4f55\u628a\u4e00\u4e2avec3\u4f5c\u4e3avec4\u7684\u6784\u9020\u5668\u7684\u53c2\u6570\n    vertexColor = vec4(0.5, 0.0, 0.0, 1.0); // \u628a\u8f93\u51fa\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u6697\u7ea2\u8272\n}\n</code></pre> </li> <li> <p>\u7247\u6bb5\u7740\u8272\u5668</p> <pre><code>#version 330 core\nlayout (location = 0) in vec3 aPos; // \u4f4d\u7f6e\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a0\n\nout vec4 vertexColor; // \u4e3a\u7247\u6bb5\u7740\u8272\u5668\u6307\u5b9a\u4e00\u4e2a\u989c\u8272\u8f93\u51fa\n\nvoid main()\n{\n    gl_Position = vec4(aPos, 1.0); // \u6ce8\u610f\u6211\u4eec\u5982\u4f55\u628a\u4e00\u4e2avec3\u4f5c\u4e3avec4\u7684\u6784\u9020\u5668\u7684\u53c2\u6570\n    vertexColor = vec4(0.5, 0.0, 0.0, 1.0); // \u628a\u8f93\u51fa\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u6697\u7ea2\u8272\n}\n</code></pre> </li> </ul> </li> <li> <p>Uniform</p> <p>```c++ uniform vec4 ourColor; </p> <p>float timeValue = glfwGetTime(); float greenValue = (sin(timeValue) / 2.0f) + 0.5f; // \u8fd4\u56de-1\u5c31\u4ee3\u8868\u6ca1\u6709\u627e\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u503c int vertexColorLocation = glGetUniformLocation(shaderProgram, \"ourColor\"); glUseProgram(shaderProgram); // \u67e5\u8be2uniform\u5730\u5740\u4e0d\u8981\u6c42\u4f60\u4e4b\u524d\u4f7f\u7528\u8fc7\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u4f46\u662f\u66f4\u65b0\u4e00\u4e2auniform\u4e4b\u524d\u4f60\u5fc5\u987b\u5148\u4f7f\u7528\u7a0b\u5e8f\uff08\u8c03\u7528glUseProgram)\uff0c\u56e0\u4e3a\u5b83\u662f\u5728\u5f53\u524d\u6fc0\u6d3b\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u8bbe\u7f6euniform\u7684 glUniform4f(vertexColorLocation, 0.0f, greenValue, 0.0f, 1.0f);    ```</p> </li> <li> <p>\u66f4\u591a\u5c5e\u6027</p> <pre><code>float vertices[] = {\n    // \u4f4d\u7f6e              // \u989c\u8272\n        0.5f, -0.5f, 0.0f,  1.0f, 0.0f, 0.0f,   // \u53f3\u4e0b\n    -0.5f, -0.5f, 0.0f,  0.0f, 1.0f, 0.0f,   // \u5de6\u4e0b\n        0.0f,  0.5f, 0.0f,  0.0f, 0.0f, 1.0f    // \u9876\u90e8\n};\n\n#version 330 core\nlayout (location = 0) in vec3 aPos;   // \u4f4d\u7f6e\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a 0 \nlayout (location = 1) in vec3 aColor; // \u989c\u8272\u53d8\u91cf\u7684\u5c5e\u6027\u4f4d\u7f6e\u503c\u4e3a 1\n\nout vec3 ourColor; // \u5411\u7247\u6bb5\u7740\u8272\u5668\u8f93\u51fa\u4e00\u4e2a\u989c\u8272\n\nvoid main()\n{\n    gl_Position = vec4(aPos, 1.0);\n    ourColor = aColor; // \u5c06ourColor\u8bbe\u7f6e\u4e3a\u6211\u4eec\u4ece\u9876\u70b9\u6570\u636e\u90a3\u91cc\u5f97\u5230\u7684\u8f93\u5165\u989c\u8272\n}\n\n#version 330 core\nout vec4 FragColor;  \nin vec3 ourColor;\n\nvoid main()\n{\n    FragColor = vec4(ourColor, 1.0);\n}\n\n// \u4f4d\u7f6e\u5c5e\u6027\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)0);\nglEnableVertexAttribArray(0);\n// \u989c\u8272\u5c5e\u6027\nglVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(float), (void*)(3* sizeof(float)));\nglEnableVertexAttribArray(1);\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_4","title":"\u7eb9\u7406","text":"<ol> <li> <p>\u6bcf\u4e2a\u9876\u70b9\u5173\u8054\u4e00\u4e2a\u7eb9\u7406\u5750\u6807\uff0c\u8868\u793a\u4ece\u7eb9\u7406\u54ea\u4e00\u90e8\u5206\u91c7\u6837\uff0c\u5176\u4f59\u8fdb\u884c\u7ebf\u6027\u63d2\u503c</p> </li> <li> <p>\u9ed8\u8ba4\u7eb9\u7406\u5750\u6807\u8303\u56f4(0,0)\u5230(1,1)\u3002\u8bbe\u5728\u8303\u56f4\u5916\u9ed8\u8ba4\u662f\u91cd\u590d\u7eb9\u7406\u56fe\u50cf\uff0c\u4f46\u8fd8\u6709\u5176\u4ed6\u9009\u62e9</p> </li> </ol> \u73af\u7ed5\u65b9\u5f0f \u63cf\u8ff0 GL_REPEAT \u5bf9\u7eb9\u7406\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002\u91cd\u590d\u7eb9\u7406\u56fe\u50cf\u3002 GL_MIRRORED_REPEAT \u548cGL_REPEAT\u4e00\u6837\uff0c\u4f46\u6bcf\u6b21\u91cd\u590d\u56fe\u7247\u662f\u955c\u50cf\u653e\u7f6e\u7684\u3002 GL_CLAMP_TO_EDGE \u7eb9\u7406\u5750\u6807\u4f1a\u88ab\u7ea6\u675f\u57280\u52301\u4e4b\u95f4\uff0c\u8d85\u51fa\u7684\u90e8\u5206\u4f1a\u91cd\u590d\u7eb9\u7406\u5750\u6807\u7684\u8fb9\u7f18\uff0c\u4ea7\u751f\u4e00\u79cd\u8fb9\u7f18\u88ab\u62c9\u4f38\u7684\u6548\u679c\u3002 GL_CLAMP_TO_BORDER \u8d85\u51fa\u7684\u5750\u6807\u4e3a\u7528\u6237\u6307\u5b9a\u7684\u8fb9\u7f18\u989c\u8272\u3002 <ol> <li> <p>\u4e0a\u8ff0\u9009\u9879\u53ef\u4ee5\u5bf9\u5355\u72ec\u4e00\u4e2a\u5750\u6807\u8f74\u8bbe\u7f6e(2D s,t 3D s,t,r)</p> <pre><code>// \u7eb9\u7406\u76ee\u6807\u3001\u8bbe\u7f6e\u7684\u9009\u9879\u4e0e\u5e94\u7528\u7684\u7eb9\u7406\u8f74\u3001\u73af\u7ed5\u65b9\u5f0f\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);\nfloat borderColor[] = { 1.0f, 1.0f, 0.0f, 1.0f };\nglTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, borderColor);\n</code></pre> </li> <li> <p>\u7eb9\u7406\u8fc7\u6ee4</p> <ul> <li> <p><code>GL_NEAREST</code> \u90bb\u8fd1\u8fc7\u6ee4\uff0c\u9009\u4e2d\u5fc3\u70b9\u6700\u63a5\u8fd1\u7eb9\u7406\u5750\u6807\u7684\u50cf\u7d20</p> </li> <li> <p><code>GL_LINEAR</code> \u7ebf\u6027\u8fc7\u6ee4\uff0c\u7ebf\u6027\u63d2\u503c\uff0c\u66f4\u52a0\u5e73\u6ed1</p> </li> <li> <p>\u5728\u7eb9\u7406\u88ab\u7f29\u5c0f\u7684\u65f6\u5019\u4f7f\u7528\u90bb\u8fd1\u8fc7\u6ee4\uff0c\u88ab\u653e\u5927\u65f6\u4f7f\u7528\u7ebf\u6027\u8fc7\u6ee4</p> <pre><code>glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n</code></pre> </li> </ul> </li> <li> <p>\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff1a\u8ddd\u89c2\u5bdf\u8005\u7684\u8ddd\u79bb\u8d85\u8fc7\u4e00\u5b9a\u7684\u9608\u503c\uff0cOpenGL\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\uff0c\u5373\u6700\u9002\u5408\u7269\u4f53\u7684\u8ddd\u79bb\u7684\u90a3\u4e2a <code>glGenerateMipmap</code> </p> </li> </ol> <p>\u5207\u6362\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u65f6\u4f60\u4e5f\u53ef\u4ee5\u5728\u4e24\u4e2a\u4e0d\u540c\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\u4e4b\u95f4\u4f7f\u7528NEAREST\u548cLINEAR\u8fc7\u6ee4</p> \u8fc7\u6ee4\u65b9\u5f0f \u63cf\u8ff0 GL_NEAREST_MIPMAP_NEAREST \u4f7f\u7528\u6700\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u6765\u5339\u914d\u50cf\u7d20\u5927\u5c0f\uff0c\u5e76\u4f7f\u7528\u90bb\u8fd1\u63d2\u503c\u8fdb\u884c\u7eb9\u7406\u91c7\u6837 GL_LINEAR_MIPMAP_NEAREST \u4f7f\u7528\u6700\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7ea7\u522b\uff0c\u5e76\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u8fdb\u884c\u91c7\u6837 GL_NEAREST_MIPMAP_LINEAR \u5728\u4e24\u4e2a\u6700\u5339\u914d\u50cf\u7d20\u5927\u5c0f\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e4b\u95f4\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\uff0c\u4f7f\u7528\u90bb\u8fd1\u63d2\u503c\u8fdb\u884c\u91c7\u6837 GL_LINEAR_MIPMAP_LINEAR \u5728\u4e24\u4e2a\u90bb\u8fd1\u7684\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u4e4b\u95f4\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\uff0c\u5e76\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u8fdb\u884c\u91c7\u6837 <p>\u540c\u6837\u53ef\u4ee5\u7528\u4e00\u6837\u7684\u51fd\u6570\u8bbe\u7f6e</p> <pre><code>glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n</code></pre> <ol> <li>\u52a0\u8f7d\u4e0e\u521b\u5efa\u7eb9\u7406</li> </ol> <p>stb_image.h</p> <pre><code>int width, height, nrChannels;\nunsigned char *data = stbi_load(\"container.jpg\", &amp;width, &amp;height, &amp;nrChannels, 0);\n// \u8bfb\u53d6\u5bf9\u5e94\u6587\u4ef6\u5e76\u5c06\u5bbd\u5ea6\u9ad8\u5ea6\u989c\u8272\u901a\u9053\u6570\u586b\u5145\u5230\u5bf9\u5e94\u53d8\u91cf\n</code></pre> <ol> <li> <p>\u751f\u6210\u7eb9\u7406</p> <pre><code>unsigned int texture;\nglGenTextures(1, &amp;texture); // \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u751f\u6210\u7eb9\u7406\u7684\u6570\u91cf\nglBindTexture(GL_TEXTURE_2D, texture);\nglTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data);\n// target, 0\u4ee3\u8868\u591a\u7ea7\u6e10\u8fdc\u7eb9\u7406\u7684\u57fa\u672c\u7ea7\u522b\uff0c\u7eb9\u7406\u50a8\u5b58\u683c\u5f0f\u4f7f\u7528RGB\uff0c\u6700\u7ec8\u7eb9\u7406\u7684\u5bbd\u5ea6\uff0c\u9ad8\u5ea6\uff0c\u603b\u5e94\u8be5\u662f0\uff0c\u539f\u56fe\u7684\u683c\u5f0f\uff0c\u7c7b\u578b\uff0c\u56fe\u50cf\u6570\u636e\nglGenerateMipmap(GL_TEXTURE_2D);\nstbi_image_free(data);\n</code></pre> </li> </ol> <p>example</p> <pre><code>unsigned int texture;\nglGenTextures(1, &amp;texture);\nglBindTexture(GL_TEXTURE_2D, texture);\n// \u4e3a\u5f53\u524d\u7ed1\u5b9a\u7684\u7eb9\u7406\u5bf9\u8c61\u8bbe\u7f6e\u73af\u7ed5\u3001\u8fc7\u6ee4\u65b9\u5f0f\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);   \nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n// \u52a0\u8f7d\u5e76\u751f\u6210\u7eb9\u7406\nint width, height, nrChannels;\nunsigned char *data = stbi_load(\"container.jpg\", &amp;width, &amp;height, &amp;nrChannels, 0);\nif (data)\n{\n    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data);\n    glGenerateMipmap(GL_TEXTURE_2D);\n}\nelse\n{\n    std::cout &lt;&lt; \"Failed to load texture\" &lt;&lt; std::endl;\n}\nstbi_image_free(data);\n</code></pre> <ol> <li> <p>\u5e94\u7528\u7eb9\u7406</p> <p></p> <ul> <li>\u58f0\u660e\u4e00\u4e2a<code>uniform sampler2D</code>\u628a\u4e00\u4e2a\u7eb9\u7406\u6dfb\u52a0\u5230\u7247\u6bb5\u7740\u8272\u5668\u4e2d</li> <li>\u4f7f\u7528GLSL\u5185\u5efa\u7684texture\u51fd\u6570\u6765\u91c7\u6837\u7eb9\u7406\u7684\u989c\u8272\uff0c\u5b83\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7eb9\u7406\u91c7\u6837\u5668\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807 <code>FragColor = texture(ourTexture, TexCoord);</code></li> <li>\u7eb9\u7406\u989c\u8272\u548c\u9876\u70b9\u989c\u8272\u6df7\u5408 <code>FragColor = texture(ourTexture, TexCoord) * vec4(ourColor, 1.0);</code></li> </ul> </li> <li> <p>\u7ed1\u5b9a\u7eb9\u7406\u4e4b\u524d\u9700\u8981\u5148\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143</p> <pre><code>glActiveTexture(GL_TEXTURE0); \nglBindTexture(GL_TEXTURE_2D, texture);\n</code></pre> </li> <li> <p>OpenGL\u8981\u6c42y\u8f74<code>0.0</code>\u5750\u6807\u662f\u5728\u56fe\u7247\u7684\u5e95\u90e8\u7684\uff0c\u4f46\u662f\u56fe\u7247\u7684y\u8f74<code>0.0</code>\u5750\u6807\u901a\u5e38\u5728\u9876\u90e8\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u5728\u56fe\u50cf\u52a0\u8f7d\u65f6\u5e2e\u52a9\u6211\u4eec\u7ffb\u8f6cy\u8f74</p> <pre><code>stbi_set_flip_vertically_on_load(true);\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_5","title":"\u53d8\u6362","text":"<ol> <li> <p>example</p> <pre><code>glm::mat4 trans;\ntrans = glm::translate(trans, glm::vec3(1.0f, 1.0f, 0.0f));\n// \u9996\u5148\uff0c\u6211\u4eec\u628a\u7bb1\u5b50\u5728\u6bcf\u4e2a\u8f74\u90fd\u7f29\u653e\u52300.5\u500d\uff0c\u7136\u540e\u6cbfz\u8f74\u65cb\u8f6c90\u5ea6\u3002\ntrans = glm::rotate(trans, glm::radians(90.0f), glm::vec3(0.0, 0.0, 1.0));\ntrans = glm::scale(trans, glm::vec3(0.5, 0.5, 0.5));\n</code></pre> </li> <li> <p>\u7740\u8272\u5668\u4fee\u6539</p> <pre><code>#version 330 core\nlayout (location = 0) in vec3 aPos;\nlayout (location = 1) in vec2 aTexCoord;\n\nout vec2 TexCoord;\n\nuniform mat4 transform;\n\nvoid main()\n{\n    gl_Position = transform * vec4(aPos, 1.0f);\n    TexCoord = vec2(aTexCoord.x, 1.0 - aTexCoord.y);\n}\n</code></pre> </li> <li> <p>\u53d8\u6362\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668</p> <pre><code>unsigned int transformLoc = glGetUniformLocation(ourShader.ID, \"transform\");\n// \u4f4d\u7f6e\u503c\u3001\u53d1\u9001\u77e9\u9635\u6570\u3001\u662f\u5426\u8fdb\u884c\u8f6c\u7f6e\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u3001\u77e9\u9635\u6570\u636e\nglUniformMatrix4fv(transformLoc, 1, GL_FALSE, glm::value_ptr(trans));\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_6","title":"\u5750\u6807\u7cfb\u7edf","text":"<p>5\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7cfb\u7edf\uff1a</p> <ul> <li>\u5c40\u90e8\u7a7a\u95f4(Local Space\uff0c\u6216\u8005\u79f0\u4e3a\u7269\u4f53\u7a7a\u95f4(Object Space))</li> <li>\u4e16\u754c\u7a7a\u95f4(World Space)</li> <li>\u89c2\u5bdf\u7a7a\u95f4(View Space\uff0c\u6216\u8005\u79f0\u4e3a\u89c6\u89c9\u7a7a\u95f4(Eye Space))</li> <li>\u88c1\u526a\u7a7a\u95f4(Clip Space)</li> <li>\u5c4f\u5e55\u7a7a\u95f4(Screen Space)</li> </ul> <ol> <li> <p>\u6b63\u5c04\u6295\u5f71\uff1a\u524d\u4e24\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u7684\u5de6\u53f3\u5750\u6807\uff0c\u7b2c\u4e09\u548c\u7b2c\u56db\u53c2\u6570\u6307\u5b9a\u4e86\u5e73\u622a\u5934\u4f53\u7684\u5e95\u90e8\u548c\u9876\u90e8\u3002\u901a\u8fc7\u8fd9\u56db\u4e2a\u53c2\u6570\u6211\u4eec\u5b9a\u4e49\u4e86\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u7684\u5927\u5c0f\uff0c\u7136\u540e\u7b2c\u4e94\u548c\u7b2c\u516d\u4e2a\u53c2\u6570\u5219\u5b9a\u4e49\u4e86\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u7684\u8ddd\u79bb\u3002</p> <pre><code>glm::ortho(0.0f, 800.0f, 0.0f, 600.0f, 0.1f, 100.0f);\n</code></pre> </li> <li> <p>\u900f\u89c6\u6295\u5f71\uff1a\u79bb\u89c2\u5bdf\u8005\u8d8a\u8fdc\u7684\u9876\u70b9\u5750\u6807w\u5206\u91cf\u8d8a\u5927\uff0c\u8ddd\u79bb\u89c2\u5bdf\u8005\u8d8a\u8fdc\u9876\u70b9\u5750\u6807\u5c31\u4f1a\u8d8a\u5c0f.</p> <pre><code>// fov, \u5bbd\u9ad8\u6bd4\uff0c\u8fd1\u5e73\u9762\uff0c\u8fdc\u5e73\u9762\nglm::mat4 proj = glm::perspective(glm::radians(45.0f), (float)width/(float)height, 0.1f, 100.0f);\n</code></pre> <p></p> </li> <li> <p>z-buffer</p> <pre><code>glEnable(GL_DEPTH_TEST);\nglClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_7","title":"\u6444\u50cf\u673a","text":"<p>\u4e0d\u8981\u5fd8\u8bb0\u6b63z\u8f74\u662f\u4ece\u5c4f\u5e55\u6307\u5411\u4f60\u7684\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6444\u50cf\u673a\u5411\u540e\u79fb\u52a8\uff0c\u6211\u4eec\u5c31\u6cbf\u7740z\u8f74\u7684\u6b63\u65b9\u5411\u79fb\u52a8\u3002</p> <ol> <li> <p>\u6444\u50cf\u673a\u65b9\u5411</p> <pre><code>glm::vec3 cameraTarget = glm::vec3(0.0f, 0.0f, 0.0f);\nglm::vec3 cameraDirection = glm::normalize(cameraPos - cameraTarget);\n</code></pre> </li> <li> <p>\u53f3\u5411\u91cf\uff1a\u4ee3\u8868\u6444\u50cf\u673a\u7a7a\u95f4\u7684x\u8f74\u7684\u6b63\u65b9\u5411\u3002\u4e3a\u83b7\u53d6\u53f3\u5411\u91cf\u6211\u4eec\u9700\u8981\u5148\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e0a\u5411\u91cf(Up Vector)\u3002\u63a5\u4e0b\u6765\u628a\u4e0a\u5411\u91cf\u548c\u7b2c\u4e8c\u6b65\u5f97\u5230\u7684\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\u3002\u4e24\u4e2a\u5411\u91cf\u53c9\u4e58\u7684\u7ed3\u679c\u4f1a\u540c\u65f6\u5782\u76f4\u4e8e\u4e24\u5411\u91cf\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5f97\u5230\u6307\u5411x\u8f74\u6b63\u65b9\u5411\u7684\u90a3\u4e2a\u5411\u91cf</p> <pre><code>glm::vec3 up = glm::vec3(0.0f, 1.0f, 0.0f); \nglm::vec3 cameraRight = glm::normalize(glm::cross(up, cameraDirection));\n</code></pre> </li> <li> <p>\u4e0a\u8f74\uff1a\u628a\u53f3\u5411\u91cf\u548c\u65b9\u5411\u5411\u91cf\u8fdb\u884c\u53c9\u4e58\uff0c\u83b7\u53d6\u4e00\u4e2a\u6307\u5411\u6444\u50cf\u673a\u7684\u6b63y\u8f74\u5411\u91cf</p> <pre><code>glm::vec3 cameraUp = glm::cross(cameraDirection, cameraRight);\n</code></pre> </li> <li> <p>LookAt\u77e9\u9635\uff1a\u6ce8\u610f\uff0c\u4f4d\u7f6e\u5411\u91cfP\u662f\u76f8\u53cd\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u5e0c\u671b\u628a\u4e16\u754c\u5e73\u79fb\u5230\u4e0e\u6211\u4eec\u81ea\u8eab\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411</p> </li> </ol> \\[ LookAt = \\begin{bmatrix} \\color{red}{R_x} &amp; \\color{red}{R_y} &amp; \\color{red}{R_z} &amp; 0 \\newline \\color{green}{U_x} &amp; \\color{green}{U_y} &amp; \\color{green}{U_z} &amp; 0 \\newline \\color{blue}{D_x} &amp; \\color{blue}{D_y} &amp; \\color{blue}{D_z} &amp; 0 \\newline 0 &amp; 0 &amp; 0  &amp; 1 \\end{bmatrix} * \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; -\\color{purple}{P_x} \\newline 0 &amp; 1 &amp; 0 &amp; -\\color{purple}{P_y} \\newline 0 &amp; 0 &amp; 1 &amp; -\\color{purple}{P_z} \\newline 0 &amp; 0 &amp; 0  &amp; 1 \\end{bmatrix} \\] <ol> <li> <p>\u6211\u4eec\u8981\u505a\u7684\u53ea\u662f\u5b9a\u4e49\u4e00\u4e2a\u6444\u50cf\u673a\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\u548c\u4e00\u4e2a\u8868\u793a\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4e0a\u5411\u91cf\u7684\u5411\u91cf</p> <pre><code>glm::mat4 view;\nview = glm::lookAt(glm::vec3(0.0f, 0.0f, 3.0f), \n            glm::vec3(0.0f, 0.0f, 0.0f), \n            glm::vec3(0.0f, 1.0f, 0.0f));\n</code></pre> </li> <li> <p>\u81ea\u7531\u79fb\u52a8</p> <pre><code>glm::vec3 cameraPos   = glm::vec3(0.0f, 0.0f,  3.0f);\nglm::vec3 cameraFront = glm::vec3(0.0f, 0.0f, -1.0f);\nglm::vec3 cameraUp    = glm::vec3(0.0f, 1.0f,  0.0f);\nview = glm::lookAt(cameraPos, cameraPos + cameraFront, cameraUp);\n</code></pre> </li> <li> <p>\u6839\u636e\u6309\u952e\u79fb\u52a8\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5411\u5de6\u53f3\u79fb\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u53c9\u4e58\u6765\u521b\u5efa\u4e00\u4e2a\u53f3\u5411\u91cf(Right Vector)\uff0c\u5e76\u6cbf\u7740\u5b83\u76f8\u5e94\u79fb\u52a8\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u5c31\u521b\u5efa\u4e86\u4f7f\u7528\u6444\u50cf\u673a\u65f6\u719f\u6089\u7684\u6a2a\u79fb(Strafe)\u6548\u679c\u3002</p> <pre><code>void processInput(GLFWwindow *window)\n{\n    ...\n    float cameraSpeed = 0.05f; // adjust accordingly\n    if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS)\n        cameraPos += cameraSpeed * cameraFront;\n    if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS)\n        cameraPos -= cameraSpeed * cameraFront;\n    if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)\n        cameraPos -= glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed;\n    if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)\n        cameraPos += glm::normalize(glm::cross(cameraFront, cameraUp)) * cameraSpeed;\n}\n</code></pre> </li> <li> <p>\u6b27\u62c9\u89d2\uff1a\u5305\u62ec\u4fef\u4ef0\u89d2(Pitch), \u504f\u822a\u89d2(Yaw), \u6eda\u8f6c\u89d2(Roll)</p> <p></p> <pre><code>direction.x = cos(glm::radians(pitch)) * cos(glm::radians(yaw));\ndirection.y = sin(glm::radians(pitch));\ndirection.z = cos(glm::radians(pitch)) * sin(glm::radians(yaw));\n</code></pre> </li> <li> <p>\u9f20\u6807\u8f93\u5165</p> <pre><code>glfwSetInputMode(window, GLFW_CURSOR, GLFW_CURSOR_DISABLED); // \u4e0d\u663e\u793a\u5149\u6807\nvoid mouse_callback(GLFWwindow* window, double xpos, double ypos); // \u76d1\u542c\u9f20\u6807\u4e8b\u4ef6\nglfwSetCursorPosCallback(window, mouse_callback); // \u6ce8\u518c\u56de\u8c03\u51fd\u6570\n</code></pre> </li> <li> <p>\u52a0\u5165\u9650\u5236</p> <pre><code>if(pitch &gt; 89.0f)\n  pitch =  89.0f;\nif(pitch &lt; -89.0f)\n  pitch = -89.0f;\n</code></pre> <p>\u521a\u8fdb\u5165\u5c4f\u5e55\u65f6\uff0c\u83b7\u53d6\u5e76\u8bbe\u7f6e\u4e3a\u521d\u59cb\u4f4d\u7f6e\uff0c\u4f18\u5316\u4f53\u9a8c</p> <pre><code>if(firstMouse) // \u8fd9\u4e2abool\u53d8\u91cf\u521d\u59cb\u65f6\u662f\u8bbe\u5b9a\u4e3atrue\u7684\n{\n    lastX = xpos;\n    lastY = ypos;\n    firstMouse = false;\n}\n</code></pre> </li> <li> <p>\u9f20\u6807\u7f29\u653e</p> <pre><code>void scroll_callback(GLFWwindow* window, double xoffset, double yoffset)\n{\n  if(fov &gt;= 1.0f &amp;&amp; fov &lt;= 45.0f)\n    fov -= yoffset;\n  if(fov &lt;= 1.0f)\n    fov = 1.0f;\n  if(fov &gt;= 45.0f)\n    fov = 45.0f;\n}\n\n// \u66f4\u65b0\u900f\u89c6\u6295\u5f71\u77e9\u9635\nprojection = glm::perspective(glm::radians(fov), 800.0f / 600.0f, 0.1f, 100.0f);\n//\u6ce8\u518c\u56de\u8c03\u51fd\u6570\nglfwSetScrollCallback(window, scroll_callback);\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_8","title":"\u5149\u7167","text":""},{"location":"OpenGL/learnopengl/#_9","title":"\u989c\u8272","text":"<ol> <li> <p>\u4e3a\u706f\u5355\u72ec\u521b\u5efa\u4e00\u5957\u7740\u8272\u5668\uff0c\u4f7f\u5f97\u5176\u4e0d\u53d7\u5f71\u54cd</p> <pre><code>#version 330 core\nout vec4 FragColor;\n\nvoid main()\n{\n    FragColor = vec4(1.0); // \u5c06\u5411\u91cf\u7684\u56db\u4e2a\u5206\u91cf\u5168\u90e8\u8bbe\u7f6e\u4e3a1.0\n}\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_10","title":"\u57fa\u7840\u5149\u7167","text":"<ol> <li> <p>Phong Lighting Model: \u7531\u73af\u5883\u5149\u7167(Ambient),\u6f2b\u53cd\u5c04(Diffuse)\u548c\u955c\u9762\u5149\u7167(Specular)\u4e09\u90e8\u5206\u6784\u6210</p> </li> <li> <p>\u73af\u5883\u5149\u7167\uff1a\u7b80\u5355\u5b9e\u73b0\uff0c\u6211\u4eec\u7528\u5149\u7684\u989c\u8272\u4e58\u4ee5\u4e00\u4e2a\u5f88\u5c0f\u7684\u73af\u5883\u56e0\u5b50\u518d\u4e58\u4ee5\u7269\u4f53\u989c\u8272</p> </li> <li> <p>\u6f2b\u53cd\u5c04\u5149\u7167\uff1a\u9700\u8981\u52a0\u5165\u6cd5\u5411\u91cfnormal</p> <pre><code>// \u4e0b\u9762\u4ec5\u4e3a\u8ba1\u7b97\u90e8\u5206\uff0c\u4e0d\u5305\u542b\u5b9a\u4e49\nvec3 norm = normalize(Normal);\nvec3 lightDir = normalize(lightPos - FragPos);\nfloat diff = max(dot(norm, lightDir), 0.0);\nvec3 diffuse = diff * lightColor;\nvec3 result = (ambient + diffuse) * objectColor;\nFragColor = vec4(result, 1.0);\n</code></pre> </li> <li> <p>\u628a\u6cd5\u5411\u91cf\u4e5f\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u4f7f\u7528\u6cd5\u7ebf\u77e9\u9635\uff0c\u4e3a\u6a21\u578b\u77e9\u9635\u5de6\u4e0a\u89d23x3\u90e8\u5206\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635</p> </li> <li> <p>\u955c\u9762\u5149\u7167\uff1a\u8fd9\u4e2a32\u662f\u9ad8\u5149\u7684\u53cd\u5149\u5ea6(Shininess)\u3002\u4e00\u4e2a\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u8d8a\u9ad8\uff0c\u53cd\u5c04\u5149\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u6563\u5c04\u5f97\u8d8a\u5c11\uff0c\u9ad8\u5149\u70b9\u5c31\u4f1a\u8d8a\u5c0f\u3002</p> <pre><code>float specularStrength = 0.5;\nvec3 viewDir = normalize(viewPos - FragPos);\nvec3 reflectDir = reflect(-lightDir, norm);\nfloat spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);\nvec3 specular = specularStrength * spec * lightColor;\nvec3 result = (ambient + diffuse + specular) * objectColor;\nFragColor = vec4(result, 1.0);\n</code></pre> </li> </ol>"},{"location":"OpenGL/learnopengl/#_11","title":"\u5149\u7167\u8d34\u56fe","text":"<p>\u6f2b\u53cd\u5c04\u8d34\u56fe Diffuse Map</p> <p>\u955c\u9762\u5149\u8d34\u56fe Specular Map</p>"},{"location":"OpenGL/learnopengl/#_12","title":"\u6295\u5149\u7269","text":"<ol> <li> <p>\u5e73\u884c\u5149\uff1a\u53ea\u9700\u8981\u4e00\u4e2a\u65b9\u5411\u5411\u91cf</p> </li> <li> <p>\u8870\u51cf\uff1a\u968f\u7740\u5149\u7ebf\u4f20\u64ad\u8ddd\u79bb\u7684\u589e\u957f\u9010\u6e10\u524a\u51cf\u5149\u7684\u5f3a\u5ea6\u901a\u5e38\u53eb\u505a\u8870\u51cf(Attenuation)\u3002\u9700\u8981\u4f7f\u7528\u5e38\u6570\u9879\u3001\u4e00\u6b21\u9879\u548c\u4e8c\u6b21\u9879\u3002\u4e0b\u8868\u7b2c\u4e00\u5217\u662f\u91c7\u7528\u5bf9\u5e94\u516c\u5f0f\u65f6\u5149\u6e90\u53ef\u4ee5\u8986\u76d6\u7684\u8ddd\u79bb</p> <p></p> <ul> <li>\u5b9e\u73b0</li> </ul> <p>```c++   struct Light {       vec3 position;  </p> <pre><code>  vec3 ambient;\n  vec3 diffuse;\n  vec3 specular;\n\n  float constant;\n  float linear;\n  float quadratic;\n</code></pre> <p>};</p> <pre><code>float distance    = length(light.position - FragPos);\nfloat attenuation = 1.0 / (light.constant + light.linear * distance + \n                light.quadratic * (distance * distance));\n```\n</code></pre> </li> <li> <p>\u805a\u5149\uff1a\u5b83\u53ea\u671d\u4e00\u4e2a\u7279\u5b9a\u65b9\u5411\u800c\u4e0d\u662f\u6240\u6709\u65b9\u5411\u7167\u5c04\u5149\u7ebf\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u5c31\u662f\u53ea\u6709\u5728\u805a\u5149\u65b9\u5411\u7684\u7279\u5b9a\u534a\u5f84\u5185\u7684\u7269\u4f53\u624d\u4f1a\u88ab\u7167\u4eae\uff0c\u5176\u5b83\u7684\u7269\u4f53\u90fd\u4f1a\u4fdd\u6301\u9ed1\u6697\u3002OpenGL\u4e2d\u805a\u5149\u662f\u7528\u4e00\u4e2a\u4e16\u754c\u7a7a\u95f4\u4f4d\u7f6e\u3001\u4e00\u4e2a\u65b9\u5411\u548c\u4e00\u4e2a\u5207\u5149\u89d2(Cutoff Angle)\u6765\u8868\u793a\u7684\uff0c\u8fd9\u91cc\u7684\u5207\u5149\u89d2\u662f\u5706\u9525\u7684\u9525\u89d2</p> <ul> <li><code>LightDir</code>\uff1a\u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002</li> <li><code>SpotDir</code>\uff1a\u805a\u5149\u6240\u6307\u5411\u7684\u65b9\u5411\u3002</li> <li><code>Phi</code>\uff1a\u6307\u5b9a\u4e86\u805a\u5149\u534a\u5f84\u7684\u5207\u5149\u89d2\u3002\u843d\u5728\u8fd9\u4e2a\u89d2\u5ea6\u4e4b\u5916\u7684\u7269\u4f53\u90fd\u4e0d\u4f1a\u88ab\u8fd9\u4e2a\u805a\u5149\u6240\u7167\u4eae\u3002</li> <li><code>Theta</code>\uff1aLightDir\u5411\u91cf\u548cSpotDir\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002\u5728\u805a\u5149\u5185\u90e8\u7684\u8bdd\u503c\u5e94\u8be5\u6bd4\u503c\u5c0f\u3002</li> </ul> </li> <li> <p>\u5e73\u6ed1/\u8f6f\u5316\u8fb9\u7f18</p> <pre><code>float theta     = dot(lightDir, normalize(-light.direction));\nfloat epsilon   = light.cutOff - light.outerCutOff;\nfloat intensity = clamp((theta - light.outerCutOff) / epsilon, 0.0, 1.0);    \n</code></pre> </li> </ol>"},{"location":"TCS/","title":"\u7406\u8bba\u8ba1\u7b97\u673a\u8bbe\u8ba1\u57fa\u7840","text":"<p>Abstract</p> <ul> <li>2024fall</li> <li>Teacher: \u6bdb\u5b87\u5c18</li> <li>\u4ee5\u4e0b\u4e3a\u4e0a\u8bfe\u624b\u5199\u7b14\u8bb0</li> </ul> TCS 90.1 MB / 41 P  <p> \u4e0b\u8f7d</p>"}]}